{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\n\nvar CustomData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomData, _Component);\n\n  function CustomData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      data: [],\n      graphs: [],\n      chartOptions: {\n        chart: {\n          zoomType: 'x'\n        },\n        title: {\n          text: 'BTC to EUR exchange rate over time'\n        },\n        subtitle: {\n          text: 'Click and drag in the plot area to zoom in'\n        },\n        xAxis: {\n          type: 'datetime'\n        },\n        yAxis: {\n          title: {\n            text: 'Exchange rate'\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        plotOptions: {\n          area: {\n            fillColor: {\n              linearGradient: {\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 1\n              },\n              stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n            },\n            marker: {\n              radius: 2\n            },\n            lineWidth: 1,\n            states: {\n              hover: {\n                lineWidth: 1\n              }\n            },\n            threshold: null\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addGraph\", function () {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      graphs.push({\n        id: 1,\n        data: {\n          name: \"Bitcoin\"\n        }\n      });\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CustomData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = auth.getCurrentUser();\n                this.setState({\n                  user: user\n                });\n                _context.next = 4;\n                return crypto.getCurrencies().then(function (res) {\n                  var bkOptions = _objectSpread({}, _this2.state.options);\n\n                  bkOptions.series = [{\n                    type: \"area\",\n                    name: \"BTC to EUR\",\n                    data: res.data\n                  }];\n\n                  _this2.setState({\n                    data: res.data,\n                    options: bkOptions\n                  });\n                });\n\n              case 4:\n                //options.series[0].data = this.state.data;\n                console.log(this.state.options);\n                console.log(this.state.data);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Hello \", this.state.user.name), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"+\"), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.graphs.length > 0 ? this.state.graphs.map(function (item) {\n        return __jsx(HighchartsReact, {\n          key: item.id,\n          highcharts: Highcharts,\n          options: _this3.state.options,\n          oneToOne: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      }) : \"\"));\n    }\n  }]);\n\n  return CustomData;\n}(Component);\n\nexport { CustomData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","CustomData","user","data","graphs","chartOptions","chart","zoomType","title","text","subtitle","xAxis","type","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","state","push","id","name","setState","getCurrentUser","getCurrencies","then","res","bkOptions","options","series","console","log","addGraph","length","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: [],\r\n    graphs: [],\r\n    chartOptions: {\r\n      chart: {zoomType: 'x' },\r\n      title: {text: 'BTC to EUR exchange rate over time'},\r\n      subtitle: {text: 'Click and drag in the plot area to zoom in'},\r\n      xAxis: { type: 'datetime'},\r\n      yAxis: {\r\n          title: {text: 'Exchange rate'}\r\n      },\r\n      legend: {enabled: false},\r\n      plotOptions: {\r\n          area: {\r\n              fillColor: {\r\n                  linearGradient: {\r\n                      x1: 0,\r\n                      y1: 0,\r\n                      x2: 0,\r\n                      y2: 1\r\n                  },\r\n                  stops: [\r\n                    [0, \"#7cb5ec\"],\r\n                    [0.5, \"#7cb5ec80\"],\r\n                    [0.9, \"#7cb5ff33\"]\r\n                ]\r\n              },\r\n              marker: {radius: 2},\r\n              lineWidth: 1,\r\n              states: {\r\n                  hover: {lineWidth: 1}\r\n              },\r\n              threshold: null\r\n          }\r\n      }\r\n    }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\t  const user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    await crypto.getCurrencies().then(res => {\r\n      const bkOptions = {...this.state.options};\r\n      bkOptions.series = [{\r\n        type: \"area\",\r\n        name: \"BTC to EUR\",\r\n        data: res.data\r\n      }]\r\n      this.setState({\r\n        data: res.data,\r\n        options: bkOptions\r\n        })\r\n    });\r\n    //options.series[0].data = this.state.data;\r\n    console.log(this.state.options);    console.log(this.state.data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    //const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n              this.state.graphs.map(item => <HighchartsReact key={item.id} highcharts={Highcharts} options={this.state.options} oneToOne={true}/>): \"\"}\r\n            {/* {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options}/>\r\n                    </div> \r\n            ): \"\"} */}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}