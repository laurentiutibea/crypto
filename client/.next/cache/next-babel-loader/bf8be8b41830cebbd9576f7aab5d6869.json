{"ast":null,"code":"import http from \"./httpService\";\nimport { apiUrl } from \"../config\";\nimport jwtDecode from \"jwt-decode\";\nconst apiEndpoit = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiEndpoit, {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\nexport async function confirmLogin(email, password) {\n  return await http.post(apiEndpoit, {\n    email,\n    password\n  });\n}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport async function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    http.setJwt(getJwt());\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  const jwt = localStorage.getItem(tokenKey);\n  return jwt;\n}\nexport default {\n  login,\n  confirmLogin,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};","map":{"version":3,"sources":["/home/laurentiu/Documents/crypto/client/services/authService.js"],"names":["http","apiUrl","jwtDecode","apiEndpoit","tokenKey","login","email","password","data","jwt","post","localStorage","setItem","confirmLogin","loginWithJwt","logout","removeItem","getCurrentUser","getItem","setJwt","getJwt","ex"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,UAAU,GAAGF,MAAM,GAAG,OAA5B;AACA,MAAMG,QAAQ,GAAG,OAAjB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAqC;AAC3C,QAAM;AAACC,IAAAA,IAAI,EAAEC;AAAP,MAAc,MAAMT,IAAI,CAACU,IAAL,CAAUP,UAAV,EAAsB;AAACG,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAtB,CAA1B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAA+BK,GAA/B;AACA;AAED,OAAO,eAAeI,YAAf,CAA4BP,KAA5B,EAAmCC,QAAnC,EAA4C;AAClD,SAAO,MAAMP,IAAI,CAACU,IAAL,CAAUP,UAAV,EAAsB;AAACG,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAtB,CAAb;AACA;AAED,OAAO,SAASO,YAAT,CAAsBL,GAAtB,EAA0B;AAChCE,EAAAA,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAA+BK,GAA/B;AACA;AAED,OAAO,eAAeM,MAAf,GAAuB;AAC7BJ,EAAAA,YAAY,CAACK,UAAb,CAAwBZ,QAAxB;AACA;AAED,OAAO,SAASa,cAAT,GAAyB;AAC/B,MAAG;AACF,UAAMR,GAAG,GAAGE,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAZ;AACAlB,IAAAA,IAAI,CAACmB,MAAL,CAAYC,MAAM,EAAlB;AACA,WAAOlB,SAAS,CAACO,GAAD,CAAhB;AACA,GAJD,CAKA,OAAMY,EAAN,EAAS;AACR,WAAO,IAAP;AACA;AACD;AAED,OAAO,SAASD,MAAT,GAAiB;AACvB,QAAMX,GAAG,GAAGE,YAAY,CAACO,OAAb,CAAqBd,QAArB,CAAZ;AACA,SAAOK,GAAP;AACA;AAED,eAAc;AACbJ,EAAAA,KADa;AAEbQ,EAAAA,YAFa;AAGbC,EAAAA,YAHa;AAIbC,EAAAA,MAJa;AAKbE,EAAAA,cALa;AAMbG,EAAAA;AANa,CAAd","sourcesContent":["import http from \"./httpService\";\nimport {apiUrl} from \"../config\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoit = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nexport async function login(email, password){\n\tconst {data: jwt} = await http.post(apiEndpoit, {email, password});\n\tlocalStorage.setItem(tokenKey, jwt);\n}\n\nexport async function confirmLogin(email, password){\n\treturn await http.post(apiEndpoit, {email, password});\n}\n\nexport function loginWithJwt(jwt){\n\tlocalStorage.setItem(tokenKey, jwt);\n}\n\nexport async function logout(){\n\tlocalStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser(){\n\ttry{\n\t\tconst jwt = localStorage.getItem(\"token\");\n\t\thttp.setJwt(getJwt());\n\t\treturn jwtDecode(jwt);\n\t}\n\tcatch(ex){\n\t\treturn null;\n\t}\n}\n\nexport function getJwt(){\n\tconst jwt = localStorage.getItem(tokenKey);\n\treturn jwt;\n}\n\nexport default{\n\tlogin,\n\tconfirmLogin,\n\tloginWithJwt,\n\tlogout,\n\tgetCurrentUser,\n\tgetJwt\n}"]},"metadata":{},"sourceType":"module"}