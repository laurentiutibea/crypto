{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\n\nvar CustomData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomData, _Component);\n\n  function CustomData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      data: {\n        data: [],\n        timestamp: \"\"\n      },\n      graphs: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addGraph\", function () {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      graphs.push({\n        id: 1,\n        data: {\n          name: \"Bitcoin\"\n        }\n      });\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CustomData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = auth.getCurrentUser();\n                this.setState({\n                  user: user\n                });\n                _context.next = 4;\n                return crypto.getCurrencies().then(function (res) {\n                  return _this2.setState({\n                    data: res.data\n                  });\n                });\n\n              case 4:\n                console.log(this.state.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var select = __jsx(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.data.data.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      }));\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Hello \", this.state.user.name), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"+\"), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.graphs.length > 0 ? this.state.graphs.map(function (item) {\n        return __jsx(\"div\", {\n          className: \"col-md-6\",\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, select, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, item.data.name));\n      }) : \"\"));\n    }\n  }]);\n\n  return CustomData;\n}(Component);\n\nexport { CustomData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","auth","crypto","CustomData","user","data","timestamp","graphs","state","push","id","name","setState","getCurrentUser","getCurrencies","then","res","console","log","select","map","item","symbol","addGraph","length"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;IAEqBC,U;;;;;;;;;;;;;;;;;;4DACX;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE;AACFA,QAAAA,IAAI,EAAE,EADJ;AAEFC,QAAAA,SAAS,EAAE;AAFT,OAFA;AAMNC,MAAAA,MAAM,EAAE;AANF,K;;+DAgBG,YAAM;AACb,UAAMA,MAAM,sBAAO,MAAKC,KAAL,CAAWD,MAAlB,CAAZ;;AACAA,MAAAA,MAAM,CAACE,IAAP,CAAY;AACRC,QAAAA,EAAE,EAAE,CADI;AAERL,QAAAA,IAAI,EAAE;AACFM,UAAAA,IAAI,EAAE;AADJ;AAFE,OAAZ;;AAMA,YAAKC,QAAL,CAAc;AAACL,QAAAA,MAAM,EAANA;AAAD,OAAd;AACH,K;;;;;;;;;;;;;;;;;;AAfIH,gBAAAA,I,GAAOH,IAAI,CAACY,cAAL,E;AACV,qBAAKD,QAAL,CAAc;AAACR,kBAAAA,IAAI,EAAJA;AAAD,iBAAd;;uBACMF,MAAM,CAACY,aAAP,GAAuBC,IAAvB,CAA4B,UAAAC,GAAG;AAAA,yBAAI,MAAI,CAACJ,QAAL,CAAc;AAACP,oBAAAA,IAAI,EAAEW,GAAG,CAACX;AAAX,mBAAd,CAAJ;AAAA,iBAA/B,C;;;AACNY,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWH,IAAvB;;;;;;;;;;;;;;;;;;6BAcO;AACP,UAAMc,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKX,KAAL,CAAWH,IAAX,CAAgBA,IAAhB,CAAqBe,GAArB,CAAyB,UAAAC,IAAI;AAAA,eAAK;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACX,EAApB;AAAwB,UAAA,GAAG,EAAEW,IAAI,CAACX,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCW,IAAI,CAACV,IAA5C,SAAqDU,IAAI,CAACC,MAA1D,CAAL;AAAA,OAA7B,CAAT,CAAf;;AAEA,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU,KAAKd,KAAL,CAAWJ,IAAX,CAAgBO,IAA1B,CADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKY,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKf,KAAL,CAAWD,MAAX,CAAkBiB,MAAlB,GAA2B,CAA3B,GACG,KAAKhB,KAAL,CAAWD,MAAX,CAAkBa,GAAlB,CAAsB,UAAAC,IAAI;AAAA,eACtB;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,GAAG,EAAEA,IAAI,CAACX,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKS,MADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIE,IAAI,CAAChB,IAAL,CAAUM,IAAd,CAFJ,CADsB;AAAA,OAA1B,CADH,GAME,EAPL,CAHJ,CADF;AAeD;;;;EA9CqCZ,S;;SAAnBI,U","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: {\r\n        data: [],\r\n        timestamp: \"\"\r\n    },\r\n    graphs: []\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\tconst user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    await crypto.getCurrencies().then(res => this.setState({data: res.data}));\r\n    console.log(this.state.data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                    </div> \r\n            ): \"\"}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}