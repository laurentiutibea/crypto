{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config\";\nimport jwtDecode from \"jwt-decode\";\nvar apiEndpoit = apiUrl + \"/auth\";\nvar tokenKey = \"token\";\nexport function login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(email, password) {\n    var _ref, jwt;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return http.post(apiEndpoit, {\n              email: email,\n              password: password\n            });\n\n          case 2:\n            _ref = _context.sent;\n            jwt = _ref.data;\n            localStorage.setItem(tokenKey, jwt);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nexport function confirmLogin(_x3, _x4) {\n  return _confirmLogin.apply(this, arguments);\n}\n\nfunction _confirmLogin() {\n  _confirmLogin = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(email, password) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return http.post(apiEndpoit, {\n              email: email,\n              password: password\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _confirmLogin.apply(this, arguments);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function logout() {\n  return _logout.apply(this, arguments);\n}\n\nfunction _logout() {\n  _logout = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            localStorage.removeItem(tokenKey);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _logout.apply(this, arguments);\n}\n\nexport function getCurrentUser() {\n  try {\n    var jwt = localStorage.getItem(\"token\");\n    http.setJwt(getJwt());\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  var jwt = localStorage.getItem(tokenKey);\n  return jwt;\n}\nexport default {\n  login: login,\n  confirmLogin: confirmLogin,\n  loginWithJwt: loginWithJwt,\n  logout: logout,\n  getCurrentUser: getCurrentUser,\n  getJwt: getJwt\n};","map":{"version":3,"sources":["/home/laurentiu/Documents/crypto/client/services/authService.js"],"names":["http","apiUrl","jwtDecode","apiEndpoit","tokenKey","login","email","password","post","jwt","data","localStorage","setItem","confirmLogin","loginWithJwt","logout","removeItem","getCurrentUser","getItem","setJwt","getJwt","ex"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,UAAU,GAAGF,MAAM,GAAG,OAA5B;AACA,IAAMG,QAAQ,GAAG,OAAjB;AAEA,gBAAsBC,KAAtB;AAAA;AAAA;;;;;2BAAO,iBAAqBC,KAArB,EAA4BC,QAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACoBP,IAAI,CAACQ,IAAL,CAAUL,UAAV,EAAsB;AAACG,cAAAA,KAAK,EAALA,KAAD;AAAQC,cAAAA,QAAQ,EAARA;AAAR,aAAtB,CADpB;;AAAA;AAAA;AACOE,YAAAA,GADP,QACCC,IADD;AAENC,YAAAA,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAA+BK,GAA/B;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBI,YAAtB;AAAA;AAAA;;;;;2BAAO,kBAA4BP,KAA5B,EAAmCC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOP,IAAI,CAACQ,IAAL,CAAUL,UAAV,EAAsB;AAACG,cAAAA,KAAK,EAALA,KAAD;AAAQC,cAAAA,QAAQ,EAARA;AAAR,aAAtB,CADP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,OAAO,SAASO,YAAT,CAAsBL,GAAtB,EAA0B;AAChCE,EAAAA,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAA+BK,GAA/B;AACA;AAED,gBAAsBM,MAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AACNJ,YAAAA,YAAY,CAACK,UAAb,CAAwBZ,QAAxB;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,OAAO,SAASa,cAAT,GAAyB;AAC/B,MAAG;AACF,QAAMR,GAAG,GAAGE,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAZ;AACAlB,IAAAA,IAAI,CAACmB,MAAL,CAAYC,MAAM,EAAlB;AACA,WAAOlB,SAAS,CAACO,GAAD,CAAhB;AACA,GAJD,CAKA,OAAMY,EAAN,EAAS;AACR,WAAO,IAAP;AACA;AACD;AAED,OAAO,SAASD,MAAT,GAAiB;AACvB,MAAMX,GAAG,GAAGE,YAAY,CAACO,OAAb,CAAqBd,QAArB,CAAZ;AACA,SAAOK,GAAP;AACA;AAED,eAAc;AACbJ,EAAAA,KAAK,EAALA,KADa;AAEbQ,EAAAA,YAAY,EAAZA,YAFa;AAGbC,EAAAA,YAAY,EAAZA,YAHa;AAIbC,EAAAA,MAAM,EAANA,MAJa;AAKbE,EAAAA,cAAc,EAAdA,cALa;AAMbG,EAAAA,MAAM,EAANA;AANa,CAAd","sourcesContent":["import http from \"./httpService\";\nimport {apiUrl} from \"../config\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoit = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nexport async function login(email, password){\n\tconst {data: jwt} = await http.post(apiEndpoit, {email, password});\n\tlocalStorage.setItem(tokenKey, jwt);\n}\n\nexport async function confirmLogin(email, password){\n\treturn await http.post(apiEndpoit, {email, password});\n}\n\nexport function loginWithJwt(jwt){\n\tlocalStorage.setItem(tokenKey, jwt);\n}\n\nexport async function logout(){\n\tlocalStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser(){\n\ttry{\n\t\tconst jwt = localStorage.getItem(\"token\");\n\t\thttp.setJwt(getJwt());\n\t\treturn jwtDecode(jwt);\n\t}\n\tcatch(ex){\n\t\treturn null;\n\t}\n}\n\nexport function getJwt(){\n\tconst jwt = localStorage.getItem(tokenKey);\n\treturn jwt;\n}\n\nexport default{\n\tlogin,\n\tconfirmLogin,\n\tloginWithJwt,\n\tlogout,\n\tgetCurrentUser,\n\tgetJwt\n}"]},"metadata":{},"sourceType":"module"}