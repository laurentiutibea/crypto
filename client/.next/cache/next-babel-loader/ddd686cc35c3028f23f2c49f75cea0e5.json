{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nvar chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\n\nvar CustomData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomData, _Component);\n\n  function CustomData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      jwt: \"\",\n      data: [],\n      graphs: [],\n      cryptocurrencies: [],\n      currencies: [],\n      selectedCryptocurrency: {},\n      selectedCurrency: {},\n      workers: 0,\n      loading: false,\n      loaded: false,\n      searchQueryCryptocurrencies: \"\",\n      searchQueryCurrencies: \"\",\n      interval: [],\n      loadArr: [],\n      chartOptions: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addGraph\", function () {\n      var worker = new Worker(\"static/service-worker.js\");\n\n      var bkOptions = _objectSpread({}, chartOptions);\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      var loadArr = _toConsumableArray(_this.state.loadArr);\n\n      worker.onmessage = function (e) {\n        bkOptions.title = {\n          text: \"\".concat(_this.state.selectedCryptocurrency.name, \" to \").concat(_this.state.selectedCurrency.name, \" exchange rate over time\")\n        };\n        bkOptions.series = [{\n          type: \"line\",\n          name: \"\".concat(_this.state.selectedCryptocurrency.name, \" to \").concat(_this.state.selectedCurrency.name),\n          data: e.data.prices\n        }];\n        bkOptions.xAxis.categories = _toConsumableArray(e.data.time);\n        graphs.push({\n          id: _Date$now(),\n          chartOptions: bkOptions,\n          cryptocurrency: _this.state.selectedCryptocurrency.value,\n          currency: _this.state.selectedCurrency.value,\n          live: false,\n          image: e.data.image\n        });\n        loadArr.push(false);\n\n        _this.setState({\n          graphs: graphs,\n          workers: _this.state.workers + 1,\n          interval: \"\",\n          loadArr: loadArr\n        });\n      };\n\n      worker.postMessage(\"\".concat(_this.state.selectedCryptocurrency.value, \",\").concat(_this.state.selectedCurrency.value, \",\").concat(_this.state.jwt));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"findName\", function (array, value) {\n      for (var i = 0; i < _this.state[array].length; i++) {\n        if (_this.state[array][i].id === value) {\n          return _this.state[array][i].name;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeCryptocurrency\", function (e, array) {\n      var name = _this.findName(array, e.target.value);\n\n      _this.setState(_defineProperty({}, \"selected\".concat(e.target.name), {\n        value: e.target.value,\n        name: name\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeGraphCryptocurrency\", function (e, index) {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      graphs[index][e.target.name.toLowerCase()] = e.target.value;\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshAll\", function () {\n      var workers = new Array(_this.state.workers);\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      _this.setState({\n        loading: true\n      });\n\n      var _loop = function _loop(i) {\n        workers[i] = new Worker(\"static/service-worker.js\");\n\n        workers[i].onmessage = function (e) {\n          graphs[i].chartOptions.xAxis.categories = _toConsumableArray(e.data.time);\n          graphs[i].chartOptions.series = [{\n            type: \"line\",\n            name: _this.state.graphs[i].chartOptions.series[0].name,\n            data: e.data.prices,\n            connectNulls: true\n          }];\n\n          _this.setState({\n            graphs: graphs,\n            loading: false\n          });\n        };\n\n        workers[i].postMessage(\"\".concat(graphs[i].cryptocurrency, \",\").concat(graphs[i].currency, \",\").concat(_this.state.jwt));\n      };\n\n      for (var i = 0; i < _this.state.workers; i++) {\n        _loop(i);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshSingle\", function (index) {\n      var worker = new Worker(\"static/service-worker.js\");\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      var loadArr = _toConsumableArray(_this.state.loadArr);\n\n      loadArr[index] = true;\n\n      _this.setState({\n        loadArr: loadArr\n      });\n\n      worker.onmessage = function (e) {\n        var cryptocurrency = _this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\n\n        var currency = _this.findName(\"currencies\", graphs[index].currency);\n\n        graphs[index].chartOptions.title = {\n          text: \"\".concat(cryptocurrency, \" to \").concat(currency, \" exchange rate over time\")\n        };\n        graphs[index].chartOptions.xAxis.categories = _toConsumableArray(e.data.time);\n        graphs[index].image = e.data.image;\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: \"\".concat(graphs[index].cryptocurrency, \" to \").concat(graphs[index].currency),\n          data: e.data.prices,\n          connectNulls: true\n        }];\n        loadArr[index] = false;\n\n        _this.setState({\n          graphs: graphs,\n          loadArr: loadArr\n        });\n      };\n\n      worker.postMessage(\"\".concat(graphs[index].cryptocurrency, \",\").concat(graphs[index].currency, \",\").concat(_this.state.jwt));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeGraph\", function (index) {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      clearInterval(graphs[index].interval);\n      graphs = graphs.filter(function (item, i) {\n        return i !== index;\n      });\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"liveData\", function (index) {\n      var worker = new Worker(\"static/service-worker.js\");\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      var loadArr = _toConsumableArray(_this.state.loadArr);\n\n      loadArr[index] = true;\n\n      _this.setState({\n        loadArr: loadArr\n      });\n\n      worker.onmessage = function (e) {\n        graphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\n        graphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: _this.state.graphs[index].chartOptions.series[0].name,\n          data: graphs[index].chartOptions.series[0].data,\n          connectNulls: true\n        }];\n        loadArr[index] = false;\n\n        _this.setState({\n          graphs: graphs,\n          loadArr: loadArr\n        });\n      };\n\n      worker.postMessage(\"\".concat(graphs[index].cryptocurrency, \",\").concat(graphs[index].currency, \",\").concat(_this.state.jwt));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeGraphLive\", function (e, index) {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      if (e.target.checked) {\n        graphs[index].interval = setInterval(function () {\n          return _this.liveData(index);\n        }, 4000);\n\n        _this.setState({\n          graphs: graphs\n        });\n      } else {\n        clearInterval(graphs[index].interval);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveGraph\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(index) {\n        var bkGraph, cryptocurrency, currency, graph;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                bkGraph = _objectSpread({}, _this.state.graphs[index]);\n                cryptocurrency = _this.findName(\"cryptocurrencies\", bkGraph.cryptocurrency);\n                currency = _this.findName(\"currencies\", bkGraph.currency);\n                graph = {\n                  categories: bkGraph.chartOptions.xAxis.categories,\n                  series: bkGraph.chartOptions.series[0],\n                  graphId: bkGraph.id,\n                  cryptocurrency: {\n                    value: bkGraph.cryptocurrency,\n                    name: cryptocurrency\n                  },\n                  currency: {\n                    value: bkGraph.currency,\n                    name: currency\n                  },\n                  date: new Date(),\n                  image: bkGraph.image\n                };\n                _context.next = 6;\n                return crypto.saveGraph(graph, _this.state.user._id)[\"catch\"](function (err) {\n                  return console.log(\"ERROR!\", err);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getFilteredCryptocurrencies\", function () {\n      var _this$state = _this.state,\n          allData = _this$state.cryptocurrencies,\n          searchQueryCryptocurrencies = _this$state.searchQueryCryptocurrencies;\n      var filtered = allData;\n      if (searchQueryCryptocurrencies) filtered = allData.filter(function (m) {\n        return m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase());\n      });\n      return {\n        filtered: filtered\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFilteredCurrencies\", function () {\n      var _this$state2 = _this.state,\n          allData = _this$state2.currencies,\n          searchQueryCurrencies = _this$state2.searchQueryCurrencies;\n      var filtered = allData;\n      if (searchQueryCurrencies) filtered = allData.filter(function (m) {\n        return m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase());\n      });\n      return {\n        filtered: filtered\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearch\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(CustomData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var user, jwt;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                user = auth.getCurrentUser();\n                jwt = auth.getJwt();\n                this.setState({\n                  user: user,\n                  jwt: jwt\n                });\n                _context2.next = 5;\n                return crypto.getCryptocurrencies().then(function (res) {\n                  _this2.setState({\n                    cryptocurrencies: res.data.cryptocurrencies,\n                    currencies: res.data.currencies,\n                    loaded: true\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$getFilteredCryp = this.getFilteredCryptocurrencies(),\n          cryptocurrencies = _this$getFilteredCryp.filtered;\n\n      var _this$getFilteredCurr = this.getFilteredCurrencies(),\n          currencies = _this$getFilteredCurr.filtered;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: cryptoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        style: {\n          fontFamily: \"Courier New\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Custom Data Graphs\")), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), this.state.loaded ? __jsx(\"div\", {\n        className: \"text-center pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row w-75 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.handleSearch,\n        placeholder: \"Search Cryptocurrency...\",\n        value: this.state.searchQueryCryptocurrencies,\n        name: \"searchQueryCryptocurrencies\",\n        className: \"form-control w-75 shadow\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-search\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Cryptocurrency\",\n        onChange: function onChange(e) {\n          return _this3.changeCryptocurrency(e, \"cryptocurrencies\");\n        },\n        disabled: !this.state.loaded,\n        className: \"form-control shadow\",\n        style: {\n          display: \"inline-block\",\n          width: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Select Cryptocurrency\"), cryptocurrencies.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      })), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-hand-pointer\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.handleSearch,\n        placeholder: \"Search Currency...\",\n        value: this.state.searchQueryCurrencies,\n        name: \"searchQueryCurrencies\",\n        className: \"form-control w-75 shadow\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-search\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Currency\",\n        onChange: function onChange(e) {\n          return _this3.changeCryptocurrency(e, \"currencies\");\n        },\n        disabled: !this.state.loaded,\n        className: \"form-control shadow\",\n        style: {\n          display: \"inline-block\",\n          width: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Select Currency\"), currencies.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      })), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-hand-pointer\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Add graph for selected values\")), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addGraph,\n        disabled: _Object$keys(this.state.selectedCryptocurrency).length === 0 || _Object$keys(this.state.selectedCurrency).length === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Refresh all graphs\")), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.refreshAll,\n        disabled: this.state.graphs.length === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-sync\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })))), this.state.graphs.length > 0 ? this.state.graphs.map(function (item, index) {\n        return __jsx(\"div\", {\n          key: item.id,\n          className: \"pt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          src: item.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-9 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, !_this3.state.loading && !_this3.state.loadArr[index] ? __jsx(HighchartsReact, {\n          key: item.id,\n          highcharts: Highcharts,\n          options: item.chartOptions,\n          allowChartUpdate: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }) : __jsx(\"div\", {\n          className: \"mx-auto text-center\",\n          style: {\n            paddingTop: \"20%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, __jsx(\"select\", {\n          name: \"Cryptocurrency\",\n          onChange: function onChange(e) {\n            return _this3.changeGraphCryptocurrency(e, index);\n          },\n          defaultValue: item.cryptocurrency,\n          className: \"form-control shadow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, _this3.state.cryptocurrencies.map(function (i) {\n          return __jsx(\"option\", {\n            value: i.id,\n            key: i.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }, i.name, \" - \", i.symbol);\n        }))), __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, __jsx(\"select\", {\n          name: \"Currency\",\n          onChange: function onChange(e) {\n            return _this3.changeGraphCryptocurrency(e, index);\n          },\n          defaultValue: item.currency,\n          className: \"form-control shadow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, _this3.state.currencies.map(function (i) {\n          return __jsx(\"option\", {\n            value: i.id,\n            key: i.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324\n            },\n            __self: this\n          }, i.name, \" - \", i.symbol);\n        }))), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-12 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, \"Live data\")), __jsx(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this3.changeGraphLive(e, index);\n          },\n          defaultValue: item.live,\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, \"Search\")), __jsx(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this3.refreshSingle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, \"Refresh\")), __jsx(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this3.refreshSingle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-redo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, \"Delete\")), __jsx(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this3.removeGraph(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-minus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, \"Save\")), __jsx(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return _this3.saveGraph(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }))))))));\n      }) : \"\") : __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center\",\n        style: {\n          paddingTop: \"30vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CustomData;\n}(Component);\n\nexport { CustomData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","CustomData","user","jwt","data","graphs","cryptocurrencies","currencies","selectedCryptocurrency","selectedCurrency","workers","loaded","searchQueryCryptocurrencies","searchQueryCurrencies","interval","loadArr","worker","Worker","bkOptions","state","onmessage","e","name","series","prices","categories","time","push","id","cryptocurrency","value","currency","live","image","setState","postMessage","array","i","length","findName","target","index","toLowerCase","Array","connectNulls","clearInterval","filter","item","currentTime","currentPrice","checked","setInterval","liveData","bkGraph","graph","graphId","date","Date","saveGraph","_id","err","console","log","allData","filtered","m","startsWith","getCurrentUser","getJwt","getCryptocurrencies","then","res","getFilteredCryptocurrencies","getFilteredCurrencies","fontFamily","handleSearch","display","changeCryptocurrency","width","map","symbol","addGraph","refreshAll","paddingTop","changeGraphCryptocurrency","changeGraphLive","refreshSingle","removeGraph"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\n\r\nconst chartOptions = {\r\n\tchart: { zoomType: 'x' },\r\n\txAxis: {\r\n\t\ttype: 'datetime',\r\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\r\n\t\ttitle: { text: 'Date' }\r\n\t},\r\n\tyAxis: {\r\n\t\ttitle: { text: 'Exchange rate' }\r\n\t},\r\n\tlegend: { enabled: false },\r\n\tplotOptions: {\r\n\t\tarea: {\r\n\t\t\tfillColor: {\r\n\t\t\t\tlinearGradient: {\r\n\t\t\t\t\tx1: 0,\r\n\t\t\t\t\ty1: 0,\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\ty2: 1\r\n\t\t\t\t},\r\n\t\t\t\tstops: [\r\n\t\t\t\t\t[0, \"#7cb5ec\"],\r\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\r\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tmarker: { radius: 2 },\r\n\t\t\tlineWidth: 1,\r\n\t\t\tstates: { hover: { lineWidth: 1 } },\r\n\t\t\tthreshold: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class CustomData extends Component {\r\n\tstate = {\r\n\t\tuser: {},\r\n\t\tjwt: \"\",\r\n\t\tdata: [],\r\n\t\tgraphs: [],\r\n\t\tcryptocurrencies: [],\r\n\t\tcurrencies: [],\r\n\t\tselectedCryptocurrency: {},\r\n\t\tselectedCurrency: {},\r\n\t\tworkers: 0,\r\n\t\tloading: false,\r\n\t\tloaded: false,\r\n\t\tsearchQueryCryptocurrencies: \"\",\r\n\t\tsearchQueryCurrencies: \"\",\r\n\t\tinterval: [],\r\n\t\tloadArr: [],\r\n\t\tchartOptions: {}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst user = auth.getCurrentUser();\r\n\t\tconst jwt = auth.getJwt();\r\n\t\tthis.setState({ user, jwt });\r\n\t\tawait crypto.getCryptocurrencies().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcryptocurrencies: res.data.cryptocurrencies,\r\n\t\t\t\tcurrencies: res.data.currencies,\r\n\t\t\t\tloaded: true\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\taddGraph = () => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst bkOptions = { ...chartOptions };\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tworker.onmessage = e => {\r\n\t\t\tbkOptions.title = { text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time` };\r\n\t\t\tbkOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\r\n\t\t\t\tdata: e.data.prices\r\n\t\t\t}];\r\n\t\t\tbkOptions.xAxis.categories = [...e.data.time];\r\n\t\t\tgraphs.push({\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\tchartOptions: bkOptions,\r\n\t\t\t\tcryptocurrency: this.state.selectedCryptocurrency.value,\r\n\t\t\t\tcurrency: this.state.selectedCurrency.value,\r\n\t\t\t\tlive: false,\r\n\t\t\t\timage: e.data.image\r\n\t\t\t});\r\n\t\t\tloadArr.push(false);\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs: graphs,\r\n\t\t\t\tworkers: this.state.workers + 1,\r\n\t\t\t\tinterval: \"\",\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\r\n\r\n\t}\r\n\r\n\tfindName = (array, value) => {\r\n\t\tfor (let i = 0; i < this.state[array].length; i++) {\r\n\t\t\tif (this.state[array][i].id === value) {\r\n\t\t\t\treturn this.state[array][i].name;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tchangeCryptocurrency = (e, array) => {\r\n\t\tconst name = this.findName(array, e.target.value);\r\n\t\tthis.setState({\r\n\t\t\t[`selected${e.target.name}`]: {\r\n\t\t\t\tvalue: e.target.value,\r\n\t\t\t\tname: name\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeGraphCryptocurrency = (e, index) => {\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tgraphs[index][e.target.name.toLowerCase()] = e.target.value;\r\n\t\tthis.setState({ graphs: graphs })\r\n\t}\r\n\r\n\trefreshAll = () => {\r\n\t\tlet workers = new Array(this.state.workers);\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tthis.setState({ loading: true });\r\n\t\tfor (let i = 0; i < this.state.workers; i++) {\r\n\t\t\tworkers[i] = new Worker(\"static/service-worker.js\");\r\n\t\t\tworkers[i].onmessage = e => {\r\n\t\t\t\tgraphs[i].chartOptions.xAxis.categories = [...e.data.time];\r\n\t\t\t\tgraphs[i].chartOptions.series = [{\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tname: this.state.graphs[i].chartOptions.series[0].name,\r\n\t\t\t\t\tdata: e.data.prices,\r\n\t\t\t\t\tconnectNulls: true\r\n\t\t\t\t}]\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tgraphs: graphs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tworkers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSingle = (index) => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tloadArr[index] = true;\r\n\t\tthis.setState({loadArr});\r\n\t\tworker.onmessage = e => {\r\n\t\t\tconst cryptocurrency= this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\r\n\t\t\tconst currency= this.findName(\"currencies\", graphs[index].currency);\r\n\t\t\tgraphs[index].chartOptions.title = { text: `${cryptocurrency} to ${currency} exchange rate over time` };\r\n\t\t\tgraphs[index].chartOptions.xAxis.categories = [...e.data.time];\r\n\t\t\tgraphs[index].image = e.data.image;\r\n\t\t\tgraphs[index].chartOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: `${graphs[index].cryptocurrency} to ${graphs[index].currency}`,\r\n\t\t\t\tdata: e.data.prices,\r\n                connectNulls: true\r\n\t\t\t}];\r\n\t\t\tloadArr[index] = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs: graphs,\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n\t}\r\n\r\n\tremoveGraph = (index) => {\r\n\t\tlet graphs = [...this.state.graphs];\r\n\t\tclearInterval(graphs[index].interval);\r\n\t\tgraphs = graphs.filter((item, i) => i !== index);\r\n\t\tthis.setState({ graphs });\r\n\t}\r\n\r\n\tliveData = (index) => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tloadArr[index] = true;\r\n\t\tthis.setState({loadArr});\r\n\t\tworker.onmessage = e => {\r\n\t\t\tgraphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\r\n\t\t\tgraphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\r\n\t\t\tgraphs[index].chartOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: this.state.graphs[index].chartOptions.series[0].name,\r\n\t\t\t\tdata: graphs[index].chartOptions.series[0].data,\r\n                connectNulls: true\r\n\t\t\t}];\r\n\t\t\tloadArr[index] = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs,\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n\t}\r\n\r\n\tchangeGraphLive = (e, index) => {\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tif (e.target.checked) {\r\n\t\t\tgraphs[index].interval = setInterval(() => this.liveData(index), 4000);\r\n\t\t\tthis.setState({ graphs });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclearInterval(graphs[index].interval);\r\n\t\t}\r\n\t}\r\n\r\n\tsaveGraph = async (index) => {\r\n\t\tconst bkGraph = { ...this.state.graphs[index] };\r\n\t\tconst cryptocurrency= this.findName(\"cryptocurrencies\", bkGraph.cryptocurrency);\r\n\t\tconst currency= this.findName(\"currencies\", bkGraph.currency);\r\n\t\tconst graph = {\r\n\t\t\tcategories: bkGraph.chartOptions.xAxis.categories,\r\n\t\t\tseries: bkGraph.chartOptions.series[0],\r\n\t\t\tgraphId: bkGraph.id,\r\n\t\t\tcryptocurrency: {\r\n\t\t\t\tvalue: bkGraph.cryptocurrency,\r\n\t\t\t\tname: cryptocurrency\r\n\t\t\t},\r\n\t\t\tcurrency: {\r\n\t\t\t\tvalue: bkGraph.currency,\r\n\t\t\t\tname: currency\r\n\t\t\t},\r\n\t\t\tdate: new Date,\r\n\t\t\timage: bkGraph.image\r\n\t\t}\r\n\t\tawait crypto.saveGraph(graph, this.state.user._id).catch(err => console.log(\"ERROR!\", err));\r\n\t}\r\n\r\n\tgetFilteredCryptocurrencies = () => {\r\n\t\tconst { cryptocurrencies: allData, searchQueryCryptocurrencies } = this.state;\r\n\t\tlet filtered = allData;\r\n\t\tif (searchQueryCryptocurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase()));\r\n\t\treturn { filtered };\r\n\t};\r\n\r\n\tgetFilteredCurrencies = () => {\r\n\t\tconst { currencies: allData, searchQueryCurrencies } = this.state;\r\n\t\tlet filtered = allData;\r\n\t\tif (searchQueryCurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase()));\r\n\t\treturn { filtered };\r\n\t};\r\n\r\n\thandleSearch = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { filtered: cryptocurrencies } = this.getFilteredCryptocurrencies();\r\n\t\tconst { filtered: currencies } = this.getFilteredCurrencies();\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<div className=\"w-50 mx-auto text-center pt-5\">\r\n\t\t\t\t\t<img src={cryptoImg} />\r\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Custom Data Graphs</strong></h1>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{this.state.loaded ?\r\n\t\t\t\t\t<div className=\"text-center pt-2\">\r\n\t\t\t\t\t\t<div className=\"row w-75 mx-auto\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Cryptocurrency...\" value={this.state.searchQueryCryptocurrencies} name=\"searchQueryCryptocurrencies\" className=\"form-control w-75 shadow\" style={{display: \"inline-block\"}}/>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeCryptocurrency(e, \"cryptocurrencies\")} disabled={!this.state.loaded} className=\"form-control shadow\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Cryptocurrency</option>{cryptocurrencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Currency...\" value={this.state.searchQueryCurrencies} name=\"searchQueryCurrencies\" className=\"form-control w-75 shadow\" style={{display: \"inline-block\"}}/>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\r\n\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeCryptocurrency(e, \"currencies\")} disabled={!this.state.loaded} className=\"form-control shadow\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Currency</option>{currencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t<p><strong>Add graph for selected values</strong></p>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.addGraph} disabled={Object.keys(this.state.selectedCryptocurrency).length === 0 || Object.keys(this.state.selectedCurrency).length === 0}><i className=\"fas fa-plus\"/></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t<p><strong>Refresh all graphs</strong></p>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.refreshAll} disabled={this.state.graphs.length === 0}><i className=\"fas fa-sync\"/></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{this.state.graphs.length > 0 ?\r\n\t\t\t\t\t\t\tthis.state.graphs.map((item, index) => \r\n\t\t\t\t\t\t\t\t<div key={item.id} className=\"pt-3\">\r\n\t\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t\t<img src={item.image} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"row mt-4\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-9 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{!this.state.loading && !this.state.loadArr[index] ? <HighchartsReact key={item.id} highcharts={Highcharts} options={item.chartOptions} allowChartUpdate = {true} /> : <div className=\"mx-auto text-center\" style={{paddingTop: \"20%\"}}><img src={loading} /></div>}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.cryptocurrency} className=\"form-control shadow\">{this.state.cryptocurrencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.currency} className=\"form-control shadow\">{this.state.currencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Live data</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e, index)} defaultValue={item.live} className=\"form-control\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Search</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-search\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Refresh</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-redo\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Delete</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}><i className=\"fas fa-minus\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Save</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => this.saveGraph(index)}><i className=\"fas fa-save\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : \"\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}