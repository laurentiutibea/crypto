{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts'; // import HighchartsReact from 'highcharts-react-official';\n\nimport ReactHighcharts from 'react-highcharts';\nimport update from \"immutability-helper\";\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nvar chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\n\nvar CustomData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomData, _Component);\n\n  function CustomData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      jwt: \"\",\n      data: [],\n      graphs: [],\n      cryptocurrencies: [],\n      currencies: [],\n      selectedCryptocurrency: {},\n      selectedCurrency: {},\n      workers: 0,\n      loading: false,\n      loaded: false,\n      interval: [],\n      chartOptions: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPageData\", function () {\n      var _this$state = _this.state,\n          allData = _this$state.data,\n          searchQuery = _this$state.searchQuery,\n          sortColumn = _this$state.sortColumn;\n      var filtered = allData;\n      if (searchQuery) filtered = allData.filter(function (m) {\n        return m.email.toLowerCase().startsWith(searchQuery.toLowerCase());\n      });\n\n      var sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      var data = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: data\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addGraph\", function () {\n      var worker = new Worker(\"static/service-worker.js\");\n\n      var bkOptions = _objectSpread({}, chartOptions);\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      worker.onmessage = function (e) {\n        console.log(e.data);\n        bkOptions.title = {\n          text: \"\".concat(_this.state.selectedCryptocurrency.name, \" to \").concat(_this.state.selectedCurrency.name, \" exchange rate over time\")\n        }, bkOptions.series = [{\n          type: \"line\",\n          name: \"\".concat(_this.state.selectedCryptocurrency.name, \" to \").concat(_this.state.selectedCurrency.name),\n          data: e.data.prices\n        }];\n        bkOptions.xAxis.categories = _toConsumableArray(e.data.time);\n        graphs.push({\n          id: _Date$now(),\n          chartOptions: bkOptions,\n          cryptocurrency: _this.state.selectedCryptocurrency.value,\n          currency: _this.state.selectedCurrency.value,\n          live: false\n        });\n        console.log(graphs);\n\n        _this.setState({\n          graphs: graphs,\n          workers: _this.state.workers + 1,\n          interval: \"\"\n        });\n      };\n\n      worker.postMessage(\"\".concat(_this.state.selectedCryptocurrency.value, \",\").concat(_this.state.selectedCurrency.value, \",\").concat(_this.state.jwt));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"findName\", function (array, value) {\n      for (var i = 0; i < _this.state[array].length; i++) {\n        if (_this.state[array][i].id === value) {\n          return _this.state[array][i].name;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeCryptocurrency\", function (e, array) {\n      console.log(e.target.value);\n\n      var name = _this.findName(array, e.target.value);\n\n      console.log(name);\n\n      _this.setState(_defineProperty({}, \"selected\".concat(e.target.name), {\n        value: e.target.value,\n        name: name\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeGraphCryptocurrency\", function (e, index) {\n      console.log(e.target.value, index);\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      graphs[index][e.target.name.toLowerCase()] = e.target.value;\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshAll\", function () {\n      var workers = new Array(_this.state.workers);\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      _this.setState({\n        loading: true\n      });\n\n      var _loop = function _loop(i) {\n        workers[i] = new Worker(\"static/service-worker.js\");\n\n        workers[i].onmessage = function (e) {\n          graphs[i].chartOptions.xAxis.categories = _toConsumableArray(e.data.time);\n          graphs[i].chartOptions.series = [{\n            type: \"line\",\n            name: _this.state.graphs[i].chartOptions.series[0].name,\n            data: e.data.prices\n          }];\n\n          _this.setState({\n            graphs: graphs,\n            loading: false\n          });\n        };\n\n        workers[i].postMessage(\"\".concat(graphs[i].cryptocurrency, \",\").concat(graphs[i].currency, \",\").concat(_this.state.jwt));\n      };\n\n      for (var i = 0; i < _this.state.workers; i++) {\n        _loop(i);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshSingle\", function (index) {\n      var worker = new Worker(\"static/service-worker.js\");\n\n      var graphs = _toConsumableArray(_this.state.graphs); //this.setState({loading: true});\n\n\n      worker.onmessage = function (e) {\n        graphs[index].chartOptions.xAxis.categories = _toConsumableArray(e.data.time);\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: _this.state.graphs[index].chartOptions.series[0].name,\n          data: e.data.prices\n        }];\n\n        _this.setState({\n          graphs: graphs //loading: false\n\n        });\n      };\n\n      worker.postMessage(\"\".concat(graphs[index].cryptocurrency, \",\").concat(graphs[index].currency, \",\").concat(_this.state.jwt));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeGraph\", function (index) {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      clearInterval(graphs[index].interval);\n      graphs = graphs.filter(function (item, i) {\n        return i !== index;\n      });\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"liveData\", function (index) {\n      console.log(\"LIVE\", index);\n      var worker = new Worker(\"static/service-worker.js\");\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      worker.onmessage = function (e) {\n        graphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\n        graphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: _this.state.graphs[index].chartOptions.series[0].name,\n          data: graphs[index].chartOptions.series[0].data\n        }];\n\n        _this.setState({\n          graphs: update(_this.state.graphs, _defineProperty({}, index, {\n            $set: graphs[index]\n          }))\n        });\n      };\n\n      worker.postMessage(\"\".concat(graphs[index].cryptocurrency, \",\").concat(graphs[index].currency, \",\").concat(_this.state.jwt));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeGraphLive\", function (e, index) {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      if (e.target.checked) {\n        graphs[index].interval = setInterval(function () {\n          return _this.liveData(index);\n        }, 4000);\n\n        _this.setState({\n          graphs: graphs\n        });\n      } else {\n        clearInterval(graphs[index].interval);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveGraph\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(index) {\n        var bkGraph, graph;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                bkGraph = _objectSpread({}, _this.state.graphs[index]);\n                graph = {\n                  categories: bkGraph.chartOptions.xAxis.categories,\n                  series: bkGraph.chartOptions.series[0],\n                  graphId: bkGraph.id,\n                  cryptocurrency: bkGraph.cryptocurrency,\n                  currency: bkGraph.currency,\n                  date: new Date()\n                };\n                console.log(graph);\n                _context.next = 5;\n                return crypto.saveGraph(graph).then(function (res) {\n                  console.log(\"SUCCESS!\");\n                })[\"catch\"](function (err) {\n                  return console.log(\"ERROR!\", err);\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(CustomData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var user, jwt;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                user = auth.getCurrentUser();\n                jwt = auth.getJwt();\n                this.setState({\n                  user: user,\n                  jwt: jwt\n                });\n                _context2.next = 5;\n                return crypto.getCryptocurrencies().then(function (res) {\n                  console.log(res.data);\n\n                  _this2.setState({\n                    cryptocurrencies: res.data.cryptocurrencies,\n                    currencies: res.data.currencies,\n                    loaded: true\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Hello \", this.state.user.name), __jsx(\"div\", {\n        className: \"form-group w-25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Cryptocurrency\",\n        onChange: function onChange(e) {\n          return _this3.changeCryptocurrency(e, \"cryptocurrencies\");\n        },\n        disabled: !this.state.loaded,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Select Cryptocurrency\"), this.state.cryptocurrencies.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      })), __jsx(\"select\", {\n        name: \"Currency\",\n        onChange: function onChange(e) {\n          return _this3.changeCryptocurrency(e, \"currencies\");\n        },\n        disabled: !this.state.loaded,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Select Currency\"), this.state.currencies.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      }))), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"ADD\"), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.refreshAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"REFRESH ALL\"), this.state.graphs.length > 0 ? this.state.graphs.map(function (item, index) {\n        return __jsx(\"div\", {\n          className: \"row mt-4\",\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, __jsx(\"select\", {\n          name: \"Cryptocurrency\",\n          onChange: function onChange(e) {\n            return _this3.changeGraphCryptocurrency(e, index);\n          },\n          defaultValue: item.cryptocurrency,\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, _this3.state.cryptocurrencies.map(function (i) {\n          return __jsx(\"option\", {\n            value: i.id,\n            key: i.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }, i.name, \" - \", i.symbol);\n        })), __jsx(\"select\", {\n          name: \"Currency\",\n          onChange: function onChange(e) {\n            return _this3.changeGraphCryptocurrency(e, index);\n          },\n          defaultValue: item.currency,\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, _this3.state.currencies.map(function (i) {\n          return __jsx(\"option\", {\n            value: i.id,\n            key: i.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, i.name, \" - \", i.symbol);\n        })), __jsx(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this3.changeGraphLive(e, index);\n          },\n          defaultValue: item.live,\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }), __jsx(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this3.refreshSingle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, \"REFRESH\"), __jsx(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this3.refreshSingle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, \"SEARCH\"), __jsx(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this3.removeGraph(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, \"DELETE\"), __jsx(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return _this3.saveGraph(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, \"SAVE\"))), __jsx(\"div\", {\n          className: \"col-md-9 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, !_this3.state.loading ? __jsx(ReactHighcharts, {\n          key: item.id,\n          highcharts: Highcharts,\n          config: item.chartOptions,\n          ref: \"chart\",\n          oneToOne: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }) : __jsx(\"img\", {\n          src: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        })));\n      }) : \"\");\n    }\n  }]);\n\n  return CustomData;\n}(Component);\n\nexport { CustomData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","ReactHighcharts","update","auth","crypto","loading","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","CustomData","user","jwt","data","graphs","cryptocurrencies","currencies","selectedCryptocurrency","selectedCurrency","workers","loaded","interval","state","allData","searchQuery","sortColumn","filtered","filter","m","email","toLowerCase","startsWith","sorted","_","orderBy","path","order","paginate","currentPage","pageSize","totalCount","length","worker","Worker","bkOptions","onmessage","e","console","log","name","series","prices","categories","time","push","id","cryptocurrency","value","currency","live","setState","postMessage","array","i","target","findName","index","Array","clearInterval","item","currentTime","currentPrice","$set","checked","setInterval","liveData","bkGraph","graph","graphId","date","Date","saveGraph","then","res","err","getCurrentUser","getJwt","getCryptocurrencies","changeCryptocurrency","map","symbol","addGraph","refreshAll","changeGraphCryptocurrency","changeGraphLive","refreshSingle","removeGraph"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\n// import HighchartsReact from 'highcharts-react-official';\r\nimport ReactHighcharts from 'react-highcharts';\r\nimport update from \"immutability-helper\";\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\n\r\n\r\nconst chartOptions = {\r\n  chart: {zoomType: 'x'},\r\n      xAxis: { \r\n\t\t  \ttype: 'datetime',\r\n\t\t  \tdateTimeLabelFormats: {day: '%d-%m-%Y - %h:%m'},\r\n        title: {text: 'Date'}\r\n\t\t},\r\n      yAxis: {\r\n          title: {text: 'Exchange rate'}\r\n      },\r\n      legend: {enabled: false},\r\n      plotOptions: {\r\n          area: {\r\n              fillColor: {\r\n                  linearGradient: {\r\n                      x1: 0,\r\n                      y1: 0,\r\n                      x2: 0,\r\n                      y2: 1\r\n                  },\r\n                  stops: [\r\n                    [0, \"#7cb5ec\"],\r\n                    [0.5, \"#7cb5ec80\"],\r\n                    [0.9, \"#7cb5ff33\"]\r\n                ]\r\n              },\r\n              marker: {radius: 2},\r\n              lineWidth: 1,\r\n              states: {hover: {lineWidth: 1}},\r\n              threshold: null\r\n          }\r\n      }\r\n    }\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    jwt: \"\",\r\n    data: [],\r\n    graphs: [],\r\n    cryptocurrencies: [],\r\n    currencies : [],\r\n    selectedCryptocurrency: {},\r\n    selectedCurrency: {},\r\n    workers: 0,\r\n    loading: false,\r\n    loaded: false,\r\n\t  interval: [],\r\n    chartOptions: {}\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    const user = auth.getCurrentUser();\r\n    const jwt = auth.getJwt();\r\n    this.setState({user,jwt});\r\n    await crypto.getCryptocurrencies().then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        cryptocurrencies: res.data.cryptocurrencies,\r\n        currencies: res.data.currencies,\r\n        loaded: true\r\n      })\r\n    });\r\n    /* await crypto.getCurrencies(\"bitcoin\",\"eur\").then(res => {\r\n      const bkOptions = {...this.state.chartOptions};\r\n      bkOptions.series = [{\r\n        type: \"area\",\r\n        name: \"BTC to EUR\",\r\n        data: res.data\r\n      }]\r\n      this.setState({\r\n        data: res.data,\r\n        chartOptions: bkOptions\r\n        })\r\n    }); */\r\n  }\r\n\r\n  getPageData = () => {\r\n\t\tconst { data: allData, searchQuery, sortColumn } = this.state;\r\n\r\n\t\tlet filtered = allData;\r\n\t\tif(searchQuery) filtered = allData.filter(m => m.email.toLowerCase().startsWith(searchQuery.toLowerCase()));\r\n\r\n\t\tconst sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n\t\tconst data = paginate(sorted, currentPage, pageSize);\r\n\r\n\t\treturn {totalCount: filtered.length, data: data};\r\n\t};\r\n\r\n  addGraph = () => {\r\n    const worker = new Worker(\"static/service-worker.js\");\r\n    const bkOptions = {...chartOptions};\r\n    const graphs = [...this.state.graphs];\r\n    worker.onmessage = e => {\r\n\t\tconsole.log(e.data);\r\n\t\tbkOptions.title =  {text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time`},\r\n\t\tbkOptions.series = [{\r\n\t\t\ttype: \"line\",\r\n\t\t\tname: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\r\n\t\t\tdata: e.data.prices\r\n\t\t}]\r\n\t\tbkOptions.xAxis.categories = [...e.data.time];\r\n\t\tgraphs.push({\r\n\t\t\tid: Date.now(),\r\n\t\t\tchartOptions: bkOptions,\r\n\t\t\tcryptocurrency: this.state.selectedCryptocurrency.value,\r\n\t\t\tcurrency: this.state.selectedCurrency.value,\r\n\t\t\tlive: false\r\n    \t})\r\n      console.log(graphs);\r\n      this.setState({\r\n        graphs: graphs,\r\n        workers: this.state.workers+1,\r\n        interval: \"\"\r\n      })\r\n    }\r\n    worker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\r\n    \r\n  }\r\n\r\n  findName = (array,value) => {\r\n    for(let i=0; i<this.state[array].length; i++){\r\n      if(this.state[array][i].id === value){\r\n        return this.state[array][i].name;\r\n      }\r\n    }\r\n  }\r\n\r\n  changeCryptocurrency = (e,array) => {\r\n    console.log(e.target.value);\r\n    const name = this.findName(array,e.target.value);\r\n    console.log(name);\r\n    this.setState({\r\n      [`selected${e.target.name}`]:{\r\n        value: e.target.value,\r\n        name: name\r\n      }\r\n    });\r\n  }\r\n\r\n  changeGraphCryptocurrency = (e,index) => {\r\n    console.log(e.target.value, index);\r\n    const graphs = [...this.state.graphs];\r\n    graphs[index][e.target.name.toLowerCase()] = e.target.value;\r\n    this.setState({graphs: graphs})\r\n  }\r\n\r\n  refreshAll = () => {\r\n\tlet workers = new Array(this.state.workers);\r\n\tconst graphs = [...this.state.graphs];\r\n\tthis.setState({loading: true});\r\n\tfor(let i=0; i<this.state.workers; i++){\r\n\tworkers[i] = new Worker(\"static/service-worker.js\");\r\n\tworkers[i].onmessage = e => {\r\n\t\tgraphs[i].chartOptions.xAxis.categories = [...e.data.time];\r\n\t\tgraphs[i].chartOptions.series = [{\r\n\t\ttype: \"line\",\r\n\t\tname: this.state.graphs[i].chartOptions.series[0].name,\r\n\t\tdata: e.data.prices\r\n\t\t}]\r\n\t\tthis.setState({\r\n\t\t\tgraphs: graphs,\r\n\t\t\tloading: false\r\n\t\t})\r\n\t}\r\n\tworkers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\r\n\t}\r\n  }\r\n\r\n  refreshSingle = (index) => {\r\n    const worker = new Worker(\"static/service-worker.js\");\r\n    const graphs = [...this.state.graphs];\r\n    //this.setState({loading: true});\r\n    worker.onmessage = e => {\r\n        graphs[index].chartOptions.xAxis.categories = [...e.data.time];\r\n        graphs[index].chartOptions.series = [{\r\n            type: \"line\",\r\n            name: this.state.graphs[index].chartOptions.series[0].name,\r\n            data: e.data.prices\r\n        }]\r\n        this.setState({\r\n          graphs: graphs,\r\n          //loading: false\r\n        })\r\n      }\r\n    worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n  }\r\n\r\n  removeGraph = (index) => {\r\n    let graphs = [...this.state.graphs];\r\n    clearInterval(graphs[index].interval);\r\n    graphs = graphs.filter((item,i) => i !== index);\r\n    this.setState({graphs});\r\n  }\r\n\r\n  liveData = (index) => {\r\n    console.log(\"LIVE\",index);\r\n    const worker = new Worker(\"static/service-worker.js\");\r\n    const graphs = [...this.state.graphs];\r\n\t  worker.onmessage = e => {\r\n        graphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\r\n        graphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\r\n        graphs[index].chartOptions.series = [{\r\n          type: \"line\",\r\n          name: this.state.graphs[index].chartOptions.series[0].name,\r\n          data: graphs[index].chartOptions.series[0].data\r\n\t\t}]\r\n        this.setState({\r\n          \tgraphs: update(this.state.graphs, {[index]: {$set: graphs[index]}})\r\n        })\r\n      }\r\n\t  worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n  }\r\n\r\n  changeGraphLive = (e,index) => {\r\n    const graphs = [...this.state.graphs];\r\n    if(e.target.checked){\r\n      graphs[index].interval = setInterval(() => this.liveData(index), 4000);\r\n      this.setState({graphs});\r\n    }\r\n    else{\r\n      clearInterval(graphs[index].interval);\r\n    }\r\n  }\r\n\r\n  saveGraph = async (index) => {\r\n    const bkGraph = {...this.state.graphs[index]};\r\n    const graph = {\r\n      categories: bkGraph.chartOptions.xAxis.categories,\r\n      series: bkGraph.chartOptions.series[0],\r\n      graphId: bkGraph.id,\r\n      cryptocurrency: bkGraph.cryptocurrency,\r\n      currency: bkGraph.currency,\r\n      date: new Date\r\n    }\r\n    console.log(graph);\r\n    await crypto.saveGraph(graph).then(res => {console.log(\"SUCCESS!\");}).catch(err => console.log(\"ERROR!\",err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <div className=\"form-group w-25\">\r\n            <select name=\"Cryptocurrency\" onChange={(e) => this.changeCryptocurrency(e,\"cryptocurrencies\")} disabled={!this.state.loaded} className=\"form-control\"><option value=\"\">Select Cryptocurrency</option>{this.state.cryptocurrencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n            <select name=\"Currency\" onChange={(e) => this.changeCryptocurrency(e,\"currencies\")} disabled={!this.state.loaded} className=\"form-control\"><option value=\"\">Select Currency</option>{this.state.currencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n          </div>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>ADD</button>\r\n          <button className=\"btn btn-success\" onClick={this.refreshAll}>REFRESH ALL</button>\r\n            {this.state.graphs.length > 0 ? \r\n              this.state.graphs.map((item,index) => \r\n                <div className=\"row mt-4\" key={item.id}>\r\n                  <div className=\"col-md-3\">\r\n                    <div className=\"form-group\">\r\n                      <select name=\"Cryptocurrency\" onChange={(e) => this.changeGraphCryptocurrency(e,index)} defaultValue={item.cryptocurrency} className=\"form-control\">{this.state.cryptocurrencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n                      <select name=\"Currency\" onChange={(e) => this.changeGraphCryptocurrency(e,index)} defaultValue={item.currency} className=\"form-control\">{this.state.currencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n                      <input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e,index)} defaultValue={item.live} className=\"form-control\"/>\r\n                      <button className=\"btn btn-success\" onClick={() => this.refreshSingle(index)}>REFRESH</button>\r\n                      <button className=\"btn btn-warning\" onClick={() => this.refreshSingle(index)}>SEARCH</button>\r\n                      <button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}>DELETE</button>\r\n                      <button className=\"btn btn-primary\" onClick={() => this.saveGraph(index)}>SAVE</button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-9 text-center\">\r\n                    {!this.state.loading ? <ReactHighcharts key={item.id} highcharts={Highcharts} config={item.chartOptions} ref=\"chart\" oneToOne={true}/> : <img src={loading}/>}\r\n                  </div> \r\n                </div>\r\n            ): \"\"}\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}