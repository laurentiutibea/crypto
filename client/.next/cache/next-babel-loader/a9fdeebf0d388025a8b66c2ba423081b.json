{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nexport default class CustomData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      data: {\n        data: [],\n        timestamp: \"\"\n      },\n      graphs: [],\n      options: {\n        chart: {\n          zoomType: 'x'\n        },\n        title: {\n          text: 'USD to EUR exchange rate over time'\n        },\n        subtitle: {\n          text: document.ontouchstart === undefined ? 'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'\n        },\n        xAxis: {\n          type: 'datetime'\n        },\n        yAxis: {\n          title: {\n            text: 'Exchange rate'\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        plotOptions: {\n          area: {\n            fillColor: {\n              linearGradient: {\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 1\n              },\n              stops: [[0, Highcharts.getOptions().colors[0]], [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]]\n            },\n            marker: {\n              radius: 2\n            },\n            lineWidth: 1,\n            states: {\n              hover: {\n                lineWidth: 1\n              }\n            },\n            threshold: null\n          }\n        },\n        series: [{\n          type: 'area',\n          name: 'USD to EUR',\n          data: data\n        }]\n      }\n    });\n\n    _defineProperty(this, \"addGraph\", () => {\n      const graphs = [...this.state.graphs];\n      graphs.push({\n        id: 1,\n        data: {\n          name: \"Bitcoin\"\n        }\n      });\n      this.setState({\n        graphs\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({\n      user\n    });\n    await crypto.getCurrencies().then(res => this.setState({\n      data: res.data\n    }));\n    console.log(this.state.data);\n  }\n\n  render() {\n    const select = __jsx(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.data.data.map(item => __jsx(\"option\", {\n      value: item.id,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, item.name, \" - \", item.symbol)));\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Hello \", this.state.user.name), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.addGraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"+\"), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.graphs.length > 0 ? this.state.graphs.map(item => __jsx(\"div\", {\n      className: \"col-md-6\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, select, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, item.data.name), __jsx(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))) : \"\"));\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","CustomData","user","data","timestamp","graphs","options","chart","zoomType","title","text","subtitle","document","ontouchstart","undefined","xAxis","type","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","getOptions","colors","Color","setOpacity","get","marker","radius","lineWidth","states","hover","threshold","series","name","state","push","id","setState","componentDidMount","getCurrentUser","getCurrencies","then","res","console","log","render","select","map","item","symbol","addGraph","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: {\r\n        data: [],\r\n        timestamp: \"\"\r\n    },\r\n    graphs: [],\r\n    options: {\r\n      chart: {\r\n        zoomType: 'x'\r\n    },\r\n    title: {\r\n        text: 'USD to EUR exchange rate over time'\r\n    },\r\n    subtitle: {\r\n        text: document.ontouchstart === undefined ?\r\n            'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'\r\n    },\r\n    xAxis: {\r\n        type: 'datetime'\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: 'Exchange rate'\r\n        }\r\n    },\r\n    legend: {\r\n        enabled: false\r\n    },\r\n    plotOptions: {\r\n        area: {\r\n            fillColor: {\r\n                linearGradient: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 0,\r\n                    y2: 1\r\n                },\r\n                stops: [\r\n                    [0, Highcharts.getOptions().colors[0]],\r\n                    [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\r\n                ]\r\n            },\r\n            marker: {\r\n                radius: 2\r\n            },\r\n            lineWidth: 1,\r\n            states: {\r\n                hover: {\r\n                    lineWidth: 1\r\n                }\r\n            },\r\n            threshold: null\r\n        }\r\n    },\r\n\r\n    series: [{\r\n        type: 'area',\r\n        name: 'USD to EUR',\r\n        data: data\r\n    }]\r\n    }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\tconst user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    await crypto.getCurrencies().then(res => this.setState({data: res.data}));\r\n    console.log(this.state.data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options}/>\r\n                    </div> \r\n            ): \"\"}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}