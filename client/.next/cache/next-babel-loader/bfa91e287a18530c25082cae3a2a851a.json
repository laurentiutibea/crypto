{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\password.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport cryptoImg from \"../src/crypto-text.png\";\nimport { update } from \"../services/userService\";\nimport auth from \"../services/authService\";\nexport default class Password extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {\n        _id: \"\",\n        email: \"\",\n        isAdmin: false,\n        name: \"\",\n        currentPassword: \"\"\n      },\n      error: \"\"\n    });\n\n    _defineProperty(this, \"validate\", () => {\n      return !(this.state.user.password !== \"\" && this.state.user.confirmPassword !== \"\" && this.state.user.currentPassword && this.state.user.password.length >= 5 && this.state.user.confirmPassword.length >= 5 && this.state.user.password.length <= 1024 && this.state.user.confirmPassword.length <= 1024);\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const user = _objectSpread({}, this.state.user);\n\n      user[e.target.name] = e.target.value;\n      this.setState({\n        user\n      });\n    });\n\n    _defineProperty(this, \"doSubmit\", async e => {\n      e.preventDefault();\n\n      if (this.state.user.password === this.state.user.confirmPassword) {\n        if (this.state.user.password.length >= 5) {\n          const {\n            user\n          } = this.state;\n          let status = 400;\n          await auth.confirmLogin(user.email, user.currentPassword).then(res => status = res.status).catch(err => status = err.response.status);\n\n          if (status === 200) {\n            try {\n              delete user.confirmPassword;\n              delete user.currentPassword;\n              delete user.iat;\n              await update(user);\n              window.location.replace(\"/index\");\n            } catch (ex) {\n              if (ex.response && ex.response.status === 400) {\n                this.setState({\n                  error: \"Incorrectly data entered!\"\n                });\n              }\n            }\n          } else this.setState({\n            error: \"Authentication error!\"\n          });\n        } else this.setState({\n          error: \"Password must have at least 5 characters!\"\n        });\n      } else this.setState({\n        error: \"Passwords don't match!\"\n      });\n    });\n  }\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    user.password = \"\";\n    user.confirmPassword = \"\";\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    if (process.browser && !auth.getCurrentUser()) {\n      window.location.replace(\"/login\");\n    } else return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"w-50 mx-auto shadow\",\n      style: {\n        marginTop: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-body text-center pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: cryptoImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      style: {\n        fontFamily: \"Courier New\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Change Password\")), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), __jsx(\"form\", {\n      onSubmit: this.doSubmit,\n      method: \"POST\",\n      className: \"m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"password\",\n      name: \"currentPassword\",\n      placeholder: \"Current password\",\n      onChange: this.handleChange,\n      className: \"form-control mb-3 mt-2 shadow w-75 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"New password\",\n      onChange: this.handleChange,\n      className: \"form-control mb-3 mt-2 shadow w-75 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Confirm new password\",\n      onChange: this.handleChange,\n      className: \"form-control mb-3 mt-2 shadow w-75 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      disabled: this.validate(),\n      className: \"btn btn-success mt-2 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Change Password\"))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.error))))));\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/password.js"],"names":["React","Component","Layout","cryptoImg","update","auth","Password","user","_id","email","isAdmin","name","currentPassword","error","state","password","confirmPassword","length","e","target","value","setState","preventDefault","status","confirmLogin","then","res","catch","err","response","iat","window","location","replace","ex","componentDidMount","getCurrentUser","render","process","browser","marginTop","fontFamily","doSubmit","handleChange","validate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Layout from \"../components/layout\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\nimport {update} from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nexport default class Password extends Component {\r\n    state = {\r\n\t\tuser: {\r\n            _id: \"\", \r\n            email: \"\", \r\n            isAdmin:false, \r\n            name: \"\", \r\n            currentPassword: \"\"\r\n        },\r\n        error: \"\"\r\n\t};\r\n\r\n\tvalidate = () => {\r\n\t\treturn !(this.state.user.password !== \"\" && this.state.user.confirmPassword !== \"\" && this.state.user.currentPassword &&\r\n\t\t\tthis.state.user.password.length >= 5 && this.state.user.confirmPassword.length >= 5 && this.state.user.password.length <= 1024 &&\r\n\t\t\tthis.state.user.confirmPassword.length <= 1024\r\n\t\t);\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tconst user = {...this.state.user};\r\n\t\tuser[e.target.name] = e.target.value;\r\n\t\tthis.setState({user});\r\n\t};\r\n\r\n\tdoSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(this.state.user.password === this.state.user.confirmPassword){\r\n\t\t\tif(this.state.user.password.length >= 5){\r\n\t\t\t\tconst {user} = this.state;\r\n\t\t\t\tlet status = 400;\r\n\t\t\t\tawait auth.confirmLogin(user.email, user.currentPassword).then(res => status = res.status).catch(err => status = err.response.status);\r\n\t\t\t\tif(status === 200) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tdelete user.confirmPassword;\r\n\t\t\t\t\t\tdelete user.currentPassword;\r\n\t\t\t\t\t\tdelete user.iat;\r\n\t\t\t\t\t\tawait update(user);\r\n\t\t\t\t\t\twindow.location.replace(\"/index\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex){\r\n\t\t\t\t\t\tif(ex.response && ex.response.status === 400){\r\n\t\t\t\t\t\t\tthis.setState({error:\"Incorrectly data entered!\"});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse this.setState({error:\"Authentication error!\"});\r\n\t\t\t}\r\n\t\t\telse this.setState({error:\"Password must have at least 5 characters!\"});\r\n\t\t}\r\n\t\telse this.setState({error:\"Passwords don't match!\"});\r\n    };\r\n\r\n    componentDidMount() {\r\n\t\tconst user = auth.getCurrentUser();\r\n\t\tuser.password = \"\";\r\n\t\tuser.confirmPassword = \"\";\r\n\t\tthis.setState({user});\r\n\t}\r\n    \r\n    render() {\r\n        if(process.browser && !auth.getCurrentUser()) {\r\n            window.location.replace(\"/login\");\r\n        }\r\n        else return (\r\n            <Layout>\r\n                <div className=\"w-50 mx-auto shadow\" style={{marginTop:\"15%\"}}>\r\n                    <div className=\"card-body text-center pt-4\">\r\n                        <img src={cryptoImg}/>\r\n                        <h1 style={{fontFamily: \"Courier New\"}}><strong>Change Password</strong></h1>\r\n\t\t\t\t\t    <hr/>\r\n                        <form onSubmit={this.doSubmit} method=\"POST\" className=\"m-auto\">\r\n                            <div className=\"form-group input\">\r\n                                <input type=\"password\" name=\"currentPassword\" placeholder=\"Current password\" onChange={this.handleChange} className=\"form-control mb-3 mt-2 shadow w-75 mx-auto\"/>\r\n\t\t\t\t\t\t        <input type=\"password\" name=\"password\" placeholder=\"New password\" onChange={this.handleChange} className=\"form-control mb-3 mt-2 shadow w-75 mx-auto\"/>\r\n\t\t\t\t\t\t        <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm new password\" onChange={this.handleChange} className=\"form-control mb-3 mt-2 shadow w-75 mx-auto\"/>\r\n                                <button disabled={this.validate()} className=\"btn btn-success mt-2 mb-2\">Change Password</button>\r\n                            </div>\r\n                        </form>\r\n                        <div>\r\n                            <p className=\"text-danger\"><strong>{this.state.error}</strong></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}