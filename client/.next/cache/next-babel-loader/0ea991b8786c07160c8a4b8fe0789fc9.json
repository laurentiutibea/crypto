{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config\";\nvar apiEndpoit = apiUrl + \"/users\";\n\nfunction userUrl(id) {\n  return \"\".concat(apiEndpoit, \"/\").concat(id);\n}\n\nexport function getUsers() {\n  return http.get(apiEndpoit);\n}\nexport function register(user) {\n  return http.post(apiEndpoit, {\n    name: user.name,\n    email: user.email,\n    password: user.password,\n    isAdmin: false\n  });\n}\nexport function update(user) {\n  if (user._id) {\n    var body = _objectSpread({}, user);\n\n    delete body._id;\n    delete body.__v;\n    return http.put(userUrl(user._id), body);\n  }\n}\nexport function deleteUser(userId) {\n  return http[\"delete\"](userUrl(userId));\n}\nexport default {\n  getUsers: getUsers,\n  register: register,\n  update: update,\n  deleteUser: deleteUser\n};","map":{"version":3,"sources":["/home/laurentiu/Documents/crypto/client/services/userService.js"],"names":["http","apiUrl","apiEndpoit","userUrl","id","getUsers","get","register","user","post","name","email","password","isAdmin","update","_id","body","__v","put","deleteUser","userId"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;AAEA,IAAMC,UAAU,GAAGD,MAAM,GAAG,QAA5B;;AAEA,SAASE,OAAT,CAAiBC,EAAjB,EAAoB;AACnB,mBAAUF,UAAV,cAAwBE,EAAxB;AACA;;AAED,OAAO,SAASC,QAAT,GAAmB;AACzB,SAAOL,IAAI,CAACM,GAAL,CAASJ,UAAT,CAAP;AACA;AAED,OAAO,SAASK,QAAT,CAAkBC,IAAlB,EAAuB;AAC7B,SAAOR,IAAI,CAACS,IAAL,CAAUP,UAAV,EAAsB;AACtBQ,IAAAA,IAAI,EAAEF,IAAI,CAACE,IADW;AAE5BC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAFgB;AAG5BC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHa;AAI5BC,IAAAA,OAAO,EAAE;AAJmB,GAAtB,CAAP;AAMA;AAED,OAAO,SAASC,MAAT,CAAgBN,IAAhB,EAAqB;AAC3B,MAAGA,IAAI,CAACO,GAAR,EAAY;AACX,QAAMC,IAAI,qBAAOR,IAAP,CAAV;;AACA,WAAOQ,IAAI,CAACD,GAAZ;AACA,WAAOC,IAAI,CAACC,GAAZ;AACA,WAAOjB,IAAI,CAACkB,GAAL,CAASf,OAAO,CAACK,IAAI,CAACO,GAAN,CAAhB,EAA4BC,IAA5B,CAAP;AACA;AACD;AAED,OAAO,SAASG,UAAT,CAAoBC,MAApB,EAA2B;AACjC,SAAOpB,IAAI,UAAJ,CAAYG,OAAO,CAACiB,MAAD,CAAnB,CAAP;AACA;AAED,eAAc;AACVf,EAAAA,QAAQ,EAARA,QADU;AAEVE,EAAAA,QAAQ,EAARA,QAFU;AAGVO,EAAAA,MAAM,EAANA,MAHU;AAIVK,EAAAA,UAAU,EAAVA;AAJU,CAAd","sourcesContent":["import http from \"./httpService\";\nimport {apiUrl} from \"../config\";\n\nconst apiEndpoit = apiUrl + \"/users\";\n\nfunction userUrl(id){\n\treturn `${apiEndpoit}/${id}`;\n}\n\nexport function getUsers(){\n\treturn http.get(apiEndpoit);\n}\n\nexport function register(user){\n\treturn http.post(apiEndpoit, {\n        name: user.name,\n\t\temail: user.email,\n\t\tpassword: user.password,\n\t\tisAdmin: false\n\t});\n}\n\nexport function update(user){\n\tif(user._id){\n\t\tconst body = {...user};\n\t\tdelete body._id;\n\t\tdelete body.__v;\n\t\treturn http.put(userUrl(user._id), body);\n\t}\n}\n\nexport function deleteUser(userId){\n\treturn http.delete(userUrl(userId));\n}\n\nexport default{\n    getUsers,\n    register,\n    update,\n    deleteUser\n}"]},"metadata":{},"sourceType":"module"}