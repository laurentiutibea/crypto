{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nexport default class CustomData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      data: [],\n      graphs: [],\n      options: {}\n    });\n\n    _defineProperty(this, \"addGraph\", () => {\n      const graphs = [...this.state.graphs];\n      graphs.push({\n        id: 1,\n        data: {\n          name: \"Bitcoin\"\n        }\n      });\n      this.setState({\n        graphs\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({\n      user\n    });\n    const target = \"options['series'][0].data\";\n    await crypto.getCurrencies().then(res => this.setState({\n      target: res.data\n    }));\n    console.log(this.state.options['series'][0].data);\n  }\n\n  render() {\n    //const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Hello \", this.state.user.name), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.addGraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"+\"), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.graphs.length > 0 ? this.state.graphs.map(item => __jsx(HighchartsReact, {\n      key: item.id,\n      highcharts: Highcharts,\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })) : \"\"));\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","CustomData","user","data","graphs","options","state","push","id","name","setState","componentDidMount","getCurrentUser","target","getCurrencies","then","res","console","log","render","addGraph","length","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACxC;AACNO,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,OAAO,EAAE;AAJH,KADwC;;AAAA,sCAgBrC,MAAM;AACb,YAAMD,MAAM,GAAG,CAAC,GAAG,KAAKE,KAAL,CAAWF,MAAf,CAAf;AACAA,MAAAA,MAAM,CAACG,IAAP,CAAY;AACRC,QAAAA,EAAE,EAAE,CADI;AAERL,QAAAA,IAAI,EAAE;AACFM,UAAAA,IAAI,EAAE;AADJ;AAFE,OAAZ;AAMA,WAAKC,QAAL,CAAc;AAACN,QAAAA;AAAD,OAAd;AACH,KAzB+C;AAAA;;AAQhD,QAAMO,iBAAN,GAA0B;AAC3B,UAAMT,IAAI,GAAGH,IAAI,CAACa,cAAL,EAAb;AACG,SAAKF,QAAL,CAAc;AAACR,MAAAA;AAAD,KAAd;AACA,UAAMW,MAAM,GAAG,2BAAf;AACA,UAAMb,MAAM,CAACc,aAAP,GAAuBC,IAAvB,CAA4BC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAACG,MAAAA,MAAM,EAAEG,GAAG,CAACb;AAAb,KAAd,CAAnC,CAAN;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWD,OAAX,CAAmB,QAAnB,EAA6B,CAA7B,EAAgCF,IAA5C;AACD;;AAaDgB,EAAAA,MAAM,GAAG;AACP;AAEA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKb,KAAL,CAAWJ,IAAX,CAAgBO,IAA1B,CADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKW,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWF,MAAX,CAAkBiB,MAAlB,GAA2B,CAA3B,GACC,KAAKf,KAAL,CAAWF,MAAX,CAAkBkB,GAAlB,CAAsBC,IAAI,IAAI,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAEA,IAAI,CAACf,EAA3B;AAA+B,MAAA,UAAU,EAAEX,UAA3C;AAAuD,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWD,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,CADD,GACuH,EAF1H,CAHJ,CADF;AAkBD;;AAhD+C","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: [],\r\n    graphs: [],\r\n    options: {}\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\tconst user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    const target = \"options['series'][0].data\"\r\n    await crypto.getCurrencies().then(res => this.setState({target: res.data}));\r\n    console.log(this.state.options['series'][0].data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    //const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n              this.state.graphs.map(item => <HighchartsReact key={item.id} highcharts={Highcharts} options={this.state.options}/>): \"\"}\r\n            {/* {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options}/>\r\n                    </div> \r\n            ): \"\"} */}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}