{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nconst chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\nexport default class CustomData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      jwt: \"\",\n      data: [],\n      graphs: [],\n      cryptocurrencies: [],\n      currencies: [],\n      selectedCryptocurrency: {},\n      selectedCurrency: {},\n      workers: 0,\n      loading: false,\n      loaded: false,\n      searchQueryCryptocurrencies: \"\",\n      searchQueryCurrencies: \"\",\n      interval: [],\n      loadArr: [],\n      chartOptions: {}\n    });\n\n    _defineProperty(this, \"addGraph\", () => {\n      const worker = new Worker(\"static/service-worker.js\");\n\n      const bkOptions = _objectSpread({}, chartOptions);\n\n      const graphs = [...this.state.graphs];\n      const loadArr = [...this.state.loadArr];\n\n      worker.onmessage = e => {\n        bkOptions.title = {\n          text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time`\n        };\n        bkOptions.series = [{\n          type: \"line\",\n          name: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\n          data: e.data.prices\n        }];\n        bkOptions.xAxis.categories = [...e.data.time];\n        graphs.push({\n          id: _Date$now(),\n          chartOptions: bkOptions,\n          cryptocurrency: this.state.selectedCryptocurrency.value,\n          currency: this.state.selectedCurrency.value,\n          live: false,\n          image: e.data.image\n        });\n        loadArr.push(false);\n        this.setState({\n          graphs: graphs,\n          workers: this.state.workers + 1,\n          interval: \"\",\n          loadArr\n        });\n      };\n\n      worker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"findName\", (array, value) => {\n      for (let i = 0; i < this.state[array].length; i++) {\n        if (this.state[array][i].id === value) {\n          return this.state[array][i].name;\n        }\n      }\n    });\n\n    _defineProperty(this, \"changeCryptocurrency\", (e, array) => {\n      const name = this.findName(array, e.target.value);\n      this.setState({\n        [`selected${e.target.name}`]: {\n          value: e.target.value,\n          name: name\n        }\n      });\n    });\n\n    _defineProperty(this, \"changeGraphCryptocurrency\", (e, index) => {\n      const graphs = [...this.state.graphs];\n      graphs[index][e.target.name.toLowerCase()] = e.target.value;\n      this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(this, \"refreshAll\", () => {\n      let workers = new Array(this.state.workers);\n      const graphs = [...this.state.graphs];\n      this.setState({\n        loading: true\n      });\n\n      for (let i = 0; i < this.state.workers; i++) {\n        workers[i] = new Worker(\"static/service-worker.js\");\n\n        workers[i].onmessage = e => {\n          graphs[i].chartOptions.xAxis.categories = [...e.data.time];\n          graphs[i].chartOptions.series = [{\n            type: \"line\",\n            name: this.state.graphs[i].chartOptions.series[0].name,\n            data: e.data.prices\n          }];\n          this.setState({\n            graphs: graphs,\n            loading: false\n          });\n        };\n\n        workers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\n      }\n    });\n\n    _defineProperty(this, \"refreshSingle\", index => {\n      const worker = new Worker(\"static/service-worker.js\");\n      const graphs = [...this.state.graphs];\n      const loadArr = [...this.state.loadArr];\n      loadArr[index] = true;\n      this.setState({\n        loadArr\n      });\n\n      worker.onmessage = e => {\n        const cryptocurrency = this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\n        const currency = this.findName(\"currencies\", graphs[index].currency);\n        graphs[index].chartOptions.title = {\n          text: `${cryptocurrency} to ${currency} exchange rate over time`\n        };\n        graphs[index].chartOptions.xAxis.categories = [...e.data.time];\n        graphs[index].image = e.data.image;\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: `${graphs[index].cryptocurrency} to ${graphs[index].currency}`,\n          data: e.data.prices\n        }];\n        loadArr[index] = false;\n        this.setState({\n          graphs: graphs,\n          loadArr\n        });\n      };\n\n      worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"removeGraph\", index => {\n      let graphs = [...this.state.graphs];\n      clearInterval(graphs[index].interval);\n      graphs = graphs.filter((item, i) => i !== index);\n      this.setState({\n        graphs\n      });\n    });\n\n    _defineProperty(this, \"liveData\", index => {\n      const worker = new Worker(\"static/service-worker.js\");\n      const graphs = [...this.state.graphs];\n      const loadArr = [...this.state.loadArr];\n      loadArr[index] = true;\n      this.setState({\n        loadArr\n      });\n\n      worker.onmessage = e => {\n        graphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\n        graphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: this.state.graphs[index].chartOptions.series[0].name,\n          data: graphs[index].chartOptions.series[0].data\n        }];\n        loadArr[index] = false;\n        this.setState({\n          graphs,\n          loadArr\n        });\n      };\n\n      worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"changeGraphLive\", (e, index) => {\n      const graphs = [...this.state.graphs];\n\n      if (e.target.checked) {\n        graphs[index].interval = setInterval(() => this.liveData(index), 4000);\n        this.setState({\n          graphs\n        });\n      } else {\n        clearInterval(graphs[index].interval);\n      }\n    });\n\n    _defineProperty(this, \"saveGraph\", async index => {\n      const bkGraph = _objectSpread({}, this.state.graphs[index]);\n\n      const cryptocurrency = this.findName(\"cryptocurrencies\", bkGraph.cryptocurrency);\n      const currency = this.findName(\"currencies\", bkGraph.currency);\n      const graph = {\n        categories: bkGraph.chartOptions.xAxis.categories,\n        series: bkGraph.chartOptions.series[0],\n        graphId: bkGraph.id,\n        cryptocurrency: {\n          value: bkGraph.cryptocurrency,\n          name: cryptocurrency\n        },\n        currency: {\n          value: bkGraph.currency,\n          name: currency\n        },\n        date: new Date(),\n        image: bkGraph.image\n      };\n      await crypto.saveGraph(graph, this.state.user._id).catch(err => console.log(\"ERROR!\", err));\n    });\n\n    _defineProperty(this, \"getFilteredCryptocurrencies\", () => {\n      const {\n        cryptocurrencies: allData,\n        searchQueryCryptocurrencies\n      } = this.state;\n      let filtered = allData;\n      if (searchQueryCryptocurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase()));\n      return {\n        filtered\n      };\n    });\n\n    _defineProperty(this, \"getFilteredCurrencies\", () => {\n      const {\n        currencies: allData,\n        searchQueryCurrencies\n      } = this.state;\n      let filtered = allData;\n      if (searchQueryCurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase()));\n      return {\n        filtered\n      };\n    });\n\n    _defineProperty(this, \"handleSearch\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    const jwt = auth.getJwt();\n    this.setState({\n      user,\n      jwt\n    });\n    await crypto.getCryptocurrencies().then(res => {\n      this.setState({\n        cryptocurrencies: res.data.cryptocurrencies,\n        currencies: res.data.currencies,\n        loaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      filtered: cryptocurrencies\n    } = this.getFilteredCryptocurrencies();\n    const {\n      filtered: currencies\n    } = this.getFilteredCurrencies();\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"w-50 mx-auto text-center pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: cryptoImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      style: {\n        fontFamily: \"Courier New\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Custom Data Graphs\")), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), this.state.loaded ? __jsx(\"div\", {\n      className: \"text-center pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row w-75 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.handleSearch,\n      placeholder: \"Search Cryptocurrency...\",\n      value: this.state.searchQueryCryptocurrencies,\n      name: \"searchQueryCryptocurrencies\",\n      className: \"form-control w-75\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-search\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      name: \"Cryptocurrency\",\n      onChange: e => this.changeCryptocurrency(e, \"cryptocurrencies\"),\n      disabled: !this.state.loaded,\n      className: \"form-control\",\n      style: {\n        display: \"inline-block\",\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Select Cryptocurrency\"), cryptocurrencies.map(item => __jsx(\"option\", {\n      value: item.id,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, item.name, \" - \", item.symbol))), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-hand-pointer\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.handleSearch,\n      placeholder: \"Search Currency...\",\n      value: this.state.searchQueryCurrencies,\n      name: \"searchQueryCurrencies\",\n      className: \"form-control w-75\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-search\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      name: \"Currency\",\n      onChange: e => this.changeCryptocurrency(e, \"currencies\"),\n      disabled: !this.state.loaded,\n      className: \"form-control\",\n      style: {\n        display: \"inline-block\",\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Select Currency\"), currencies.map(item => __jsx(\"option\", {\n      value: item.id,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, item.name, \" - \", item.symbol))), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-hand-pointer\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Add graph for selected values\")), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.addGraph,\n      disabled: _Object$keys(this.state.selectedCryptocurrency).length === 0 || _Object$keys(this.state.selectedCurrency).length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Refresh all graphs\")), __jsx(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.refreshAll,\n      disabled: this.state.graphs.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-sync\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    })))), this.state.graphs.length > 0 ? this.state.graphs.map((item, index) => __jsx(\"div\", {\n      key: item.id,\n      className: \"pt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      src: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-9 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, !this.state.loading && !this.state.loadArr[index] ? __jsx(HighchartsReact, {\n      key: item.id,\n      highcharts: Highcharts,\n      options: item.chartOptions,\n      allowChartUpdate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }) : __jsx(\"div\", {\n      className: \"mx-auto text-center\",\n      style: {\n        paddingTop: \"20%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      name: \"Cryptocurrency\",\n      onChange: e => this.changeGraphCryptocurrency(e, index),\n      defaultValue: item.cryptocurrency,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, this.state.cryptocurrencies.map(i => __jsx(\"option\", {\n      value: i.id,\n      key: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, i.name, \" - \", i.symbol)))), __jsx(\"div\", {\n      className: \"pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      name: \"Currency\",\n      onChange: e => this.changeGraphCryptocurrency(e, index),\n      defaultValue: item.currency,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, this.state.currencies.map(i => __jsx(\"option\", {\n      value: i.id,\n      key: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, i.name, \" - \", i.symbol)))), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-12 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Live data\")), __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: e => this.changeGraphLive(e, index),\n      defaultValue: item.live,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Search\")), __jsx(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.refreshSingle(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Refresh\")), __jsx(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.refreshSingle(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Delete\")), __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => this.removeGraph(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-minus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Save\")), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.saveGraph(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }))))))))) : \"\") : __jsx(\"div\", {\n      className: \"w-50 mx-auto text-center\",\n      style: {\n        paddingTop: \"30vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","CustomData","user","jwt","data","graphs","cryptocurrencies","currencies","selectedCryptocurrency","selectedCurrency","workers","loaded","searchQueryCryptocurrencies","searchQueryCurrencies","interval","loadArr","worker","Worker","bkOptions","state","onmessage","e","name","series","prices","categories","time","push","id","cryptocurrency","value","currency","live","image","setState","postMessage","array","i","length","findName","target","index","toLowerCase","Array","clearInterval","filter","item","currentTime","currentPrice","checked","setInterval","liveData","bkGraph","graph","graphId","date","Date","saveGraph","_id","catch","err","console","log","allData","filtered","m","startsWith","componentDidMount","getCurrentUser","getJwt","getCryptocurrencies","then","res","render","getFilteredCryptocurrencies","getFilteredCurrencies","fontFamily","handleSearch","display","changeCryptocurrency","width","map","symbol","addGraph","refreshAll","paddingTop","changeGraphCryptocurrency","changeGraphLive","refreshSingle","removeGraph"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\n\r\nconst chartOptions = {\r\n\tchart: { zoomType: 'x' },\r\n\txAxis: {\r\n\t\ttype: 'datetime',\r\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\r\n\t\ttitle: { text: 'Date' }\r\n\t},\r\n\tyAxis: {\r\n\t\ttitle: { text: 'Exchange rate' }\r\n\t},\r\n\tlegend: { enabled: false },\r\n\tplotOptions: {\r\n\t\tarea: {\r\n\t\t\tfillColor: {\r\n\t\t\t\tlinearGradient: {\r\n\t\t\t\t\tx1: 0,\r\n\t\t\t\t\ty1: 0,\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\ty2: 1\r\n\t\t\t\t},\r\n\t\t\t\tstops: [\r\n\t\t\t\t\t[0, \"#7cb5ec\"],\r\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\r\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tmarker: { radius: 2 },\r\n\t\t\tlineWidth: 1,\r\n\t\t\tstates: { hover: { lineWidth: 1 } },\r\n\t\t\tthreshold: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class CustomData extends Component {\r\n\tstate = {\r\n\t\tuser: {},\r\n\t\tjwt: \"\",\r\n\t\tdata: [],\r\n\t\tgraphs: [],\r\n\t\tcryptocurrencies: [],\r\n\t\tcurrencies: [],\r\n\t\tselectedCryptocurrency: {},\r\n\t\tselectedCurrency: {},\r\n\t\tworkers: 0,\r\n\t\tloading: false,\r\n\t\tloaded: false,\r\n\t\tsearchQueryCryptocurrencies: \"\",\r\n\t\tsearchQueryCurrencies: \"\",\r\n\t\tinterval: [],\r\n\t\tloadArr: [],\r\n\t\tchartOptions: {}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst user = auth.getCurrentUser();\r\n\t\tconst jwt = auth.getJwt();\r\n\t\tthis.setState({ user, jwt });\r\n\t\tawait crypto.getCryptocurrencies().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcryptocurrencies: res.data.cryptocurrencies,\r\n\t\t\t\tcurrencies: res.data.currencies,\r\n\t\t\t\tloaded: true\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\taddGraph = () => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst bkOptions = { ...chartOptions };\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tworker.onmessage = e => {\r\n\t\t\tbkOptions.title = { text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time` };\r\n\t\t\tbkOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\r\n\t\t\t\tdata: e.data.prices\r\n\t\t\t}];\r\n\t\t\tbkOptions.xAxis.categories = [...e.data.time];\r\n\t\t\tgraphs.push({\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\tchartOptions: bkOptions,\r\n\t\t\t\tcryptocurrency: this.state.selectedCryptocurrency.value,\r\n\t\t\t\tcurrency: this.state.selectedCurrency.value,\r\n\t\t\t\tlive: false,\r\n\t\t\t\timage: e.data.image\r\n\t\t\t});\r\n\t\t\tloadArr.push(false);\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs: graphs,\r\n\t\t\t\tworkers: this.state.workers + 1,\r\n\t\t\t\tinterval: \"\",\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\r\n\r\n\t}\r\n\r\n\tfindName = (array, value) => {\r\n\t\tfor (let i = 0; i < this.state[array].length; i++) {\r\n\t\t\tif (this.state[array][i].id === value) {\r\n\t\t\t\treturn this.state[array][i].name;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tchangeCryptocurrency = (e, array) => {\r\n\t\tconst name = this.findName(array, e.target.value);\r\n\t\tthis.setState({\r\n\t\t\t[`selected${e.target.name}`]: {\r\n\t\t\t\tvalue: e.target.value,\r\n\t\t\t\tname: name\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeGraphCryptocurrency = (e, index) => {\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tgraphs[index][e.target.name.toLowerCase()] = e.target.value;\r\n\t\tthis.setState({ graphs: graphs })\r\n\t}\r\n\r\n\trefreshAll = () => {\r\n\t\tlet workers = new Array(this.state.workers);\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tthis.setState({ loading: true });\r\n\t\tfor (let i = 0; i < this.state.workers; i++) {\r\n\t\t\tworkers[i] = new Worker(\"static/service-worker.js\");\r\n\t\t\tworkers[i].onmessage = e => {\r\n\t\t\t\tgraphs[i].chartOptions.xAxis.categories = [...e.data.time];\r\n\t\t\t\tgraphs[i].chartOptions.series = [{\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tname: this.state.graphs[i].chartOptions.series[0].name,\r\n\t\t\t\t\tdata: e.data.prices\r\n\t\t\t\t}]\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tgraphs: graphs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tworkers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSingle = (index) => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tloadArr[index] = true;\r\n\t\tthis.setState({loadArr});\r\n\t\tworker.onmessage = e => {\r\n\t\t\tconst cryptocurrency= this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\r\n\t\t\tconst currency= this.findName(\"currencies\", graphs[index].currency);\r\n\t\t\tgraphs[index].chartOptions.title = { text: `${cryptocurrency} to ${currency} exchange rate over time` };\r\n\t\t\tgraphs[index].chartOptions.xAxis.categories = [...e.data.time];\r\n\t\t\tgraphs[index].image = e.data.image;\r\n\t\t\tgraphs[index].chartOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: `${graphs[index].cryptocurrency} to ${graphs[index].currency}`,\r\n\t\t\t\tdata: e.data.prices\r\n\t\t\t}];\r\n\t\t\tloadArr[index] = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs: graphs,\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n\t}\r\n\r\n\tremoveGraph = (index) => {\r\n\t\tlet graphs = [...this.state.graphs];\r\n\t\tclearInterval(graphs[index].interval);\r\n\t\tgraphs = graphs.filter((item, i) => i !== index);\r\n\t\tthis.setState({ graphs });\r\n\t}\r\n\r\n\tliveData = (index) => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tloadArr[index] = true;\r\n\t\tthis.setState({loadArr});\r\n\t\tworker.onmessage = e => {\r\n\t\t\tgraphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\r\n\t\t\tgraphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\r\n\t\t\tgraphs[index].chartOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: this.state.graphs[index].chartOptions.series[0].name,\r\n\t\t\t\tdata: graphs[index].chartOptions.series[0].data\r\n\t\t\t}];\r\n\t\t\tloadArr[index] = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs,\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n\t}\r\n\r\n\tchangeGraphLive = (e, index) => {\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tif (e.target.checked) {\r\n\t\t\tgraphs[index].interval = setInterval(() => this.liveData(index), 4000);\r\n\t\t\tthis.setState({ graphs });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclearInterval(graphs[index].interval);\r\n\t\t}\r\n\t}\r\n\r\n\tsaveGraph = async (index) => {\r\n\t\tconst bkGraph = { ...this.state.graphs[index] };\r\n\t\tconst cryptocurrency= this.findName(\"cryptocurrencies\", bkGraph.cryptocurrency);\r\n\t\tconst currency= this.findName(\"currencies\", bkGraph.currency);\r\n\t\tconst graph = {\r\n\t\t\tcategories: bkGraph.chartOptions.xAxis.categories,\r\n\t\t\tseries: bkGraph.chartOptions.series[0],\r\n\t\t\tgraphId: bkGraph.id,\r\n\t\t\tcryptocurrency: {\r\n\t\t\t\tvalue: bkGraph.cryptocurrency,\r\n\t\t\t\tname: cryptocurrency\r\n\t\t\t},\r\n\t\t\tcurrency: {\r\n\t\t\t\tvalue: bkGraph.currency,\r\n\t\t\t\tname: currency\r\n\t\t\t},\r\n\t\t\tdate: new Date,\r\n\t\t\timage: bkGraph.image\r\n\t\t}\r\n\t\tawait crypto.saveGraph(graph, this.state.user._id).catch(err => console.log(\"ERROR!\", err));\r\n\t}\r\n\r\n\tgetFilteredCryptocurrencies = () => {\r\n\t\tconst { cryptocurrencies: allData, searchQueryCryptocurrencies } = this.state;\r\n\t\tlet filtered = allData;\r\n\t\tif (searchQueryCryptocurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase()));\r\n\t\treturn { filtered };\r\n\t};\r\n\r\n\tgetFilteredCurrencies = () => {\r\n\t\tconst { currencies: allData, searchQueryCurrencies } = this.state;\r\n\t\tlet filtered = allData;\r\n\t\tif (searchQueryCurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase()));\r\n\t\treturn { filtered };\r\n\t};\r\n\r\n\thandleSearch = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { filtered: cryptocurrencies } = this.getFilteredCryptocurrencies();\r\n\t\tconst { filtered: currencies } = this.getFilteredCurrencies();\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<div className=\"w-50 mx-auto text-center pt-5\">\r\n\t\t\t\t\t<img src={cryptoImg} />\r\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Custom Data Graphs</strong></h1>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{this.state.loaded ?\r\n\t\t\t\t\t<div className=\"text-center pt-2\">\r\n\t\t\t\t\t\t<div className=\"row w-75 mx-auto\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Cryptocurrency...\" value={this.state.searchQueryCryptocurrencies} name=\"searchQueryCryptocurrencies\" className=\"form-control w-75\" style={{display: \"inline-block\"}}/>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeCryptocurrency(e, \"cryptocurrencies\")} disabled={!this.state.loaded} className=\"form-control\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Cryptocurrency</option>{cryptocurrencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Currency...\" value={this.state.searchQueryCurrencies} name=\"searchQueryCurrencies\" className=\"form-control w-75\" style={{display: \"inline-block\"}}/>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\r\n\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeCryptocurrency(e, \"currencies\")} disabled={!this.state.loaded} className=\"form-control\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Currency</option>{currencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t<p><strong>Add graph for selected values</strong></p>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.addGraph} disabled={Object.keys(this.state.selectedCryptocurrency).length === 0 || Object.keys(this.state.selectedCurrency).length === 0}><i className=\"fas fa-plus\"/></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t<p><strong>Refresh all graphs</strong></p>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.refreshAll} disabled={this.state.graphs.length === 0}><i className=\"fas fa-sync\"/></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{this.state.graphs.length > 0 ?\r\n\t\t\t\t\t\t\tthis.state.graphs.map((item, index) => \r\n\t\t\t\t\t\t\t\t<div key={item.id} className=\"pt-3\">\r\n\t\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t\t<img src={item.image} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"row mt-4\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-9 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{!this.state.loading && !this.state.loadArr[index] ? <HighchartsReact key={item.id} highcharts={Highcharts} options={item.chartOptions} allowChartUpdate = {true} /> : <div className=\"mx-auto text-center\" style={{paddingTop: \"20%\"}}><img src={loading} /></div>}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.cryptocurrency} className=\"form-control\">{this.state.cryptocurrencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.currency} className=\"form-control\">{this.state.currencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Live data</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e, index)} defaultValue={item.live} className=\"form-control\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Search</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-search\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Refresh</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-redo\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Delete</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}><i className=\"fas fa-minus\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Save</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => this.saveGraph(index)}><i className=\"fas fa-save\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : \"\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}