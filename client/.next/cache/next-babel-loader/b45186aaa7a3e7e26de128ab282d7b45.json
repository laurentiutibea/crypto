{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\admin.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport _ from \"lodash\";\nimport Layout from \"../components/layout\";\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport { getUsers, updateAdmin, deleteUser } from \"../services/userService\";\nimport { paginate } from \"../utils/paginate\";\nimport DataTable from \"../components/dataTable\";\nimport Pagination from \"../components/pagination\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nexport default class Admin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      data: [],\n      pageSize: 2,\n      currentPage: 1,\n      searchQuery: \"\",\n      sortColumn: {\n        path: \"email\",\n        order: \"asc\"\n      },\n      columns: [{\n        path: \"email\",\n        label: \"Email\"\n      }, {\n        path: \"name\",\n        label: \"Name\"\n      }, {\n        key: \"isAdmin\",\n        label: \"Admin\",\n        content: data => __jsx(\"select\", {\n          name: \"isAdmin\",\n          className: \"form-control select-w\",\n          onChange: e => this.handleChangeBool(e, data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, __jsx(\"option\", {\n          value: data.isAdmin,\n          hidden: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, data.isAdmin), __jsx(\"option\", {\n          value: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"true\"), __jsx(\"option\", {\n          value: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"false\"))\n      }, {\n        key: \"update\",\n        content: data => __jsx(\"button\", {\n          onClick: () => this.doUpdate(data),\n          className: \"btn btn-warning btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Update\")\n      }, {\n        key: \"delete\",\n        content: data => __jsx(\"button\", {\n          onClick: () => this.handleDelete(data),\n          className: \"btn btn-danger btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Delete\")\n      }],\n      disabled: false,\n      loaded: false\n    });\n\n    _defineProperty(this, \"getData\", async () => {\n      await getUsers().then(res => {\n        console.log(res.data);\n        const data = [...res.data];\n        data.map(item => item.isAdmin = item.isAdmin.toString());\n        this.setState({\n          data,\n          loaded: true\n        });\n      });\n    });\n\n    _defineProperty(this, \"handlePageChange\", page => {\n      this.setState({\n        currentPage: page\n      });\n    });\n\n    _defineProperty(this, \"handleSearch\", query => {\n      this.setState({\n        searchQuery: query.target.value,\n        currentPage: 1\n      });\n    });\n\n    _defineProperty(this, \"handleSort\", sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    });\n\n    _defineProperty(this, \"handleDelete\", async data => {\n      const originalData = [...this.state.data];\n      const allData = originalData.filter(m => m._id !== data._id);\n      this.setState({\n        data: allData\n      });\n\n      try {\n        await deleteUser(data._id);\n        await this.getData();\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) console.log(\"This user was already deleted.\");\n        this.setState({\n          data: originalData\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChangeBool\", (e, data) => {\n      data[e.target.name] = e.target.value;\n\n      let allData = _objectSpread({}, this.state.data);\n\n      for (let i = 0; i < allData.length; i++) if (allData[i]._id === data._id) allData[i] = data;\n\n      allData = _Object$keys(allData).map(key => allData[key]);\n      this.setState({\n        data: allData\n      });\n    });\n\n    _defineProperty(this, \"doUpdate\", async data => {\n      try {\n        delete data.__v;\n        data.isAdmin = JSON.parse(data.isAdmin);\n        await updateAdmin(data);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          console.log(\"Incorrectly data entered!\");\n        }\n      }\n    });\n\n    _defineProperty(this, \"getPageData\", () => {\n      const {\n        pageSize,\n        currentPage,\n        data: allData,\n        searchQuery,\n        sortColumn\n      } = this.state;\n      let filtered = allData;\n      if (searchQuery) filtered = allData.filter(m => m.email.toLowerCase().startsWith(searchQuery.toLowerCase()));\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const data = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: data\n      };\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({\n      user\n    });\n    await this.getData();\n  }\n\n  render() {\n    if (process.browser && !auth.getCurrentUser()) {\n      window.location.replace(\"/login\");\n    } else {\n      if (process.browser && this.state.user.isAdmin === false) {\n        window.location.replace(\"/index\");\n      }\n\n      const {\n        pageSize,\n        currentPage,\n        searchQuery,\n        sortColumn\n      } = this.state;\n      const {\n        totalCount,\n        data\n      } = this.getPageData();\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: cryptoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        style: {\n          fontFamily: \"Courier New\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Administration panel\")), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), this.state.loaded ? __jsx(\"div\", {\n        className: \"text-center pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-12 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.handleSearch,\n        placeholder: \"Search Users...\",\n        value: this.state.searchQuery,\n        name: \"searchQueryCryptocurrencies\",\n        className: \"form-control shadow w-25\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-search\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-12 mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, !_.isEmpty(this.state.data) ? __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, __jsx(DataTable, {\n        data: data,\n        sortColumn: sortColumn,\n        onDelete: this.handleDelete,\n        onSort: this.handleSort,\n        columns: this.state.columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })) : __jsx(\"img\", {\n        src: loading,\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), __jsx(Pagination, {\n        itemsCount: totalCount,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })))) : __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center\",\n        style: {\n          paddingTop: \"30vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/admin.js"],"names":["React","Component","_","Layout","auth","crypto","getUsers","updateAdmin","deleteUser","paginate","DataTable","Pagination","loading","cryptoImg","Admin","user","data","pageSize","currentPage","searchQuery","sortColumn","path","order","columns","label","key","content","e","handleChangeBool","isAdmin","doUpdate","handleDelete","disabled","loaded","then","res","console","log","map","item","toString","setState","page","query","target","value","originalData","state","allData","filter","m","_id","getData","ex","response","status","name","i","length","__v","JSON","parse","filtered","email","toLowerCase","startsWith","sorted","orderBy","totalCount","componentDidMount","getCurrentUser","render","process","browser","window","location","replace","getPageData","fontFamily","handleSearch","display","isEmpty","handleSort","handlePageChange","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\nimport {getUsers, updateAdmin, deleteUser} from \"../services/userService\";\r\nimport {paginate} from \"../utils/paginate\";\r\nimport DataTable from \"../components/dataTable\";\r\nimport Pagination from \"../components/pagination\";\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\nexport default class Admin extends Component{\r\n    state = {\r\n        user: {},\r\n        data: [],\r\n\t\tpageSize: 2,\r\n\t\tcurrentPage: 1,\r\n\t\tsearchQuery: \"\",\r\n\t\tsortColumn: {\r\n\t\t\tpath: \"email\",\r\n\t\t\torder: \"asc\"\r\n\t\t},\r\n\t\tcolumns: [\r\n            {path: \"email\", label: \"Email\"},\r\n            {path: \"name\", label: \"Name\"},\r\n\t\t\t{key: \"isAdmin\", label:\"Admin\", content: data => (\r\n\t\t\t\t\t<select name=\"isAdmin\" className=\"form-control select-w\" onChange={(e) => this.handleChangeBool(e,data)}>\r\n\t\t\t\t\t\t<option value={data.isAdmin} hidden>{data.isAdmin}</option>\r\n\t\t\t\t\t\t<option value={true}>true</option>\r\n\t\t\t\t\t\t<option value={false}>false</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t)},\r\n\t\t\t{key: \"update\", content: data => ( <button onClick={() => this.doUpdate(data)} className=\"btn btn-warning btn-sm\">Update</button>)},\r\n\t\t\t{key: \"delete\", content: data => ( <button onClick={() => this.handleDelete(data)} className=\"btn btn-danger btn-sm\">Delete</button>)}\r\n\t\t],\r\n        disabled: false,\r\n        loaded: false\r\n    }\r\n\r\n    getData = async () => {\r\n        await getUsers().then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tconst data = [...res.data];\r\n\t\t\tdata.map(item => item.isAdmin = item.isAdmin.toString());\r\n\t\t\tthis.setState({data, loaded: true});\r\n\t\t});\r\n    }\r\n\r\n    async componentDidMount() {\r\n\t\tconst user = auth.getCurrentUser();\r\n        this.setState({user});\r\n        await this.getData();\r\n    }\r\n\r\n    handlePageChange = page => {\r\n\t\tthis.setState({currentPage:page});\r\n\t};\r\n\r\n\thandleSearch = query => {\r\n\t\tthis.setState({searchQuery: query.target.value, currentPage: 1});\r\n\t};\r\n\r\n\thandleSort = sortColumn => {\r\n\t\tthis.setState({sortColumn});\r\n    };\r\n    \r\n    handleDelete = async data => {\r\n\t\tconst originalData = [...this.state.data];\r\n\t\tconst allData = originalData.filter(m => m._id !== data._id);\r\n\t\tthis.setState({data:allData});\r\n\t\ttry {\r\n\t\t\tawait deleteUser(data._id);\r\n\t\t\tawait this.getData();\r\n\t\t}\r\n\t\tcatch(ex){\r\n\t\t\tif(ex.response && ex.response.status === 404) console.log(\"This user was already deleted.\");\r\n\r\n\t\t\tthis.setState({data: originalData});\r\n\t\t}\r\n\t};\r\n\r\n    handleChangeBool = (e,data) => {\r\n\t\tdata[e.target.name] = e.target.value;\r\n\t\tlet allData = {...this.state.data};\r\n\t\tfor(let i=0; i<allData.length; i++) if(allData[i]._id === data._id) allData[i] = data;\r\n\t\tallData = Object.keys(allData).map(key => allData[key]);\r\n\t\tthis.setState({data: allData});\r\n\t};\r\n    \r\n    doUpdate = async data => {\r\n\t\ttry{\r\n            delete data.__v;\r\n\t\t\tdata.isAdmin = JSON.parse(data.isAdmin);\r\n            await updateAdmin(data);\r\n\t\t}\r\n\t\tcatch(ex){\r\n\t\t\tif(ex.response && ex.response.status === 400){\r\n\t\t\t\tconsole.log(\"Incorrectly data entered!\");\r\n\t\t\t}\r\n\t\t}\r\n    };\r\n    \r\n    getPageData = () => {\r\n\t\tconst { pageSize, currentPage, data: allData, searchQuery, sortColumn } = this.state;\r\n\r\n\t\tlet filtered = allData;\r\n\t\tif(searchQuery) filtered = allData.filter(m => m.email.toLowerCase().startsWith(searchQuery.toLowerCase()));\r\n\r\n\t\tconst sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n\t\tconst data = paginate(sorted, currentPage, pageSize);\r\n\r\n\t\treturn {totalCount: filtered.length, data: data};\r\n\t};\r\n\r\n    render(){\r\n        if(process.browser && !auth.getCurrentUser()) {\r\n            window.location.replace(\"/login\");\r\n        }\r\n        else {\r\n            if(process.browser && this.state.user.isAdmin === false) {\r\n                window.location.replace(\"/index\");\r\n            }\r\n            const { pageSize, currentPage, searchQuery, sortColumn } = this.state;\r\n            const {totalCount, data} = this.getPageData();\r\n        \r\n            return (\r\n                <Layout>\r\n                    <div className=\"w-50 mx-auto text-center pt-5\">\r\n                        <img src={cryptoImg} />\r\n                        <h1 style={{fontFamily: \"Courier New\"}}><strong>Administration panel</strong></h1>\r\n                        <hr/>\r\n\t\t\t\t    </div>\r\n                    {this.state.loaded ?\r\n\t\t\t\t\t<div className=\"text-center pt-2\">\r\n\t\t\t\t\t\t<div className=\"row mx-auto\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Users...\" value={this.state.searchQuery} name=\"searchQueryCryptocurrencies\" className=\"form-control shadow w-25\" style={{display: \"inline-block\"}}/>\r\n                                <span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-5\">\r\n                                {!_.isEmpty(this.state.data) ? <div>\r\n                                    <DataTable\r\n                                        data={data}\r\n                                        sortColumn={sortColumn}\r\n                                        onDelete={this.handleDelete}\r\n                                        onSort={this.handleSort}\r\n                                        columns={this.state.columns}\r\n                                    /></div>: <img src={loading} alt=\"loading\"/>}\r\n                                <Pagination\r\n                                    itemsCount={totalCount}\r\n                                    pageSize={pageSize}\r\n                                    currentPage={currentPage}\r\n                                    onPageChange={this.handlePageChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div> : <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n                </Layout>\r\n            );\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}