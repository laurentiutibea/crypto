{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nconst chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\nexport default class CustomData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      jwt: \"\",\n      data: [],\n      graphs: [],\n      cryptocurrencies: [],\n      currencies: [],\n      selectedCryptocurrency: {},\n      selectedCurrency: {},\n      workers: 0,\n      loading: false,\n      loaded: false,\n      searchQueryCryptocurrencies: \"\",\n      searchQueryCurrencies: \"\",\n      interval: [],\n      loadArr: [],\n      chartOptions: {}\n    });\n\n    _defineProperty(this, \"addGraph\", () => {\n      const worker = new Worker(\"static/service-worker.js\");\n\n      const bkOptions = _objectSpread({}, chartOptions);\n\n      const graphs = [...this.state.graphs];\n      const loadArr = [...this.state.loadArr];\n\n      worker.onmessage = e => {\n        bkOptions.title = {\n          text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time`\n        };\n        bkOptions.series = [{\n          type: \"line\",\n          name: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\n          data: e.data.prices,\n          connectNulls: true\n        }];\n        bkOptions.xAxis.categories = [...e.data.time];\n        graphs.push({\n          id: _Date$now(),\n          chartOptions: bkOptions,\n          cryptocurrency: this.state.selectedCryptocurrency.value,\n          currency: this.state.selectedCurrency.value,\n          live: false,\n          image: e.data.image\n        });\n        loadArr.push(false);\n        this.setState({\n          graphs: graphs,\n          workers: this.state.workers + 1,\n          interval: \"\",\n          loadArr\n        });\n      };\n\n      worker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"findName\", (array, value) => {\n      for (let i = 0; i < this.state[array].length; i++) {\n        if (this.state[array][i].id === value) {\n          return this.state[array][i].name;\n        }\n      }\n    });\n\n    _defineProperty(this, \"changeCryptocurrency\", (e, array) => {\n      const name = this.findName(array, e.target.value);\n      this.setState({\n        [`selected${e.target.name}`]: {\n          value: e.target.value,\n          name: name\n        }\n      });\n    });\n\n    _defineProperty(this, \"changeGraphCryptocurrency\", (e, index) => {\n      const graphs = [...this.state.graphs];\n      graphs[index][e.target.name.toLowerCase()] = e.target.value;\n      this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(this, \"refreshAll\", () => {\n      let workers = new Array(this.state.workers);\n      const graphs = [...this.state.graphs];\n      this.setState({\n        loading: true\n      });\n\n      for (let i = 0; i < this.state.workers; i++) {\n        workers[i] = new Worker(\"static/service-worker.js\");\n\n        workers[i].onmessage = e => {\n          graphs[i].chartOptions.xAxis.categories = [...e.data.time];\n          graphs[i].chartOptions.series = [{\n            type: \"line\",\n            name: this.state.graphs[i].chartOptions.series[0].name,\n            data: e.data.prices,\n            connectNulls: true\n          }];\n          this.setState({\n            graphs: graphs,\n            loading: false\n          });\n        };\n\n        workers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\n      }\n    });\n\n    _defineProperty(this, \"refreshSingle\", index => {\n      const worker = new Worker(\"static/service-worker.js\");\n      const graphs = [...this.state.graphs];\n      const loadArr = [...this.state.loadArr];\n      loadArr[index] = true;\n      this.setState({\n        loadArr\n      });\n\n      worker.onmessage = e => {\n        const cryptocurrency = this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\n        const currency = this.findName(\"currencies\", graphs[index].currency);\n        graphs[index].chartOptions.title = {\n          text: `${cryptocurrency} to ${currency} exchange rate over time`\n        };\n        graphs[index].chartOptions.xAxis.categories = [...e.data.time];\n        graphs[index].image = e.data.image;\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: `${graphs[index].cryptocurrency} to ${graphs[index].currency}`,\n          data: e.data.prices,\n          connectNulls: true\n        }];\n        loadArr[index] = false;\n        this.setState({\n          graphs: graphs,\n          loadArr\n        });\n      };\n\n      worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"removeGraph\", index => {\n      let graphs = [...this.state.graphs];\n      clearInterval(graphs[index].interval);\n      graphs = graphs.filter((item, i) => i !== index);\n      this.setState({\n        graphs\n      });\n    });\n\n    _defineProperty(this, \"liveData\", index => {\n      const worker = new Worker(\"static/service-worker.js\");\n      const graphs = [...this.state.graphs];\n      const loadArr = [...this.state.loadArr];\n      loadArr[index] = true;\n      this.setState({\n        loadArr\n      });\n\n      worker.onmessage = e => {\n        graphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\n        graphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: this.state.graphs[index].chartOptions.series[0].name,\n          data: graphs[index].chartOptions.series[0].data,\n          connectNulls: true\n        }];\n        loadArr[index] = false;\n        this.setState({\n          graphs,\n          loadArr\n        });\n      };\n\n      worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"changeGraphLive\", (e, index) => {\n      const graphs = [...this.state.graphs];\n\n      if (e.target.checked) {\n        graphs[index].interval = setInterval(() => this.liveData(index), 4000);\n        this.setState({\n          graphs\n        });\n      } else {\n        clearInterval(graphs[index].interval);\n      }\n    });\n\n    _defineProperty(this, \"saveGraph\", async index => {\n      const bkGraph = _objectSpread({}, this.state.graphs[index]);\n\n      const cryptocurrency = this.findName(\"cryptocurrencies\", bkGraph.cryptocurrency);\n      const currency = this.findName(\"currencies\", bkGraph.currency);\n      const graph = {\n        categories: bkGraph.chartOptions.xAxis.categories,\n        series: bkGraph.chartOptions.series[0],\n        graphId: bkGraph.id,\n        cryptocurrency: {\n          value: bkGraph.cryptocurrency,\n          name: cryptocurrency\n        },\n        currency: {\n          value: bkGraph.currency,\n          name: currency\n        },\n        date: new Date(),\n        image: bkGraph.image\n      };\n      await crypto.saveGraph(graph, this.state.user._id).catch(err => console.log(\"ERROR!\", err));\n    });\n\n    _defineProperty(this, \"getFilteredCryptocurrencies\", () => {\n      const {\n        cryptocurrencies: allData,\n        searchQueryCryptocurrencies\n      } = this.state;\n      let filtered = allData;\n      if (searchQueryCryptocurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase()));\n      return {\n        filtered\n      };\n    });\n\n    _defineProperty(this, \"getFilteredCurrencies\", () => {\n      const {\n        currencies: allData,\n        searchQueryCurrencies\n      } = this.state;\n      let filtered = allData;\n      if (searchQueryCurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase()));\n      return {\n        filtered\n      };\n    });\n\n    _defineProperty(this, \"handleSearch\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    const jwt = auth.getJwt();\n    this.setState({\n      user,\n      jwt\n    });\n    await crypto.getCryptocurrencies().then(res => {\n      this.setState({\n        cryptocurrencies: res.data.cryptocurrencies,\n        currencies: res.data.currencies,\n        loaded: true\n      });\n    });\n  }\n\n  render() {\n    if (process.browser && !auth.getCurrentUser()) {\n      window.location.replace(\"/login\");\n    } else {\n      const {\n        filtered: cryptocurrencies\n      } = this.getFilteredCryptocurrencies();\n      const {\n        filtered: currencies\n      } = this.getFilteredCurrencies();\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: cryptoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        style: {\n          fontFamily: \"Courier New\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Custom Data Graphs\")), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })), this.state.loaded ? __jsx(\"div\", {\n        className: \"text-center pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row w-75 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.handleSearch,\n        placeholder: \"Search Cryptocurrency...\",\n        value: this.state.searchQueryCryptocurrencies,\n        name: \"searchQueryCryptocurrencies\",\n        className: \"form-control w-75 shadow\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-search\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Cryptocurrency\",\n        onChange: e => this.changeCryptocurrency(e, \"cryptocurrencies\"),\n        disabled: !this.state.loaded,\n        className: \"form-control shadow\",\n        style: {\n          display: \"inline-block\",\n          width: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Select Cryptocurrency\"), cryptocurrencies.map(item => __jsx(\"option\", {\n        value: item.id,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, item.name, \" - \", item.symbol))), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-hand-pointer\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.handleSearch,\n        placeholder: \"Search Currency...\",\n        value: this.state.searchQueryCurrencies,\n        name: \"searchQueryCurrencies\",\n        className: \"form-control w-75 shadow\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-search\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Currency\",\n        onChange: e => this.changeCryptocurrency(e, \"currencies\"),\n        disabled: !this.state.loaded,\n        className: \"form-control shadow\",\n        style: {\n          display: \"inline-block\",\n          width: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Select Currency\"), currencies.map(item => __jsx(\"option\", {\n        value: item.id,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, item.name, \" - \", item.symbol))), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"   \", __jsx(\"i\", {\n        className: \"fas fa-hand-pointer\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Add graph for selected values\")), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addGraph,\n        disabled: _Object$keys(this.state.selectedCryptocurrency).length === 0 || _Object$keys(this.state.selectedCurrency).length === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Refresh all graphs\")), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.refreshAll,\n        disabled: this.state.graphs.length === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-sync\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      })))), this.state.graphs.length > 0 ? this.state.graphs.map((item, index) => __jsx(\"div\", {\n        key: item.id,\n        className: \"pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        src: item.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-9 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, !this.state.loading && !this.state.loadArr[index] ? __jsx(HighchartsReact, {\n        key: item.id,\n        highcharts: Highcharts,\n        options: item.chartOptions,\n        allowChartUpdate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }) : __jsx(\"div\", {\n        className: \"mx-auto text-center\",\n        style: {\n          paddingTop: \"20%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Cryptocurrency\",\n        onChange: e => this.changeGraphCryptocurrency(e, index),\n        defaultValue: item.cryptocurrency,\n        className: \"form-control shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, this.state.cryptocurrencies.map(i => __jsx(\"option\", {\n        value: i.id,\n        key: i.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, i.name, \" - \", i.symbol)))), __jsx(\"div\", {\n        className: \"pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Currency\",\n        onChange: e => this.changeGraphCryptocurrency(e, index),\n        defaultValue: item.currency,\n        className: \"form-control shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, this.state.currencies.map(i => __jsx(\"option\", {\n        value: i.id,\n        key: i.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, i.name, \" - \", i.symbol)))), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-12 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Live data\")), __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: e => this.changeGraphLive(e, index),\n        defaultValue: item.live,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Search\")), __jsx(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: () => this.refreshSingle(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Refresh\")), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => this.refreshSingle(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-redo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Delete\")), __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => this.removeGraph(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-minus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-md-6 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Save\")), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => this.saveGraph(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }))))))))) : \"\") : __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center\",\n        style: {\n          paddingTop: \"30vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","CustomData","user","jwt","data","graphs","cryptocurrencies","currencies","selectedCryptocurrency","selectedCurrency","workers","loaded","searchQueryCryptocurrencies","searchQueryCurrencies","interval","loadArr","worker","Worker","bkOptions","state","onmessage","e","name","series","prices","connectNulls","categories","time","push","id","cryptocurrency","value","currency","live","image","setState","postMessage","array","i","length","findName","target","index","toLowerCase","Array","clearInterval","filter","item","currentTime","currentPrice","checked","setInterval","liveData","bkGraph","graph","graphId","date","Date","saveGraph","_id","catch","err","console","log","allData","filtered","m","startsWith","componentDidMount","getCurrentUser","getJwt","getCryptocurrencies","then","res","render","process","browser","window","location","replace","getFilteredCryptocurrencies","getFilteredCurrencies","fontFamily","handleSearch","display","changeCryptocurrency","width","map","symbol","addGraph","refreshAll","paddingTop","changeGraphCryptocurrency","changeGraphLive","refreshSingle","removeGraph"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\n\r\nconst chartOptions = {\r\n\tchart: { zoomType: 'x' },\r\n\txAxis: {\r\n\t\ttype: 'datetime',\r\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\r\n\t\ttitle: { text: 'Date' }\r\n\t},\r\n\tyAxis: {\r\n\t\ttitle: { text: 'Exchange rate' }\r\n\t},\r\n\tlegend: { enabled: false },\r\n\tplotOptions: {\r\n\t\tarea: {\r\n\t\t\tfillColor: {\r\n\t\t\t\tlinearGradient: {\r\n\t\t\t\t\tx1: 0,\r\n\t\t\t\t\ty1: 0,\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\ty2: 1\r\n\t\t\t\t},\r\n\t\t\t\tstops: [\r\n\t\t\t\t\t[0, \"#7cb5ec\"],\r\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\r\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tmarker: { radius: 2 },\r\n\t\t\tlineWidth: 1,\r\n\t\t\tstates: { hover: { lineWidth: 1 } },\r\n\t\t\tthreshold: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class CustomData extends Component {\r\n\tstate = {\r\n\t\tuser: {},\r\n\t\tjwt: \"\",\r\n\t\tdata: [],\r\n\t\tgraphs: [],\r\n\t\tcryptocurrencies: [],\r\n\t\tcurrencies: [],\r\n\t\tselectedCryptocurrency: {},\r\n\t\tselectedCurrency: {},\r\n\t\tworkers: 0,\r\n\t\tloading: false,\r\n\t\tloaded: false,\r\n\t\tsearchQueryCryptocurrencies: \"\",\r\n\t\tsearchQueryCurrencies: \"\",\r\n\t\tinterval: [],\r\n\t\tloadArr: [],\r\n\t\tchartOptions: {}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst user = auth.getCurrentUser();\r\n\t\tconst jwt = auth.getJwt();\r\n\t\tthis.setState({ user, jwt });\r\n\t\tawait crypto.getCryptocurrencies().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcryptocurrencies: res.data.cryptocurrencies,\r\n\t\t\t\tcurrencies: res.data.currencies,\r\n\t\t\t\tloaded: true\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\taddGraph = () => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst bkOptions = { ...chartOptions };\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tworker.onmessage = e => {\r\n\t\t\tbkOptions.title = { text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time` };\r\n\t\t\tbkOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\r\n\t\t\t\tdata: e.data.prices,\r\n                connectNulls: true\r\n\t\t\t}];\r\n\t\t\tbkOptions.xAxis.categories = [...e.data.time];\r\n\t\t\tgraphs.push({\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\tchartOptions: bkOptions,\r\n\t\t\t\tcryptocurrency: this.state.selectedCryptocurrency.value,\r\n\t\t\t\tcurrency: this.state.selectedCurrency.value,\r\n\t\t\t\tlive: false,\r\n\t\t\t\timage: e.data.image\r\n\t\t\t});\r\n\t\t\tloadArr.push(false);\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs: graphs,\r\n\t\t\t\tworkers: this.state.workers + 1,\r\n\t\t\t\tinterval: \"\",\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\r\n\r\n\t}\r\n\r\n\tfindName = (array, value) => {\r\n\t\tfor (let i = 0; i < this.state[array].length; i++) {\r\n\t\t\tif (this.state[array][i].id === value) {\r\n\t\t\t\treturn this.state[array][i].name;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tchangeCryptocurrency = (e, array) => {\r\n\t\tconst name = this.findName(array, e.target.value);\r\n\t\tthis.setState({\r\n\t\t\t[`selected${e.target.name}`]: {\r\n\t\t\t\tvalue: e.target.value,\r\n\t\t\t\tname: name\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeGraphCryptocurrency = (e, index) => {\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tgraphs[index][e.target.name.toLowerCase()] = e.target.value;\r\n\t\tthis.setState({ graphs: graphs })\r\n\t}\r\n\r\n\trefreshAll = () => {\r\n\t\tlet workers = new Array(this.state.workers);\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tthis.setState({ loading: true });\r\n\t\tfor (let i = 0; i < this.state.workers; i++) {\r\n\t\t\tworkers[i] = new Worker(\"static/service-worker.js\");\r\n\t\t\tworkers[i].onmessage = e => {\r\n\t\t\t\tgraphs[i].chartOptions.xAxis.categories = [...e.data.time];\r\n\t\t\t\tgraphs[i].chartOptions.series = [{\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tname: this.state.graphs[i].chartOptions.series[0].name,\r\n\t\t\t\t\tdata: e.data.prices,\r\n\t\t\t\t\tconnectNulls: true\r\n\t\t\t\t}]\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tgraphs: graphs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tworkers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSingle = (index) => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tloadArr[index] = true;\r\n\t\tthis.setState({loadArr});\r\n\t\tworker.onmessage = e => {\r\n\t\t\tconst cryptocurrency= this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\r\n\t\t\tconst currency= this.findName(\"currencies\", graphs[index].currency);\r\n\t\t\tgraphs[index].chartOptions.title = { text: `${cryptocurrency} to ${currency} exchange rate over time` };\r\n\t\t\tgraphs[index].chartOptions.xAxis.categories = [...e.data.time];\r\n\t\t\tgraphs[index].image = e.data.image;\r\n\t\t\tgraphs[index].chartOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: `${graphs[index].cryptocurrency} to ${graphs[index].currency}`,\r\n\t\t\t\tdata: e.data.prices,\r\n                connectNulls: true\r\n\t\t\t}];\r\n\t\t\tloadArr[index] = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs: graphs,\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n\t}\r\n\r\n\tremoveGraph = (index) => {\r\n\t\tlet graphs = [...this.state.graphs];\r\n\t\tclearInterval(graphs[index].interval);\r\n\t\tgraphs = graphs.filter((item, i) => i !== index);\r\n\t\tthis.setState({ graphs });\r\n\t}\r\n\r\n\tliveData = (index) => {\r\n\t\tconst worker = new Worker(\"static/service-worker.js\");\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n\t\tloadArr[index] = true;\r\n\t\tthis.setState({loadArr});\r\n\t\tworker.onmessage = e => {\r\n\t\t\tgraphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\r\n\t\t\tgraphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\r\n\t\t\tgraphs[index].chartOptions.series = [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: this.state.graphs[index].chartOptions.series[0].name,\r\n\t\t\t\tdata: graphs[index].chartOptions.series[0].data,\r\n                connectNulls: true\r\n\t\t\t}];\r\n\t\t\tloadArr[index] = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs,\r\n\t\t\t\tloadArr\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\r\n\t}\r\n\r\n\tchangeGraphLive = (e, index) => {\r\n\t\tconst graphs = [...this.state.graphs];\r\n\t\tif (e.target.checked) {\r\n\t\t\tgraphs[index].interval = setInterval(() => this.liveData(index), 4000);\r\n\t\t\tthis.setState({ graphs });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclearInterval(graphs[index].interval);\r\n\t\t}\r\n\t}\r\n\r\n\tsaveGraph = async (index) => {\r\n\t\tconst bkGraph = { ...this.state.graphs[index] };\r\n\t\tconst cryptocurrency= this.findName(\"cryptocurrencies\", bkGraph.cryptocurrency);\r\n\t\tconst currency= this.findName(\"currencies\", bkGraph.currency);\r\n\t\tconst graph = {\r\n\t\t\tcategories: bkGraph.chartOptions.xAxis.categories,\r\n\t\t\tseries: bkGraph.chartOptions.series[0],\r\n\t\t\tgraphId: bkGraph.id,\r\n\t\t\tcryptocurrency: {\r\n\t\t\t\tvalue: bkGraph.cryptocurrency,\r\n\t\t\t\tname: cryptocurrency\r\n\t\t\t},\r\n\t\t\tcurrency: {\r\n\t\t\t\tvalue: bkGraph.currency,\r\n\t\t\t\tname: currency\r\n\t\t\t},\r\n\t\t\tdate: new Date,\r\n\t\t\timage: bkGraph.image\r\n\t\t}\r\n\t\tawait crypto.saveGraph(graph, this.state.user._id).catch(err => console.log(\"ERROR!\", err));\r\n\t}\r\n\r\n\tgetFilteredCryptocurrencies = () => {\r\n\t\tconst { cryptocurrencies: allData, searchQueryCryptocurrencies } = this.state;\r\n\t\tlet filtered = allData;\r\n\t\tif (searchQueryCryptocurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase()));\r\n\t\treturn { filtered };\r\n\t};\r\n\r\n\tgetFilteredCurrencies = () => {\r\n\t\tconst { currencies: allData, searchQueryCurrencies } = this.state;\r\n\t\tlet filtered = allData;\r\n\t\tif (searchQueryCurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase()));\r\n\t\treturn { filtered };\r\n\t};\r\n\r\n\thandleSearch = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(process.browser && !auth.getCurrentUser()) {\r\n            window.location.replace(\"/login\");\r\n\t\t}\r\n\t\telse {\r\n\t\tconst { filtered: cryptocurrencies } = this.getFilteredCryptocurrencies();\r\n\t\tconst { filtered: currencies } = this.getFilteredCurrencies();\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<div className=\"w-50 mx-auto text-center pt-5\">\r\n\t\t\t\t\t<img src={cryptoImg} />\r\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Custom Data Graphs</strong></h1>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.state.loaded ?\r\n\t\t\t\t\t<div className=\"text-center pt-2\">\r\n\t\t\t\t\t\t<div className=\"row w-75 mx-auto\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Cryptocurrency...\" value={this.state.searchQueryCryptocurrencies} name=\"searchQueryCryptocurrencies\" className=\"form-control w-75 shadow\" style={{display: \"inline-block\"}}/>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeCryptocurrency(e, \"cryptocurrencies\")} disabled={!this.state.loaded} className=\"form-control shadow\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Cryptocurrency</option>{cryptocurrencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Currency...\" value={this.state.searchQueryCurrencies} name=\"searchQueryCurrencies\" className=\"form-control w-75 shadow\" style={{display: \"inline-block\"}}/>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\r\n\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeCryptocurrency(e, \"currencies\")} disabled={!this.state.loaded} className=\"form-control shadow\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Currency</option>{currencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t<p><strong>Add graph for selected values</strong></p>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.addGraph} disabled={Object.keys(this.state.selectedCryptocurrency).length === 0 || Object.keys(this.state.selectedCurrency).length === 0}><i className=\"fas fa-plus\"/></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t<p><strong>Refresh all graphs</strong></p>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.refreshAll} disabled={this.state.graphs.length === 0}><i className=\"fas fa-sync\"/></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{this.state.graphs.length > 0 ?\r\n\t\t\t\t\t\t\tthis.state.graphs.map((item, index) => \r\n\t\t\t\t\t\t\t\t<div key={item.id} className=\"pt-3\">\r\n\t\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t\t<img src={item.image} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"row mt-4\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-9 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{!this.state.loading && !this.state.loadArr[index] ? <HighchartsReact key={item.id} highcharts={Highcharts} options={item.chartOptions} allowChartUpdate = {true} /> : <div className=\"mx-auto text-center\" style={{paddingTop: \"20%\"}}><img src={loading} /></div>}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.cryptocurrency} className=\"form-control shadow\">{this.state.cryptocurrencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.currency} className=\"form-control shadow\">{this.state.currencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Live data</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e, index)} defaultValue={item.live} className=\"form-control\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Search</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-search\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Refresh</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-redo\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Delete</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}><i className=\"fas fa-minus\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Save</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => this.saveGraph(index)}><i className=\"fas fa-save\"/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : \"\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}