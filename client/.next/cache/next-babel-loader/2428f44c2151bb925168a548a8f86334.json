{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\n\nvar CustomData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomData, _Component);\n\n  function CustomData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      data: {\n        data: [],\n        timestamp: \"\"\n      },\n      graphs: [],\n      options: {\n        chart: {\n          zoomType: 'x'\n        },\n        title: {\n          text: 'USD to EUR exchange rate over time'\n        },\n        subtitle: {\n          text: document.ontouchstart === undefined ? 'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'\n        },\n        xAxis: {\n          type: 'datetime'\n        },\n        yAxis: {\n          title: {\n            text: 'Exchange rate'\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        plotOptions: {\n          area: {\n            fillColor: {\n              linearGradient: {\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 1\n              },\n              stops: [[0, Highcharts.getOptions().colors[0]], [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]]\n            },\n            marker: {\n              radius: 2\n            },\n            lineWidth: 1,\n            states: {\n              hover: {\n                lineWidth: 1\n              }\n            },\n            threshold: null\n          }\n        },\n        series: [{\n          type: 'area',\n          name: 'USD to EUR',\n          data: data\n        }]\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addGraph\", function () {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      graphs.push({\n        id: 1,\n        data: {\n          name: \"Bitcoin\"\n        }\n      });\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CustomData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = auth.getCurrentUser();\n                this.setState({\n                  user: user\n                });\n                _context.next = 4;\n                return crypto.getCurrencies().then(function (res) {\n                  return _this2.setState({\n                    data: res.data\n                  });\n                });\n\n              case 4:\n                console.log(this.state.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var select = __jsx(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.data.data.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      }));\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Hello \", this.state.user.name), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"+\"), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.graphs.length > 0 ? this.state.graphs.map(function (item) {\n        return __jsx(\"div\", {\n          className: \"col-md-6\",\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, select, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, item.data.name), __jsx(HighchartsReact, {\n          highcharts: Highcharts,\n          options: _this3.state.options,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }));\n      }) : \"\"));\n    }\n  }]);\n\n  return CustomData;\n}(Component);\n\nexport { CustomData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","CustomData","user","data","timestamp","graphs","options","chart","zoomType","title","text","subtitle","document","ontouchstart","undefined","xAxis","type","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","getOptions","colors","Color","setOpacity","get","marker","radius","lineWidth","states","hover","threshold","series","name","state","push","id","setState","getCurrentUser","getCurrencies","then","res","console","log","select","map","item","symbol","addGraph","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: {\r\n        data: [],\r\n        timestamp: \"\"\r\n    },\r\n    graphs: [],\r\n    options: {\r\n      chart: {\r\n        zoomType: 'x'\r\n    },\r\n    title: {\r\n        text: 'USD to EUR exchange rate over time'\r\n    },\r\n    subtitle: {\r\n        text: document.ontouchstart === undefined ?\r\n            'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'\r\n    },\r\n    xAxis: {\r\n        type: 'datetime'\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: 'Exchange rate'\r\n        }\r\n    },\r\n    legend: {\r\n        enabled: false\r\n    },\r\n    plotOptions: {\r\n        area: {\r\n            fillColor: {\r\n                linearGradient: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 0,\r\n                    y2: 1\r\n                },\r\n                stops: [\r\n                    [0, Highcharts.getOptions().colors[0]],\r\n                    [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\r\n                ]\r\n            },\r\n            marker: {\r\n                radius: 2\r\n            },\r\n            lineWidth: 1,\r\n            states: {\r\n                hover: {\r\n                    lineWidth: 1\r\n                }\r\n            },\r\n            threshold: null\r\n        }\r\n    },\r\n\r\n    series: [{\r\n        type: 'area',\r\n        name: 'USD to EUR',\r\n        data: data\r\n    }]\r\n  }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\tconst user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    await crypto.getCurrencies().then(res => this.setState({data: res.data}));\r\n    console.log(this.state.data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options}/>\r\n                    </div> \r\n            ): \"\"}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}