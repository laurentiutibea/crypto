{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\saveddata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport ReactHighcharts from 'react-highcharts';\nimport update from \"immutability-helper\";\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nvar chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\n\nvar SavedData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SavedData, _Component);\n\n  function SavedData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SavedData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SavedData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      jwt: \"\",\n      data: {\n        graphs: []\n      },\n      loaded: false,\n      graphs: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshData\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var graphs, _ref2, data, i, bkOptions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              graphs = [];\n              if (_this.state.graphs.length === 0) graphs = [];else _this.setState({\n                graphs: []\n              });\n              _context.next = 4;\n              return crypto.getSavedData(_this.state.user._id);\n\n            case 4:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              console.log(data);\n\n              for (i = 0; i < data.graphs.length; i++) {\n                bkOptions = _objectSpread({}, chartOptions);\n                bkOptions.title = {\n                  text: \"\".concat(data.graphs[i].cryptocurrency.name, \" to \").concat(data.graphs[i].currency.name, \" exchange rate over time\")\n                };\n                bkOptions.series = [{\n                  type: \"line\",\n                  name: \"\".concat(data.graphs[i].cryptocurrency.name, \" to \").concat(data.graphs[i].currency.name),\n                  data: data.graphs[i].series.data\n                }];\n                bkOptions.xAxis.categories = data.graphs[i].categories;\n                graphs.push({\n                  chartOptions: bkOptions,\n                  cryptocurrency: {\n                    name: data.graphs[i].cryptocurrency.name,\n                    value: data.graphs[i].cryptocurrency.value\n                  },\n                  currency: {\n                    name: data.graphs[i].currency.name,\n                    value: data.graphs[i].currency.value\n                  },\n                  live: false,\n                  image: data.graphs[i].image,\n                  graphId: data.graphs[i].graphId,\n                  date: data.graphs[i].date\n                });\n              }\n\n              _this.setState({\n                data: data,\n                loaded: true,\n                graphs: graphs\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshSingle\", function (index) {\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      graphs[index].chartOptions.title = {\n        text: \"\".concat(graphs[index].cryptocurrency.name, \" to \").concat(graphs[index].currency, \" exchange rate over time\")\n      };\n      graphs[index].chartOptions.series = [{\n        type: \"line\",\n        name: \"\".concat(graphs[index].cryptocurrency.name, \" to \").concat(graphs[index].currency.name),\n        data: graphs[index].chartOptions.series[0].data\n      }];\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"compare\", function (e, index) {\n      if (e.target.checked) {\n        var worker = new Worker(\"static/service-worker.js\");\n\n        var graphs = _toConsumableArray(_this.state.graphs);\n\n        console.log(graphs[index]);\n\n        worker.onmessage = function (e) {\n          graphs[index].chartOptions.series = [{\n            type: \"line\",\n            name: _this.state.graphs[index].chartOptions.series[0].name,\n            data: graphs[index].chartOptions.series[0].data\n          }, {\n            type: \"line\",\n            name: _this.state.graphs[index].chartOptions.series[0].name,\n            data: e.data.prices\n          }];\n\n          _this.setState({\n            graphs: graphs\n          });\n        };\n\n        worker.postMessage(\"\".concat(graphs[index].cryptocurrency.value, \",\").concat(graphs[index].currency.value, \",\").concat(_this.state.jwt));\n      } else _this.refreshSingle(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editGraph\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(index, action) {\n        var graphs, bkGraphs, graph;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                graphs = _toConsumableArray(_this.state.graphs);\n                if (action === \"remove\") graphs = graphs.filter(function (item, i) {\n                  return i !== index;\n                });\n                bkGraphs = [];\n                graphs.forEach(function (element) {\n                  bkGraphs.push({\n                    categories: element.chartOptions.xAxis.categories,\n                    series: action === \"save\" ? element.chartOptions.series : element.chartOptions.series[0],\n                    graphId: element.graphId,\n                    cryptocurrency: {\n                      value: element.cryptocurrency.value,\n                      name: element.cryptocurrency.name\n                    },\n                    currency: {\n                      value: element.currency.value,\n                      name: element.currency.name\n                    },\n                    date: new Date(),\n                    image: element.image\n                  });\n                });\n                graph = {\n                  userId: _this.state.user._id,\n                  graphs: bkGraphs\n                };\n                _context2.next = 7;\n                return crypto.replaceGraphs(graph);\n\n              case 7:\n                _this.setState({\n                  graphs: graphs\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(SavedData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var user, jwt;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return auth.getCurrentUser();\n\n              case 2:\n                user = _context3.sent;\n                jwt = auth.getJwt();\n                this.setState({\n                  user: user,\n                  jwt: jwt\n                });\n                this.refreshData();\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: cryptoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        style: {\n          fontFamily: \"Courier New\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Saved Data\")), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), this.state.loaded && __jsx(\"div\", {\n        className: \"col-md-12 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Refresh\")), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.refreshData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-sync\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })))), this.state.loaded ? __jsx(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.state.graphs.length > 0 ? this.state.graphs.map(function (item, index) {\n        return __jsx(\"div\", {\n          key: item.graphId,\n          className: \"pt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          src: item.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-9 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, !_this2.state.loading ? __jsx(ReactHighcharts, {\n          key: item.id,\n          highcharts: Highcharts,\n          config: item.chartOptions,\n          ref: \"chart\",\n          oneToOne: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }) : __jsx(\"img\", {\n          src: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"text\",\n          value: item.cryptocurrency.name,\n          className: \"form-control text-center\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"text\",\n          value: item.currency.name,\n          className: \"form-control text-center\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-12 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"Compare with current data\")), __jsx(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this2.compare(e, index);\n          },\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"Replace\")), __jsx(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this2.editGraph(index, \"replace\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-exchange-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \"Save\")), __jsx(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return _this2.editGraph(index, \"save\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-12 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Delete\")), __jsx(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this2.editGraph(index, \"remove\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-minus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }))))))));\n      }) : \"\") : __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center\",\n        style: {\n          paddingTop: \"30vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SavedData;\n}(Component);\n\nexport { SavedData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/saveddata.js"],"names":["React","Component","Layout","Highcharts","ReactHighcharts","update","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","SavedData","user","jwt","data","graphs","loaded","state","length","setState","getSavedData","_id","console","log","i","bkOptions","cryptocurrency","name","currency","series","categories","push","value","live","image","graphId","date","index","e","target","checked","worker","Worker","onmessage","prices","postMessage","refreshSingle","action","filter","item","bkGraphs","forEach","element","Date","graph","userId","replaceGraphs","getCurrentUser","getJwt","refreshData","fontFamily","map","id","compare","editGraph","paddingTop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GADa;AAEpBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE,UADA;AAENC,IAAAA,oBAAoB,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFhB;AAGNC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAHD,GAFa;AAOpBC,EAAAA,KAAK,EAAE;AACNF,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AADD,GAPa;AAUpBE,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAVY;AAWpBC,EAAAA,WAAW,EAAE;AACZC,IAAAA,IAAI,EAAE;AACLC,MAAAA,SAAS,EAAE;AACVC,QAAAA,cAAc,EAAE;AACfC,UAAAA,EAAE,EAAE,CADW;AAEfC,UAAAA,EAAE,EAAE,CAFW;AAGfC,UAAAA,EAAE,EAAE,CAHW;AAIfC,UAAAA,EAAE,EAAE;AAJW,SADN;AAOVC,QAAAA,KAAK,EAAE,CACN,CAAC,CAAD,EAAI,SAAJ,CADM,EAEN,CAAC,GAAD,EAAM,WAAN,CAFM,EAGN,CAAC,GAAD,EAAM,WAAN,CAHM;AAPG,OADN;AAcLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAdH;AAeLC,MAAAA,SAAS,EAAE,CAfN;AAgBLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,SAAS,EAAE;AAAb;AAAT,OAhBH;AAiBLG,MAAAA,SAAS,EAAE;AAjBN;AADM;AAXO,CAArB;;IAkCqBC,S;;;;;;;;;;;;;;;;;;4DACT;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,GAAG,EAAE,EAFD;AAGJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAE;AADN,OAHF;AAMJC,MAAAA,MAAM,EAAE,KANJ;AAOJD,MAAAA,MAAM,EAAE;AAPJ,K;;;;;;6BAiBM;AAAA;;AAAA;AAAA;AAAA;AAAA;AACNA,cAAAA,MADM,GACG,EADH;AAEV,kBAAG,MAAKE,KAAL,CAAWF,MAAX,CAAkBG,MAAlB,KAA6B,CAAhC,EAAmCH,MAAM,GAAG,EAAT,CAAnC,KACK,MAAKI,QAAL,CAAc;AAACJ,gBAAAA,MAAM,EAAC;AAAR,eAAd;AAHK;AAAA,qBAIWlC,MAAM,CAACuC,YAAP,CAAoB,MAAKH,KAAL,CAAWL,IAAX,CAAgBS,GAApC,CAJX;;AAAA;AAAA;AAIHP,cAAAA,IAJG,SAIHA,IAJG;AAKVQ,cAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;;AACA,mBAAQU,CAAR,GAAU,CAAV,EAAaA,CAAC,GAACV,IAAI,CAACC,MAAL,CAAYG,MAA3B,EAAmCM,CAAC,EAApC,EAAuC;AAC/BC,gBAAAA,SAD+B,qBACdzC,YADc;AAEnCyC,gBAAAA,SAAS,CAAClC,KAAV,GAAkB;AAAEC,kBAAAA,IAAI,YAAKsB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BC,IAAnC,iBAA8Cb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBD,IAAtE;AAAN,iBAAlB;AACAF,gBAAAA,SAAS,CAACI,MAAV,GAAmB,CAAC;AAChBzC,kBAAAA,IAAI,EAAE,MADU;AAEhBuC,kBAAAA,IAAI,YAAKb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BC,IAAnC,iBAA8Cb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBD,IAAtE,CAFY;AAGhBb,kBAAAA,IAAI,EAAEA,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeK,MAAf,CAAsBf;AAHZ,iBAAD,CAAnB;AAKTW,gBAAAA,SAAS,CAACtC,KAAV,CAAgB2C,UAAhB,GAA6BhB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeM,UAA5C;AACAf,gBAAAA,MAAM,CAACgB,IAAP,CAAY;AACX/C,kBAAAA,YAAY,EAAEyC,SADH;AAEXC,kBAAAA,cAAc,EAAE;AACAC,oBAAAA,IAAI,EAAEb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BC,IADpC;AAEAK,oBAAAA,KAAK,EAAElB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BM;AAFrC,mBAFL;AAMXJ,kBAAAA,QAAQ,EAAE;AACMD,oBAAAA,IAAI,EAAEb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBD,IADpC;AAEMK,oBAAAA,KAAK,EAAElB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBI;AAFrC,mBANC;AAUXC,kBAAAA,IAAI,EAAE,KAVK;AAWCC,kBAAAA,KAAK,EAAEpB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeU,KAXvB;AAYCC,kBAAAA,OAAO,EAAErB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeW,OAZzB;AAaCC,kBAAAA,IAAI,EAAEtB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeY;AAbtB,iBAAZ;AAeM;;AACD,oBAAKjB,QAAL,CAAc;AAACL,gBAAAA,IAAI,EAAJA,IAAD;AAAOE,gBAAAA,MAAM,EAAE,IAAf;AAAqBD,gBAAAA,MAAM,EAANA;AAArB,eAAd;;AA/BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oEAkCE,UAACsB,KAAD,EAAW;AACvB,UAAMtB,MAAM,sBAAO,MAAKE,KAAL,CAAWF,MAAlB,CAAZ;;AACAA,MAAAA,MAAM,CAACsB,KAAD,CAAN,CAAcrD,YAAd,CAA2BO,KAA3B,GAAmC;AAAEC,QAAAA,IAAI,YAAKuB,MAAM,CAACsB,KAAD,CAAN,CAAcX,cAAd,CAA6BC,IAAlC,iBAA6CZ,MAAM,CAACsB,KAAD,CAAN,CAAcT,QAA3D;AAAN,OAAnC;AACAb,MAAAA,MAAM,CAACsB,KAAD,CAAN,CAAcrD,YAAd,CAA2B6C,MAA3B,GAAoC,CAAC;AACjCzC,QAAAA,IAAI,EAAE,MAD2B;AAEjCuC,QAAAA,IAAI,YAAKZ,MAAM,CAACsB,KAAD,CAAN,CAAcX,cAAd,CAA6BC,IAAlC,iBAA6CZ,MAAM,CAACsB,KAAD,CAAN,CAAcT,QAAd,CAAuBD,IAApE,CAF6B;AAGjCb,QAAAA,IAAI,EAAEC,MAAM,CAACsB,KAAD,CAAN,CAAcrD,YAAd,CAA2B6C,MAA3B,CAAkC,CAAlC,EAAqCf;AAHV,OAAD,CAApC;;AAKA,YAAKK,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAEA;AADE,OAAd;AAGH,K;;8DAES,UAACuB,CAAD,EAAGD,KAAH,EAAa;AACnB,UAAGC,CAAC,CAACC,MAAF,CAASC,OAAZ,EAAoB;AAChB,YAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAW,0BAAX,CAAf;;AACA,YAAM3B,MAAM,sBAAO,MAAKE,KAAL,CAAWF,MAAlB,CAAZ;;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACsB,KAAD,CAAlB;;AACAI,QAAAA,MAAM,CAACE,SAAP,GAAmB,UAAAL,CAAC,EAAI;AACpBvB,UAAAA,MAAM,CAACsB,KAAD,CAAN,CAAcrD,YAAd,CAA2B6C,MAA3B,GAAoC,CACpC;AACIzC,YAAAA,IAAI,EAAE,MADV;AAEIuC,YAAAA,IAAI,EAAE,MAAKV,KAAL,CAAWF,MAAX,CAAkBsB,KAAlB,EAAyBrD,YAAzB,CAAsC6C,MAAtC,CAA6C,CAA7C,EAAgDF,IAF1D;AAGIb,YAAAA,IAAI,EAAEC,MAAM,CAACsB,KAAD,CAAN,CAAcrD,YAAd,CAA2B6C,MAA3B,CAAkC,CAAlC,EAAqCf;AAH/C,WADoC,EAMpC;AACI1B,YAAAA,IAAI,EAAE,MADV;AAEIuC,YAAAA,IAAI,EAAE,MAAKV,KAAL,CAAWF,MAAX,CAAkBsB,KAAlB,EAAyBrD,YAAzB,CAAsC6C,MAAtC,CAA6C,CAA7C,EAAgDF,IAF1D;AAGIb,YAAAA,IAAI,EAAEwB,CAAC,CAACxB,IAAF,CAAO8B;AAHjB,WANoC,CAApC;;AAWA,gBAAKzB,QAAL,CAAc;AACVJ,YAAAA,MAAM,EAANA;AADU,WAAd;AAGH,SAfD;;AAgBA0B,QAAAA,MAAM,CAACI,WAAP,WAAsB9B,MAAM,CAACsB,KAAD,CAAN,CAAcX,cAAd,CAA6BM,KAAnD,cAA4DjB,MAAM,CAACsB,KAAD,CAAN,CAAcT,QAAd,CAAuBI,KAAnF,cAA4F,MAAKf,KAAL,CAAWJ,GAAvG;AACH,OArBD,MAsBK,MAAKiC,aAAL,CAAmBT,KAAnB;AACR,K;;;;;;;+BAEW,kBAAOA,KAAP,EAAcU,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACVhC,gBAAAA,MADU,sBACG,MAAKE,KAAL,CAAWF,MADd;AAER,oBAAGgC,MAAM,KAAK,QAAd,EAAwBhC,MAAM,GAAGA,MAAM,CAACiC,MAAP,CAAc,UAACC,IAAD,EAAOzB,CAAP;AAAA,yBAAaA,CAAC,KAAKa,KAAnB;AAAA,iBAAd,CAAT;AACpBa,gBAAAA,QAHI,GAGO,EAHP;AAIRnC,gBAAAA,MAAM,CAACoC,OAAP,CAAe,UAAAC,OAAO,EAAI;AACtBF,kBAAAA,QAAQ,CAACnB,IAAT,CAAc;AACVD,oBAAAA,UAAU,EAAEsB,OAAO,CAACpE,YAAR,CAAqBG,KAArB,CAA2B2C,UAD7B;AAEVD,oBAAAA,MAAM,EAAEkB,MAAM,KAAK,MAAX,GAAoBK,OAAO,CAACpE,YAAR,CAAqB6C,MAAzC,GAAkDuB,OAAO,CAACpE,YAAR,CAAqB6C,MAArB,CAA4B,CAA5B,CAFhD;AAGVM,oBAAAA,OAAO,EAAEiB,OAAO,CAACjB,OAHP;AAIVT,oBAAAA,cAAc,EAAE;AACZM,sBAAAA,KAAK,EAAEoB,OAAO,CAAC1B,cAAR,CAAuBM,KADlB;AAEZL,sBAAAA,IAAI,EAAEyB,OAAO,CAAC1B,cAAR,CAAuBC;AAFjB,qBAJN;AAQVC,oBAAAA,QAAQ,EAAE;AACNI,sBAAAA,KAAK,EAAEoB,OAAO,CAACxB,QAAR,CAAiBI,KADlB;AAENL,sBAAAA,IAAI,EAAEyB,OAAO,CAACxB,QAAR,CAAiBD;AAFjB,qBARA;AAYVS,oBAAAA,IAAI,EAAE,IAAIiB,IAAJ,EAZI;AAaVnB,oBAAAA,KAAK,EAAEkB,OAAO,CAAClB;AAbL,mBAAd;AAeH,iBAhBD;AAiBMoB,gBAAAA,KArBE,GAqBM;AACVC,kBAAAA,MAAM,EAAE,MAAKtC,KAAL,CAAWL,IAAX,CAAgBS,GADd;AAEVN,kBAAAA,MAAM,EAAEmC;AAFE,iBArBN;AAAA;AAAA,uBAyBFrE,MAAM,CAAC2E,aAAP,CAAqBF,KAArB,CAzBE;;AAAA;AA0Bd,sBAAKnC,QAAL,CAAc;AAAEJ,kBAAAA,MAAM,EAANA;AAAF,iBAAd;;AA1Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;;;;;;;;;;uBA/EWnC,IAAI,CAAC6E,cAAL,E;;;AAAb7C,gBAAAA,I;AACAC,gBAAAA,G,GAAMjC,IAAI,CAAC8E,MAAL,E;AACZ,qBAAKvC,QAAL,CAAc;AAAEP,kBAAAA,IAAI,EAAJA,IAAF;AAAQC,kBAAAA,GAAG,EAAHA;AAAR,iBAAd;AACA,qBAAK8C,WAAL;;;;;;;;;;;;;;;;;;6BAyGK;AAAA;;AACL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX;AAAK,QAAA,GAAG,EAAE5E,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,EAEX;AAAI,QAAA,KAAK,EAAE;AAAC6E,UAAAA,UAAU,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxC,CAFW,EAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHW,EAIK,KAAK3C,KAAL,CAAWD,MAAX,IAAqB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,CADkB,EAElB;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAK2C,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+D;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/D,CAFkB,CAJ1B,CADJ,EAUK,KAAK1C,KAAL,CAAWD,MAAX,GACG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWF,MAAX,CAAkBG,MAAlB,GAA2B,CAA3B,GACG,KAAKD,KAAL,CAAWF,MAAX,CAAkB8C,GAAlB,CAAsB,UAACZ,IAAD,EAAOZ,KAAP;AAAA,eAClB;AAAK,UAAA,GAAG,EAAEY,IAAI,CAACd,OAAf;AAAwB,UAAA,SAAS,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,GAAG,EAAEc,IAAI,CAACf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,CAAC,MAAI,CAACjB,KAAL,CAAWnC,OAAZ,GAAsB,MAAC,eAAD;AAAiB,UAAA,GAAG,EAAEmE,IAAI,CAACa,EAA3B;AAA+B,UAAA,UAAU,EAAErF,UAA3C;AAAuD,UAAA,MAAM,EAAEwE,IAAI,CAACjE,YAApE;AAAkF,UAAA,GAAG,EAAC,OAAtF;AAA8F,UAAA,QAAQ,EAAE,IAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB,GAAyI;AAAK,UAAA,GAAG,EAAEF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD9I,CADJ,EAII;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACnC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEmE,IAAI,CAACvB,cAAL,CAAoBC,IAA9C;AAAoD,UAAA,SAAS,EAAC,0BAA9D;AAAyF,UAAA,QAAQ,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmC,CADJ,EAIhC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACoC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEsB,IAAI,CAACrB,QAAL,CAAcD,IAAxC;AAA8C,UAAA,SAAS,EAAC,0BAAxD;AAAmF,UAAA,QAAQ,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADpC,CAJgC,EAOI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAH,CADJ,EAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,mBAAO,MAAI,CAACyB,OAAL,CAAazB,CAAb,EAAgBD,KAAhB,CAAP;AAAA,WAAjC;AAAgE,UAAA,SAAS,EAAC,cAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,EAKI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,CADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC2B,SAAL,CAAe3B,KAAf,EAAqB,SAArB,CAAN;AAAA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoF;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApF,CAFJ,CALJ,EASI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,CADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC2B,SAAL,CAAe3B,KAAf,EAAqB,MAArB,CAAN;AAAA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiF;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjF,CAFJ,CATJ,EAaI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,CADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC2B,SAAL,CAAe3B,KAAf,EAAqB,QAArB,CAAN;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkF;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlF,CAFJ,CAbJ,CAPJ,CADJ,CAJJ,CAHJ,CADkB;AAAA,OAAtB,CADH,GAwCO,EAzCZ,CADH,GA4CX;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,KAAK,EAAE;AAAC4B,UAAAA,UAAU,EAAE;AAAb,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuE;AAAK,QAAA,GAAG,EAAEnF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvE,CAtDM,CADJ;AA0DH;;;;EAnLkCP,S;;SAAlBoC,S","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport ReactHighcharts from 'react-highcharts';\r\nimport update from \"immutability-helper\";\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\nconst chartOptions = {\r\n\tchart: { zoomType: 'x' },\r\n\txAxis: {\r\n\t\ttype: 'datetime',\r\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\r\n\t\ttitle: { text: 'Date' }\r\n\t},\r\n\tyAxis: {\r\n\t\ttitle: { text: 'Exchange rate' }\r\n\t},\r\n\tlegend: { enabled: false },\r\n\tplotOptions: {\r\n\t\tarea: {\r\n\t\t\tfillColor: {\r\n\t\t\t\tlinearGradient: {\r\n\t\t\t\t\tx1: 0,\r\n\t\t\t\t\ty1: 0,\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\ty2: 1\r\n\t\t\t\t},\r\n\t\t\t\tstops: [\r\n\t\t\t\t\t[0, \"#7cb5ec\"],\r\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\r\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tmarker: { radius: 2 },\r\n\t\t\tlineWidth: 1,\r\n\t\t\tstates: { hover: { lineWidth: 1 } },\r\n\t\t\tthreshold: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class SavedData extends Component {\r\n    state = {\r\n        user: {},\r\n        jwt: \"\",\r\n        data: {\r\n            graphs: []\r\n        },\r\n        loaded: false,\r\n        graphs: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const user = await auth.getCurrentUser();\r\n        const jwt = auth.getJwt();\r\n        this.setState({ user, jwt });\r\n        this.refreshData();\r\n    }\r\n\r\n    refreshData = async () => {\r\n        let graphs = [];\r\n        if(this.state.graphs.length === 0) graphs = [];\r\n        else this.setState({graphs:[]});\r\n        const {data} = await crypto.getSavedData(this.state.user._id);\r\n        console.log(data);\r\n        for(let i=0; i<data.graphs.length; i++){\r\n            let bkOptions = { ...chartOptions };\r\n            bkOptions.title = { text: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name} exchange rate over time` };\r\n            bkOptions.series = [{\r\n                type: \"line\",\r\n                name: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name}`,\r\n                data: data.graphs[i].series.data\r\n            }];\r\n\t\t\tbkOptions.xAxis.categories = data.graphs[i].categories;\r\n\t\t\tgraphs.push({\r\n\t\t\t\tchartOptions: bkOptions,\r\n\t\t\t\tcryptocurrency: {\r\n                    name: data.graphs[i].cryptocurrency.name,\r\n                    value: data.graphs[i].cryptocurrency.value\r\n                },\r\n\t\t\t\tcurrency: {\r\n                    name: data.graphs[i].currency.name,\r\n                    value: data.graphs[i].currency.value\r\n                },\r\n\t\t\t\tlive: false,\r\n                image: data.graphs[i].image,\r\n                graphId: data.graphs[i].graphId,\r\n                date: data.graphs[i].date\r\n\t\t\t});\r\n        }\r\n        this.setState({data, loaded: true, graphs})\r\n    }\r\n\r\n    refreshSingle = (index) => {\r\n        const graphs = [...this.state.graphs];\r\n        graphs[index].chartOptions.title = { text: `${graphs[index].cryptocurrency.name} to ${graphs[index].currency} exchange rate over time` };\r\n        graphs[index].chartOptions.series = [{\r\n            type: \"line\",\r\n            name: `${graphs[index].cryptocurrency.name} to ${graphs[index].currency.name}`,\r\n            data: graphs[index].chartOptions.series[0].data\r\n        }];\r\n        this.setState({\r\n            graphs: graphs\r\n        })\r\n    }\r\n\r\n    compare = (e,index) => {\r\n        if(e.target.checked){\r\n            const worker = new Worker(\"static/service-worker.js\");\r\n            const graphs = [...this.state.graphs];\r\n            console.log(graphs[index]);\r\n            worker.onmessage = e => {\r\n                graphs[index].chartOptions.series = [\r\n                {\r\n                    type: \"line\",\r\n                    name: this.state.graphs[index].chartOptions.series[0].name,\r\n                    data: graphs[index].chartOptions.series[0].data\r\n                },\r\n                {\r\n                    type: \"line\",\r\n                    name: this.state.graphs[index].chartOptions.series[0].name,\r\n                    data: e.data.prices\r\n                }]\r\n                this.setState({\r\n                    graphs\r\n                })\r\n            }\r\n            worker.postMessage(`${graphs[index].cryptocurrency.value},${graphs[index].currency.value},${this.state.jwt}`);\r\n        }\r\n        else this.refreshSingle(index);\r\n    }\r\n\r\n    editGraph = async (index, action) => {\r\n\t\tlet graphs = [...this.state.graphs];\r\n        if(action === \"remove\") graphs = graphs.filter((item, i) => i !== index);\r\n        let bkGraphs = [];\r\n        graphs.forEach(element => {\r\n            bkGraphs.push({\r\n                categories: element.chartOptions.xAxis.categories,\r\n                series: action === \"save\" ? element.chartOptions.series : element.chartOptions.series[0],\r\n                graphId: element.graphId,\r\n                cryptocurrency: {\r\n                    value: element.cryptocurrency.value,\r\n                    name: element.cryptocurrency.name\r\n                },\r\n                currency: {\r\n                    value: element.currency.value,\r\n                    name: element.currency.name\r\n                },\r\n                date: new Date,\r\n                image: element.image\r\n            })\r\n        });\r\n        const graph = {\r\n            userId: this.state.user._id,\r\n            graphs: bkGraphs\r\n        }\r\n        await crypto.replaceGraphs(graph);\r\n\t\tthis.setState({ graphs });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div className=\"w-50 mx-auto text-center pt-5\">\r\n\t\t\t\t\t<img src={cryptoImg} />\r\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Saved Data</strong></h1>\r\n\t\t\t\t\t<hr/>\r\n                    {this.state.loaded && <div className=\"col-md-12 mt-3\">\r\n                        <p><strong>Refresh</strong></p>\r\n                        <button className=\"btn btn-success\" onClick={this.refreshData}><i className=\"fas fa-sync\"/></button>\r\n                    </div>}\r\n                </div>\r\n                {this.state.loaded ?\r\n                    <div className=\"text-center\">\r\n                        {this.state.graphs.length > 0 ?\r\n                            this.state.graphs.map((item, index) =>\r\n                                <div key={item.graphId} className=\"pt-3\">\r\n                                    <hr/>\r\n                                    <img src={item.image} />\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col-md-9 text-center\">\r\n                                            {!this.state.loading ? <ReactHighcharts key={item.id} highcharts={Highcharts} config={item.chartOptions} ref=\"chart\" oneToOne={true} /> : <img src={loading} />}\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={item.cryptocurrency.name} className=\"form-control text-center\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n                                                <input type=\"text\" value={item.currency.name} className=\"form-control text-center\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12 mt-3\">\r\n                                                        <p><strong>Compare with current data</strong></p>\r\n                                                        <input type=\"checkbox\" onChange={(e) => this.compare(e, index)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 mt-3\">\r\n                                                        <p><strong>Replace</strong></p>\r\n                                                        <button className=\"btn btn-warning\" onClick={() => this.editGraph(index,\"replace\")}><i className=\"fas fa-exchange-alt\"/></button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 mt-3\">\r\n                                                        <p><strong>Save</strong></p>\r\n                                                        <button className=\"btn btn-primary\" onClick={() => this.editGraph(index,\"save\")}><i className=\"fas fa-save\"/></button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12 mt-3\">\r\n                                                        <p><strong>Delete</strong></p>\r\n                                                        <button className=\"btn btn-danger\" onClick={() => this.editGraph(index,\"remove\")}><i className=\"fas fa-minus\"/></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\"}\r\n                    </div>\r\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}