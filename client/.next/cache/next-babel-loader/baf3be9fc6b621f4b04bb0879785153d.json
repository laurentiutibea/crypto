{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\saveddata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport update from \"immutability-helper\";\nimport ReactHighcharts from 'react-highcharts';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nvar chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\n\nvar SavedData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SavedData, _Component);\n\n  function SavedData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SavedData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SavedData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      jwt: \"\",\n      data: {\n        graphs: []\n      },\n      loaded: false,\n      graphs: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshData\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2, data, bkOptions, graphs, i;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                graphs: []\n              });\n\n              _context.next = 3;\n              return crypto.getSavedData(_this.state.user._id);\n\n            case 3:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              console.log(data);\n              bkOptions = _objectSpread({}, chartOptions);\n              graphs = _toConsumableArray(_this.state.graphs);\n\n              for (i = 0; i < data.graphs.length; i++) {\n                bkOptions.title = {\n                  text: \"\".concat(data.graphs[i].cryptocurrency.name, \" to \").concat(data.graphs[i].currency.name, \" exchange rate over time\")\n                }, bkOptions.series = [{\n                  type: \"line\",\n                  name: \"\".concat(data.graphs[i].cryptocurrency.name, \" to \").concat(data.graphs[i].currency.name),\n                  data: data.graphs[i].series.data\n                }];\n                bkOptions.xAxis.categories = data.graphs[i].categories;\n                graphs.push(_defineProperty({\n                  id: _Date$now(),\n                  chartOptions: bkOptions,\n                  cryptocurrency: {\n                    name: data.graphs[i].cryptocurrency.name,\n                    value: data.graphs[i].cryptocurrency.value\n                  },\n                  currency: {\n                    name: data.graphs[i].currency.name,\n                    value: data.graphs[i].currency.value\n                  },\n                  live: false,\n                  image: data.graphs[i].image\n                }, \"id\", data.graphs[i].date));\n              }\n\n              _this.setState({\n                data: data,\n                loaded: true,\n                graphs: graphs\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"compare\", function (e, index) {\n      var worker = new Worker(\"static/service-worker.js\");\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      console.log(graphs[index]);\n\n      worker.onmessage = function (e) {\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: _this.state.graphs[index].chartOptions.series[0].name,\n          data: graphs[index].chartOptions.series[0].data\n        }, {\n          type: \"line\",\n          name: \"ABC\",\n          data: e.data.prices\n        }];\n\n        _this.setState({\n          graphs: update(_this.state.graphs, _defineProperty({}, index, {\n            $set: graphs[index]\n          }))\n        });\n      };\n\n      worker.postMessage(\"\".concat(graphs[index].cryptocurrency.value, \",\").concat(graphs[index].currency.value, \",\").concat(_this.state.jwt));\n    });\n\n    return _this;\n  }\n\n  _createClass(SavedData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var user, jwt;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return auth.getCurrentUser();\n\n              case 2:\n                user = _context2.sent;\n                jwt = auth.getJwt();\n                this.setState({\n                  user: user,\n                  jwt: jwt\n                });\n                this.refreshData();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: cryptoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        style: {\n          fontFamily: \"Courier New\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Saved Data\")), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), this.state.loaded && __jsx(\"div\", {\n        className: \"col-md-12 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Refresh\")), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.refreshData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-sync\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })))), this.state.loaded ? __jsx(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.graphs.length > 0 ? this.state.graphs.map(function (item, index) {\n        return __jsx(\"div\", {\n          key: item.id,\n          className: \"pt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          src: item.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-9 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, !_this2.state.loading ? __jsx(ReactHighcharts, {\n          key: item.id,\n          highcharts: Highcharts,\n          config: item.chartOptions,\n          ref: \"chart\",\n          oneToOne: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }) : __jsx(\"img\", {\n          src: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"text\",\n          value: item.cryptocurrency.name,\n          className: \"form-control text-center\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"text\",\n          value: item.currency.name,\n          className: \"form-control text-center\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-12 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Compare with current data\")), __jsx(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this2.compare(e, index);\n          },\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-md-12 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"Delete\")), __jsx(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this2.removeGraph(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-minus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }))))))));\n      }) : \"\") : __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center\",\n        style: {\n          paddingTop: \"30vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SavedData;\n}(Component);\n\nexport { SavedData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/saveddata.js"],"names":["React","Component","Layout","Highcharts","update","ReactHighcharts","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","SavedData","user","jwt","data","graphs","loaded","setState","getSavedData","state","_id","console","log","bkOptions","i","length","cryptocurrency","name","currency","series","categories","push","id","value","live","image","date","e","index","worker","Worker","onmessage","prices","$set","postMessage","getCurrentUser","getJwt","refreshData","fontFamily","map","item","compare","removeGraph","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport update from \"immutability-helper\";\r\nimport ReactHighcharts from 'react-highcharts';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\nconst chartOptions = {\r\n\tchart: { zoomType: 'x' },\r\n\txAxis: {\r\n\t\ttype: 'datetime',\r\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\r\n\t\ttitle: { text: 'Date' }\r\n\t},\r\n\tyAxis: {\r\n\t\ttitle: { text: 'Exchange rate' }\r\n\t},\r\n\tlegend: { enabled: false },\r\n\tplotOptions: {\r\n\t\tarea: {\r\n\t\t\tfillColor: {\r\n\t\t\t\tlinearGradient: {\r\n\t\t\t\t\tx1: 0,\r\n\t\t\t\t\ty1: 0,\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\ty2: 1\r\n\t\t\t\t},\r\n\t\t\t\tstops: [\r\n\t\t\t\t\t[0, \"#7cb5ec\"],\r\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\r\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tmarker: { radius: 2 },\r\n\t\t\tlineWidth: 1,\r\n\t\t\tstates: { hover: { lineWidth: 1 } },\r\n\t\t\tthreshold: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class SavedData extends Component {\r\n    state = {\r\n        user: {},\r\n        jwt: \"\",\r\n        data: {\r\n            graphs: []\r\n        },\r\n        loaded: false,\r\n        graphs: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const user = await auth.getCurrentUser();\r\n        const jwt = auth.getJwt();\r\n        this.setState({ user, jwt });\r\n        this.refreshData();\r\n    }\r\n\r\n    refreshData = async () => {\r\n        this.setState({graphs:[]});\r\n        const {data} = await crypto.getSavedData(this.state.user._id);\r\n        console.log(data);\r\n        const bkOptions = { ...chartOptions };\r\n        const graphs = [...this.state.graphs];\r\n        for(let i=0; i<data.graphs.length; i++){\r\n            bkOptions.title = { text: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name} exchange rate over time` },\r\n\t\t\t\tbkOptions.series = [{\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tname: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name}`,\r\n\t\t\t\t\tdata: data.graphs[i].series.data\r\n\t\t\t\t}]\r\n\t\t\tbkOptions.xAxis.categories = data.graphs[i].categories;\r\n\t\t\tgraphs.push({\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\tchartOptions: bkOptions,\r\n\t\t\t\tcryptocurrency: {\r\n                    name: data.graphs[i].cryptocurrency.name,\r\n                    value: data.graphs[i].cryptocurrency.value\r\n                },\r\n\t\t\t\tcurrency: {\r\n                    name: data.graphs[i].currency.name,\r\n                    value: data.graphs[i].currency.value\r\n                },\r\n\t\t\t\tlive: false,\r\n                image: data.graphs[i].image,\r\n                id: data.graphs[i].date\r\n\t\t\t})\r\n        }\r\n        this.setState({data, loaded: true, graphs})\r\n    }\r\n\r\n    compare = (e,index) => {\r\n        const worker = new Worker(\"static/service-worker.js\");\r\n        const graphs = [...this.state.graphs];\r\n        console.log(graphs[index]);\r\n\t\tworker.onmessage = e => {\r\n\t\t\tgraphs[index].chartOptions.series = [\r\n            {\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: this.state.graphs[index].chartOptions.series[0].name,\r\n\t\t\t\tdata: graphs[index].chartOptions.series[0].data\r\n            },\r\n            {\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tname: \"ABC\",\r\n\t\t\t\tdata: e.data.prices\r\n\t\t\t}]\r\n\t\t\tthis.setState({\r\n\t\t\t\tgraphs: update(this.state.graphs, { [index]: { $set: graphs[index] } })\r\n\t\t\t})\r\n\t\t}\r\n\t\tworker.postMessage(`${graphs[index].cryptocurrency.value},${graphs[index].currency.value},${this.state.jwt}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div className=\"w-50 mx-auto text-center pt-5\">\r\n\t\t\t\t\t<img src={cryptoImg} />\r\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Saved Data</strong></h1>\r\n\t\t\t\t\t<hr/>\r\n                    {this.state.loaded && <div className=\"col-md-12 mt-3\">\r\n                        <p><strong>Refresh</strong></p>\r\n                        <button className=\"btn btn-success\" onClick={this.refreshData}><i className=\"fas fa-sync\"/></button>\r\n                    </div>}\r\n                </div>\r\n                {this.state.loaded ?\r\n                    <div className=\"text-center\">\r\n                        {this.state.graphs.length > 0 ?\r\n                            this.state.graphs.map((item, index) =>\r\n                                <div key={item.id} className=\"pt-3\">\r\n                                    <hr/>\r\n                                    <img src={item.image} />\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col-md-9 text-center\">\r\n                                            {!this.state.loading ? <ReactHighcharts key={item.id} highcharts={Highcharts} config={item.chartOptions} ref=\"chart\" oneToOne={true} /> : <img src={loading} />}\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={item.cryptocurrency.name} className=\"form-control text-center\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n                                                <input type=\"text\" value={item.currency.name} className=\"form-control text-center\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12 mt-3\">\r\n                                                        <p><strong>Compare with current data</strong></p>\r\n                                                        <input type=\"checkbox\" onChange={(e) => this.compare(e, index)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12 mt-3\">\r\n                                                        <p><strong>Delete</strong></p>\r\n                                                        <button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}><i className=\"fas fa-minus\"/></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\"}\r\n                    </div>\r\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}