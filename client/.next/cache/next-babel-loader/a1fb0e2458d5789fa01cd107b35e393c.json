{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\components\\\\chart.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactHighcharts from 'react-highcharts';\nimport Highcharts from 'highcharts';\nvar chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: {}\n    });\n\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.data.length > 0 ? __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"select\", {\n        name: \"Cryptocurrency\",\n        onChange: function onChange(e) {\n          return _this2.changeGraphCryptocurrency(e, _this2.state.index);\n        },\n        defaultValue: this.state.item.cryptocurrency,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.cryptocurrencies.map(function (i) {\n        return __jsx(\"option\", {\n          value: i.id,\n          key: i.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, i.name, \" - \", i.symbol);\n      })), __jsx(\"select\", {\n        name: \"Currency\",\n        onChange: function onChange(e) {\n          return _this2.changeGraphCryptocurrency(e, _this2.state.index);\n        },\n        defaultValue: this.state.item.currency,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.currencies.map(function (i) {\n        return __jsx(\"option\", {\n          value: i.id,\n          key: i.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, i.name, \" - \", i.symbol);\n      })), __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: function onChange(e) {\n          return _this2.changeGraphLive(e, _this2.state.index);\n        },\n        defaultValue: this.state.item.live,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          return _this2.refreshSingle(_this2.state.index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"REFRESH\"), __jsx(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: function onClick() {\n          return _this2.refreshSingle(_this2.state.index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"SEARCH\"), __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return _this2.removeGraph(_this2.state.index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"DELETE\"), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.saveGraph(_this2.state.index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"SAVE\"))), __jsx(\"div\", {\n        className: \"col-md-9 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, !this.state.loading ? __jsx(ReactHighcharts, {\n        key: item.id,\n        highcharts: Highcharts,\n        config: item.chartOptions,\n        ref: \"chart\",\n        oneToOne: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))) : \"\");\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/components/chart.js"],"names":["React","Component","ReactHighcharts","Highcharts","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","Chart","data","setState","props","state","length","e","changeGraphCryptocurrency","index","item","cryptocurrency","cryptocurrencies","map","i","id","name","symbol","currency","currencies","changeGraphLive","live","refreshSingle","removeGraph","saveGraph","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactHighcharts from 'react-highcharts';\r\nimport Highcharts from 'highcharts';\r\n\r\nconst chartOptions = {\r\n    chart: {zoomType: 'x'},\r\n    xAxis: { \r\n            type: 'datetime',\r\n            dateTimeLabelFormats: {day: '%d-%m-%Y - %h:%m'},\r\n        title: {text: 'Date'}\r\n        },\r\n    yAxis: {\r\n        title: {text: 'Exchange rate'}\r\n    },\r\n    legend: {enabled: false},\r\n    plotOptions: {\r\n        area: {\r\n            fillColor: {\r\n                linearGradient: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 0,\r\n                    y2: 1\r\n                },\r\n                stops: [\r\n                    [0, \"#7cb5ec\"],\r\n                    [0.5, \"#7cb5ec80\"],\r\n                    [0.9, \"#7cb5ff33\"]\r\n                ]\r\n            },\r\n            marker: {radius: 2},\r\n            lineWidth: 1,\r\n            states: {hover: {lineWidth: 1}},\r\n            threshold: null\r\n        }\r\n    }\r\n}\r\n\r\nexport default class Chart extends Component {\r\n    state = {\r\n        data: {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({data:this.props.data})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.data.length > 0 ? \r\n                <div>\r\n                    <div className=\"col-md-3\">\r\n                    <div className=\"form-group\">\r\n                        <select name=\"Cryptocurrency\" onChange={(e) => this.changeGraphCryptocurrency(e,this.state.index)} defaultValue={this.state.item.cryptocurrency} className=\"form-control\">\r\n                            {this.state.cryptocurrencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}\r\n                        </select>\r\n                        <select name=\"Currency\" onChange={(e) => this.changeGraphCryptocurrency(e,this.state.index)} defaultValue={this.state.item.currency} className=\"form-control\">\r\n                            {this.state.currencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}\r\n                        </select>\r\n                        <input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e,this.state.index)} defaultValue={this.state.item.live} className=\"form-control\"/>\r\n                        <button className=\"btn btn-success\" onClick={() => this.refreshSingle(this.state.index)}>REFRESH</button>\r\n                        <button className=\"btn btn-warning\" onClick={() => this.refreshSingle(this.state.index)}>SEARCH</button>\r\n                        <button className=\"btn btn-danger\" onClick={() => this.removeGraph(this.state.index)}>DELETE</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => this.saveGraph(this.state.index)}>SAVE</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-9 text-center\">\r\n                    {!this.state.loading ? <ReactHighcharts key={item.id} highcharts={Highcharts} config={item.chartOptions} ref=\"chart\" oneToOne={true}/> : <img src={loading}/>}\r\n                </div>\r\n                </div> : \"\" }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}