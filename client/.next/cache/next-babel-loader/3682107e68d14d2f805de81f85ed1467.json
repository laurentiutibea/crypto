{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\saveddata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport ReactHighcharts from 'react-highcharts';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nconst chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\nexport default class SavedData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      jwt: \"\",\n      data: {\n        graphs: []\n      },\n      loaded: false,\n      graphs: []\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    const jwt = auth.getJwt();\n    const {\n      data\n    } = await crypto.getSavedData(user._id);\n    console.log(data);\n\n    const bkOptions = _objectSpread({}, chartOptions);\n\n    const graphs = [...this.state.graphs];\n\n    for (let i = 0; i < data.graphs.length; i++) {\n      bkOptions.title = {\n        text: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name} exchange rate over time`\n      }, bkOptions.series = [{\n        type: \"line\",\n        name: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name}`,\n        data: data.graphs[i].series.data\n      }];\n      bkOptions.xAxis.categories = data.graphs[i].categories;\n      graphs.push({\n        id: _Date$now(),\n        chartOptions: bkOptions,\n        cryptocurrency: data.graphs[i].cryptocurrency.name,\n        currency: data.graphs[i].currency.name,\n        live: false,\n        image: data.graphs[i].image\n      });\n    }\n\n    this.setState({\n      user,\n      jwt,\n      data,\n      loaded: true,\n      graphs\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"w-50 mx-auto text-center pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: cryptoImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      style: {\n        fontFamily: \"Courier New\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Saved Data\")), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), this.state.loaded ? __jsx(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.graphs.length > 0 ? this.state.graphs.map((item, index) => __jsx(\"div\", {\n      key: item.date,\n      className: \"pt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      src: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-9 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, !this.state.loading ? __jsx(ReactHighcharts, {\n      key: item.id,\n      highcharts: Highcharts,\n      config: item.chartOptions,\n      ref: \"chart\",\n      oneToOne: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }) : __jsx(\"img\", {\n      src: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: item.cryptocurrency,\n      className: \"form-control text-center\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: item.currency,\n      className: \"form-control text-center\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-12 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Compare with current data\")), __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: e => this.changeGraphLive(e, index),\n      defaultValue: item.live,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Refresh\")), __jsx(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.refreshSingle(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Delete\")), __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => this.removeGraph(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-minus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))))))))) : \"\") : __jsx(\"div\", {\n      className: \"w-50 mx-auto text-center\",\n      style: {\n        paddingTop: \"30vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/saveddata.js"],"names":["React","Component","Layout","Highcharts","ReactHighcharts","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","SavedData","user","jwt","data","graphs","loaded","componentDidMount","getCurrentUser","getJwt","getSavedData","_id","console","log","bkOptions","state","i","length","cryptocurrency","name","currency","series","categories","push","id","live","image","setState","render","fontFamily","map","item","index","date","e","changeGraphLive","refreshSingle","removeGraph","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport ReactHighcharts from 'react-highcharts';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\nconst chartOptions = {\r\n\tchart: { zoomType: 'x' },\r\n\txAxis: {\r\n\t\ttype: 'datetime',\r\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\r\n\t\ttitle: { text: 'Date' }\r\n\t},\r\n\tyAxis: {\r\n\t\ttitle: { text: 'Exchange rate' }\r\n\t},\r\n\tlegend: { enabled: false },\r\n\tplotOptions: {\r\n\t\tarea: {\r\n\t\t\tfillColor: {\r\n\t\t\t\tlinearGradient: {\r\n\t\t\t\t\tx1: 0,\r\n\t\t\t\t\ty1: 0,\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\ty2: 1\r\n\t\t\t\t},\r\n\t\t\t\tstops: [\r\n\t\t\t\t\t[0, \"#7cb5ec\"],\r\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\r\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tmarker: { radius: 2 },\r\n\t\t\tlineWidth: 1,\r\n\t\t\tstates: { hover: { lineWidth: 1 } },\r\n\t\t\tthreshold: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class SavedData extends Component {\r\n    state = {\r\n        user: {},\r\n        jwt: \"\",\r\n        data: {\r\n            graphs: []\r\n        },\r\n        loaded: false,\r\n        graphs: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const user = auth.getCurrentUser();\r\n        const jwt = auth.getJwt();\r\n        const {data} = await crypto.getSavedData(user._id);\r\n        console.log(data);\r\n        const bkOptions = { ...chartOptions };\r\n        const graphs = [...this.state.graphs];\r\n        for(let i=0; i<data.graphs.length; i++){\r\n            bkOptions.title = { text: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name} exchange rate over time` },\r\n\t\t\t\tbkOptions.series = [{\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tname: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name}`,\r\n\t\t\t\t\tdata: data.graphs[i].series.data\r\n\t\t\t\t}]\r\n\t\t\tbkOptions.xAxis.categories = data.graphs[i].categories;\r\n\t\t\tgraphs.push({\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\tchartOptions: bkOptions,\r\n\t\t\t\tcryptocurrency: data.graphs[i].cryptocurrency.name,\r\n\t\t\t\tcurrency: data.graphs[i].currency.name,\r\n\t\t\t\tlive: false,\r\n\t\t\t\timage: data.graphs[i].image\r\n\t\t\t})\r\n        }\r\n        this.setState({ user, jwt, data, loaded: true, graphs });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div className=\"w-50 mx-auto text-center pt-5\">\r\n\t\t\t\t\t<img src={cryptoImg} />\r\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Saved Data</strong></h1>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t</div>\r\n                {this.state.loaded ?\r\n                    <div className=\"text-center\">\r\n                        {this.state.graphs.length > 0 ?\r\n                            this.state.graphs.map((item, index) =>\r\n                                <div key={item.date} className=\"pt-3\">\r\n                                    <hr/>\r\n                                    <img src={item.image} />\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col-md-9 text-center\">\r\n                                            {!this.state.loading ? <ReactHighcharts key={item.id} highcharts={Highcharts} config={item.chartOptions} ref=\"chart\" oneToOne={true} /> : <img src={loading} />}\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={item.cryptocurrency} className=\"form-control text-center\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n                                                <input type=\"text\" value={item.currency} className=\"form-control text-center\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12 mt-3\">\r\n                                                        <p><strong>Compare with current data</strong></p>\r\n                                                        <input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e, index)} defaultValue={item.live} className=\"form-control\" />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 mt-3\">\r\n                                                        <p><strong>Refresh</strong></p>\r\n                                                        <button className=\"btn btn-success\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-redo\"/></button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 mt-3\">\r\n                                                        <p><strong>Delete</strong></p>\r\n                                                        <button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}><i className=\"fas fa-minus\"/></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\"}\r\n                    </div>\r\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}