{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/laurentiu/Documents/crypto/client/pages/customdata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nvar chartOptions = {\n  chart: {\n    zoomType: 'x',\n    backgroundColor: \"#eeeeee\"\n  },\n  title: {\n    text: 'BTC to EUR exchange rate over time'\n  },\n  subtitle: {\n    text: 'Click and drag in the plot area to zoom in'\n  },\n  xAxis: {\n    type: 'datetime'\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\n\nvar CustomData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomData, _Component);\n\n  function CustomData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      data: [],\n      graphs: [],\n      cryptocurrencies: [{\n        id: \"bitcoin\",\n        name: \"Bitcoin\",\n        symbol: \"BTC\"\n      }, {\n        id: \"ethereum\",\n        name: \"Ethereum\",\n        symbol: \"ETH\"\n      }],\n      currencies: [{\n        id: \"eur\",\n        name: \"Euro\",\n        symbol: \"BTC\"\n      }, {\n        id: \"usd\",\n        name: \"American Dollar\",\n        symbol: \"USD\"\n      }],\n      selectedCryptocurrency: \"\",\n      selectedCurrency: \"\",\n      chartOptions: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addGraph\", function () {\n      var myWorker = new Worker(\"static/service-worker.js\");\n\n      myWorker.onmessage = function (e) {\n        console.log(e.data);\n\n        var bkOptions = _objectSpread({}, chartOptions);\n\n        bkOptions.series = [{\n          type: \"area\",\n          name: \"BTC to EUR\",\n          data: e.data\n        }];\n\n        _this.setState({\n          data: e.data,\n          chartOptions: bkOptions\n        });\n      };\n\n      myWorker.postMessage(\"\".concat(_this.state.selectedCryptocurrency, \",\").concat(_this.state.selectedCurrency, \",\").concat(_this.state.jwt));\n\n      var graphs = _toConsumableArray(_this.state.graphs);\n\n      graphs.push({\n        id: _this.state.selectedCryptocurrency\n      });\n\n      _this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeCryptocurrency\", function (e) {\n      _this.setState(_defineProperty({}, \"selected\".concat(e.target.name), e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(CustomData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var user, jwt;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = auth.getCurrentUser();\n                jwt = auth.getJwt();\n                this.setState({\n                  user: user,\n                  jwt: jwt\n                });\n                /* await crypto.getCurrencies(\"bitcoin\",\"eur\").then(res => {\n                   const bkOptions = {...this.state.chartOptions};\n                   bkOptions.series = [{\n                     type: \"area\",\n                     name: \"BTC to EUR\",\n                     data: res.data\n                   }]\n                   this.setState({\n                     data: res.data,\n                     chartOptions: bkOptions\n                     })\n                 }); */\n                //console.log(this.state.data);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectCC = __jsx(\"select\", {\n        name: \"Cryptocurrency\",\n        onChange: this.changeCryptocurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Select Cryptocurrency\"), this.state.cryptocurrencies.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      }));\n\n      var selectC = __jsx(\"select\", {\n        name: \"Currency\",\n        onChange: this.changeCryptocurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Select Currency\"), this.state.currencies.map(function (item) {\n        return __jsx(\"option\", {\n          value: item.id,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, item.name, \" - \", item.symbol);\n      }));\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Hello \", this.state.user.name), selectCC, selectC, __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addGraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"+\"), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.graphs.length > 0 ? this.state.graphs.map(function (item) {\n        return __jsx(\"div\", {\n          className: \"col-md-6\",\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, selectCC, selectC, __jsx(HighchartsReact, {\n          key: item.id,\n          highcharts: Highcharts,\n          options: _this2.state.chartOptions,\n          oneToOne: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }));\n      }) : \"\"));\n    }\n  }]);\n\n  return CustomData;\n}(Component);\n\nexport { CustomData as default };","map":{"version":3,"sources":["/home/laurentiu/Documents/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","chartOptions","chart","zoomType","backgroundColor","title","text","subtitle","xAxis","type","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","CustomData","user","data","graphs","cryptocurrencies","id","name","symbol","currencies","selectedCryptocurrency","selectedCurrency","myWorker","Worker","onmessage","e","console","log","bkOptions","series","setState","postMessage","state","jwt","push","target","value","getCurrentUser","getJwt","selectCC","changeCryptocurrency","map","item","selectC","addGraph","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\n\nconst chartOptions = {\n  chart: {zoomType: 'x' , backgroundColor: \"#eeeeee\"},\n      title: {text: 'BTC to EUR exchange rate over time'},\n      subtitle: {text: 'Click and drag in the plot area to zoom in'},\n      xAxis: { type: 'datetime'},\n      yAxis: {\n          title: {text: 'Exchange rate'}\n      },\n      legend: {enabled: false},\n      plotOptions: {\n          area: {\n              fillColor: {\n                  linearGradient: {\n                      x1: 0,\n                      y1: 0,\n                      x2: 0,\n                      y2: 1\n                  },\n                  stops: [\n                    [0, \"#7cb5ec\"],\n                    [0.5, \"#7cb5ec80\"],\n                    [0.9, \"#7cb5ff33\"]\n                ]\n              },\n              marker: {radius: 2},\n              lineWidth: 1,\n              states: {\n                  hover: {lineWidth: 1}\n              },\n              threshold: null\n          }\n      }\n    }\n\nexport default class CustomData extends Component {\n  state = {\n    user: {},\n    data: [],\n    graphs: [],\n    cryptocurrencies: [\n      {\n        id: \"bitcoin\",\n        name: \"Bitcoin\",\n        symbol: \"BTC\"\n      },\n      {\n        id: \"ethereum\",\n        name: \"Ethereum\",\n        symbol: \"ETH\"\n      }\n    ],\n    currencies : [\n      {\n        id: \"eur\",\n        name: \"Euro\",\n        symbol: \"BTC\"\n      },\n      {\n        id: \"usd\",\n        name: \"American Dollar\",\n        symbol: \"USD\"\n      }\n    ],\n    selectedCryptocurrency: \"\",\n    selectedCurrency: \"\",\n    chartOptions: {}\n  }\n  \n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    const jwt = auth.getJwt();\n    this.setState({user,jwt});\n   /* await crypto.getCurrencies(\"bitcoin\",\"eur\").then(res => {\n      const bkOptions = {...this.state.chartOptions};\n      bkOptions.series = [{\n        type: \"area\",\n        name: \"BTC to EUR\",\n        data: res.data\n      }]\n      this.setState({\n        data: res.data,\n        chartOptions: bkOptions\n        })\n    }); */\n    //console.log(this.state.data);\n  }\n\n  addGraph = () => {\n    \n    const myWorker = new Worker(\"static/service-worker.js\");\n    myWorker.onmessage = e => {\n      console.log(e.data);\n      const bkOptions = {...chartOptions};\n      bkOptions.series = [{\n        type: \"area\",\n        name: \"BTC to EUR\",\n        data: e.data\n      }]\n      this.setState({\n        data: e.data,\n        chartOptions: bkOptions\n        })\n    }\n    myWorker.postMessage(`${this.state.selectedCryptocurrency},${this.state.selectedCurrency},${this.state.jwt}`);\n      const graphs = [...this.state.graphs];\n      graphs.push({\n          id: this.state.selectedCryptocurrency\n      })\n      this.setState({graphs});\n  }\n\n  changeCryptocurrency = (e) => {\n    this.setState({[`selected${e.target.name}`]:e.target.value});\n  }\n\n  render() {\n    const selectCC = <select name=\"Cryptocurrency\" onChange={this.changeCryptocurrency}><option value=\"\">Select Cryptocurrency</option>{this.state.cryptocurrencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\n    const selectC = <select name=\"Currency\" onChange={this.changeCryptocurrency}><option value=\"\">Select Currency</option>{this.state.currencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\n    return (\n      <Layout>\n          <p>Hello {this.state.user.name}</p>\n          {selectCC}\n          {selectC}\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\n          <div className=\"row\">\n            {this.state.graphs.length > 0 ? \n                this.state.graphs.map(item => \n                    <div className=\"col-md-6\" key={item.id}>\n                        {selectCC}\n                        {selectC}\n                        <HighchartsReact key={item.id} highcharts={Highcharts} options={this.state.chartOptions} oneToOne={true}/>\n                    </div> \n            ): \"\"}\n          </div>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}