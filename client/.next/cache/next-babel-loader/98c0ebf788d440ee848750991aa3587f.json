{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\components\\\\chart.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nexport default class Chart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: {}\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.props.data\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/components/chart.js"],"names":["React","Component","Chart","data","componentDidMount","setState","props","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;;AAAA,mCACjC;AACJE,MAAAA,IAAI,EAAE;AADF,KADiC;AAAA;;AAKzCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAACF,MAAAA,IAAI,EAAC,KAAKG,KAAL,CAAWH;AAAjB,KAAd;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAsBH;;AAhCwC","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Chart extends Component {\r\n    state = {\r\n        data: {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({data:this.props.data})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <div className=\"col-md-3\">\r\n                    <div className=\"form-group\">\r\n                        <select name=\"Cryptocurrency\" onChange={(e) => this.changeGraphCryptocurrency(e,index)} defaultValue={item.cryptocurrency} className=\"form-control\">\r\n                            {this.state.cryptocurrencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}\r\n                        </select>\r\n                        <select name=\"Currency\" onChange={(e) => this.changeGraphCryptocurrency(e,index)} defaultValue={item.currency} className=\"form-control\">\r\n                            {this.state.currencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}\r\n                        </select>\r\n                        <input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e,index)} defaultValue={item.live} className=\"form-control\"/>\r\n                        <button className=\"btn btn-success\" onClick={() => this.refreshSingle(index)}>REFRESH</button>\r\n                        <button className=\"btn btn-warning\" onClick={() => this.refreshSingle(index)}>SEARCH</button>\r\n                        <button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}>DELETE</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => this.saveGraph(index)}>SAVE</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-9 text-center\">\r\n                    {!this.state.loading ? <ReactHighcharts key={item.id} highcharts={Highcharts} config={item.chartOptions} ref=\"chart\" oneToOne={true}/> : <img src={loading}/>}\r\n                </div>  */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}