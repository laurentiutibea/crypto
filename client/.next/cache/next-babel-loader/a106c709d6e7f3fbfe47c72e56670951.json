{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/laurentiu/Documents/crypto/client/pages/customdata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport ReactHighcharts from 'react-highcharts';\nimport update from \"immutability-helper\";\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nconst chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\nexport default class CustomData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      jwt: \"\",\n      data: [],\n      graphs: [],\n      cryptocurrencies: [],\n      currencies: [],\n      selectedCryptocurrency: {},\n      selectedCurrency: {},\n      workers: 0,\n      loading: false,\n      loaded: false,\n      searchQueryCryptocurrencies: \"\",\n      searchQueryCurrencies: \"\",\n      interval: [],\n      chartOptions: {}\n    });\n\n    _defineProperty(this, \"addGraph\", () => {\n      const worker = new Worker(\"static/service-worker.js\");\n\n      const bkOptions = _objectSpread({}, chartOptions);\n\n      const graphs = [...this.state.graphs];\n\n      worker.onmessage = e => {\n        console.log(e.data);\n        bkOptions.title = {\n          text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time`\n        }, bkOptions.series = [{\n          type: \"line\",\n          name: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\n          data: e.data.prices\n        }];\n        bkOptions.xAxis.categories = [...e.data.time];\n        graphs.push({\n          id: _Date$now(),\n          chartOptions: bkOptions,\n          cryptocurrency: this.state.selectedCryptocurrency.value,\n          currency: this.state.selectedCurrency.value,\n          live: false,\n          image: e.data.image\n        });\n        console.log(graphs);\n        this.setState({\n          graphs: graphs,\n          workers: this.state.workers + 1,\n          interval: \"\"\n        });\n      };\n\n      worker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"findName\", (array, value) => {\n      for (let i = 0; i < this.state[array].length; i++) {\n        if (this.state[array][i].id === value) {\n          return this.state[array][i].name;\n        }\n      }\n    });\n\n    _defineProperty(this, \"changeCryptocurrency\", (e, array) => {\n      console.log(e.target.value);\n      const name = this.findName(array, e.target.value);\n      console.log(name);\n      this.setState({\n        [`selected${e.target.name}`]: {\n          value: e.target.value,\n          name: name\n        }\n      });\n    });\n\n    _defineProperty(this, \"changeGraphCryptocurrency\", (e, index) => {\n      const graphs = [...this.state.graphs];\n      graphs[index][e.target.name.toLowerCase()] = e.target.value;\n      this.setState({\n        graphs: graphs\n      });\n    });\n\n    _defineProperty(this, \"refreshAll\", () => {\n      let workers = new Array(this.state.workers);\n      const graphs = [...this.state.graphs];\n      this.setState({\n        loading: true\n      });\n\n      for (let i = 0; i < this.state.workers; i++) {\n        workers[i] = new Worker(\"static/service-worker.js\");\n\n        workers[i].onmessage = e => {\n          graphs[i].chartOptions.xAxis.categories = [...e.data.time];\n          graphs[i].chartOptions.series = [{\n            type: \"line\",\n            name: this.state.graphs[i].chartOptions.series[0].name,\n            data: e.data.prices\n          }];\n          this.setState({\n            graphs: graphs,\n            loading: false\n          });\n        };\n\n        workers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\n      }\n    });\n\n    _defineProperty(this, \"refreshSingle\", index => {\n      const worker = new Worker(\"static/service-worker.js\");\n      const graphs = [...this.state.graphs]; //this.setState({loading: true});\n\n      worker.onmessage = e => {\n        const cryptocurrency = this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\n        const currency = this.findName(this.state.cryptocurrencies, graphs[index].currency);\n        graphs[index].chartOptions.title = {\n          text: `${cryptocurrency} to ${currency} exchange rate over time`\n        }, graphs[index].chartOptions.xAxis.categories = [...e.data.time];\n        graphs[index].image = e.data.image;\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: `${graphs[index].cryptocurrency} to ${graphs[index].currency}`,\n          data: e.data.prices\n        }];\n        this.setState({\n          graphs: graphs //loading: false\n\n        });\n      };\n\n      worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"removeGraph\", index => {\n      let graphs = [...this.state.graphs];\n      clearInterval(graphs[index].interval);\n      graphs = graphs.filter((item, i) => i !== index);\n      this.setState({\n        graphs\n      });\n    });\n\n    _defineProperty(this, \"liveData\", index => {\n      console.log(\"LIVE\", index);\n      const worker = new Worker(\"static/service-worker.js\");\n      const graphs = [...this.state.graphs];\n\n      worker.onmessage = e => {\n        graphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\n        graphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\n        graphs[index].chartOptions.series = [{\n          type: \"line\",\n          name: this.state.graphs[index].chartOptions.series[0].name,\n          data: graphs[index].chartOptions.series[0].data\n        }];\n        this.setState({\n          graphs: update(this.state.graphs, {\n            [index]: {\n              $set: graphs[index]\n            }\n          })\n        });\n      };\n\n      worker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n    });\n\n    _defineProperty(this, \"changeGraphLive\", (e, index) => {\n      const graphs = [...this.state.graphs];\n\n      if (e.target.checked) {\n        graphs[index].interval = setInterval(() => this.liveData(index), 4000);\n        this.setState({\n          graphs\n        });\n      } else {\n        clearInterval(graphs[index].interval);\n      }\n    });\n\n    _defineProperty(this, \"saveGraph\", async index => {\n      const bkGraph = _objectSpread({}, this.state.graphs[index]);\n\n      const graph = {\n        categories: bkGraph.chartOptions.xAxis.categories,\n        series: bkGraph.chartOptions.series[0],\n        graphId: bkGraph.id,\n        cryptocurrency: bkGraph.cryptocurrency,\n        currency: bkGraph.currency,\n        date: new Date()\n      };\n      console.log(graph);\n      await crypto.saveGraph(graph).then(res => {\n        console.log(\"SUCCESS!\");\n      }).catch(err => console.log(\"ERROR!\", err));\n    });\n\n    _defineProperty(this, \"getFilteredCryptocurrencies\", () => {\n      const {\n        cryptocurrencies: allData,\n        searchQueryCryptocurrencies\n      } = this.state;\n      let filtered = allData;\n      if (searchQueryCryptocurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase()));\n      return {\n        filtered\n      };\n    });\n\n    _defineProperty(this, \"getFilteredCurrencies\", () => {\n      const {\n        currencies: allData,\n        searchQueryCurrencies\n      } = this.state;\n      let filtered = allData;\n      if (searchQueryCurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase()));\n      return {\n        filtered\n      };\n    });\n\n    _defineProperty(this, \"handleSearch\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    const jwt = auth.getJwt();\n    this.setState({\n      user,\n      jwt\n    });\n    await crypto.getCryptocurrencies().then(res => {\n      console.log(res.data);\n      this.setState({\n        cryptocurrencies: res.data.cryptocurrencies,\n        currencies: res.data.currencies,\n        loaded: true\n      });\n    });\n    /* await crypto.getCurrencies(\"bitcoin\",\"eur\").then(res => {\n      const bkOptions = {...this.state.chartOptions};\n      bkOptions.series = [{\n    \ttype: \"area\",\n    \tname: \"BTC to EUR\",\n    \tdata: res.data\n      }]\n      this.setState({\n    \tdata: res.data,\n    \tchartOptions: bkOptions\n    \t})\n    }); */\n  }\n\n  render() {\n    const {\n      filtered: cryptocurrencies\n    } = this.getFilteredCryptocurrencies();\n    const {\n      filtered: currencies\n    } = this.getFilteredCurrencies();\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"w-50 mx-auto text-center pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: cryptoImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      style: {\n        fontFamily: \"Courier New\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Custom Data Graphs\")), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })), this.state.loaded ? __jsx(\"div\", {\n      className: \"text-center pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row w-75 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.handleSearch,\n      placeholder: \"Search Cryptocurrency...\",\n      value: this.state.searchQueryCryptocurrencies,\n      name: \"searchQueryCryptocurrencies\",\n      className: \"form-control w-75\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-search\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      name: \"Cryptocurrency\",\n      onChange: e => this.changeCryptocurrency(e, \"cryptocurrencies\"),\n      disabled: !this.state.loaded,\n      className: \"form-control\",\n      style: {\n        display: \"inline-block\",\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Select Cryptocurrency\"), cryptocurrencies.map(item => __jsx(\"option\", {\n      value: item.id,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, item.name, \" - \", item.symbol))), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-hand-pointer\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.handleSearch,\n      placeholder: \"Search Currency...\",\n      value: this.state.searchQueryCurrencies,\n      name: \"searchQueryCurrencies\",\n      className: \"form-control w-75\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-search\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      name: \"Currency\",\n      onChange: e => this.changeCryptocurrency(e, \"currencies\"),\n      disabled: !this.state.loaded,\n      className: \"form-control\",\n      style: {\n        display: \"inline-block\",\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Select Currency\"), currencies.map(item => __jsx(\"option\", {\n      value: item.id,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, item.name, \" - \", item.symbol))), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"   \", __jsx(\"i\", {\n      className: \"fas fa-hand-pointer\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Add graph for selected values:\")), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.addGraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Refresh all graphs:\")), __jsx(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.refreshAll,\n      disabled: this.state.graphs.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-sync\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })))), this.state.graphs.length > 0 ? this.state.graphs.map((item, index) => __jsx(\"div\", {\n      key: item.id,\n      className: \"pt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      src: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      name: \"Cryptocurrency\",\n      onChange: e => this.changeGraphCryptocurrency(e, index),\n      defaultValue: item.cryptocurrency,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, this.state.cryptocurrencies.map(i => __jsx(\"option\", {\n      value: i.id,\n      key: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, i.name, \" - \", i.symbol))), __jsx(\"select\", {\n      name: \"Currency\",\n      onChange: e => this.changeGraphCryptocurrency(e, index),\n      defaultValue: item.currency,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, this.state.currencies.map(i => __jsx(\"option\", {\n      value: i.id,\n      key: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, i.name, \" - \", i.symbol))), __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: e => this.changeGraphLive(e, index),\n      defaultValue: item.live,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.refreshSingle(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.refreshSingle(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => this.removeGraph(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-minus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.saveGraph(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })))), __jsx(\"div\", {\n      className: \"col-md-9 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, !this.state.loading ? __jsx(ReactHighcharts, {\n      key: item.id,\n      highcharts: Highcharts,\n      config: item.chartOptions,\n      ref: \"chart\",\n      oneToOne: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }) : __jsx(\"img\", {\n      src: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }))))) : \"\") : __jsx(\"div\", {\n      className: \"w-50 mx-auto text-center\",\n      style: {\n        paddingTop: \"30vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/laurentiu/Documents/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","ReactHighcharts","update","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","CustomData","user","jwt","data","graphs","cryptocurrencies","currencies","selectedCryptocurrency","selectedCurrency","workers","loaded","searchQueryCryptocurrencies","searchQueryCurrencies","interval","worker","Worker","bkOptions","state","onmessage","e","console","log","name","series","prices","categories","time","push","id","cryptocurrency","value","currency","live","image","setState","postMessage","array","i","length","target","findName","index","toLowerCase","Array","clearInterval","filter","item","currentTime","currentPrice","$set","checked","setInterval","liveData","bkGraph","graph","graphId","date","Date","saveGraph","then","res","catch","err","allData","filtered","m","startsWith","componentDidMount","getCurrentUser","getJwt","getCryptocurrencies","render","getFilteredCryptocurrencies","getFilteredCurrencies","fontFamily","handleSearch","display","changeCryptocurrency","width","map","symbol","addGraph","refreshAll","changeGraphCryptocurrency","changeGraphLive","refreshSingle","removeGraph","paddingTop"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAGA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GADa;AAEpBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE,UADA;AAENC,IAAAA,oBAAoB,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFhB;AAGNC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAHD,GAFa;AAOpBC,EAAAA,KAAK,EAAE;AACNF,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AADD,GAPa;AAUpBE,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAVY;AAWpBC,EAAAA,WAAW,EAAE;AACZC,IAAAA,IAAI,EAAE;AACLC,MAAAA,SAAS,EAAE;AACVC,QAAAA,cAAc,EAAE;AACfC,UAAAA,EAAE,EAAE,CADW;AAEfC,UAAAA,EAAE,EAAE,CAFW;AAGfC,UAAAA,EAAE,EAAE,CAHW;AAIfC,UAAAA,EAAE,EAAE;AAJW,SADN;AAOVC,QAAAA,KAAK,EAAE,CACN,CAAC,CAAD,EAAI,SAAJ,CADM,EAEN,CAAC,GAAD,EAAM,WAAN,CAFM,EAGN,CAAC,GAAD,EAAM,WAAN,CAHM;AAPG,OADN;AAcLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAdH;AAeLC,MAAAA,SAAS,EAAE,CAfN;AAgBLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,SAAS,EAAE;AAAb;AAAT,OAhBH;AAiBLG,MAAAA,SAAS,EAAE;AAjBN;AADM;AAXO,CAArB;AAkCA,eAAe,MAAMC,UAAN,SAAyBpC,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACzC;AACPqC,MAAAA,IAAI,EAAE,EADC;AAEPC,MAAAA,GAAG,EAAE,EAFE;AAGPC,MAAAA,IAAI,EAAE,EAHC;AAIPC,MAAAA,MAAM,EAAE,EAJD;AAKPC,MAAAA,gBAAgB,EAAE,EALX;AAMPC,MAAAA,UAAU,EAAE,EANL;AAOPC,MAAAA,sBAAsB,EAAE,EAPjB;AAQPC,MAAAA,gBAAgB,EAAE,EARX;AASPC,MAAAA,OAAO,EAAE,CATF;AAUPtC,MAAAA,OAAO,EAAE,KAVF;AAWPuC,MAAAA,MAAM,EAAE,KAXD;AAYPC,MAAAA,2BAA2B,EAAE,EAZtB;AAaPC,MAAAA,qBAAqB,EAAE,EAbhB;AAcPC,MAAAA,QAAQ,EAAE,EAdH;AAePxC,MAAAA,YAAY,EAAE;AAfP,KADyC;;AAAA,sCA6CtC,MAAM;AAChB,YAAMyC,MAAM,GAAG,IAAIC,MAAJ,CAAW,0BAAX,CAAf;;AACA,YAAMC,SAAS,qBAAQ3C,YAAR,CAAf;;AACA,YAAM+B,MAAM,GAAG,CAAC,GAAG,KAAKa,KAAL,CAAWb,MAAf,CAAf;;AACAU,MAAAA,MAAM,CAACI,SAAP,GAAmBC,CAAC,IAAI;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAAChB,IAAd;AACAa,QAAAA,SAAS,CAACpC,KAAV,GAAkB;AAAEC,UAAAA,IAAI,EAAG,GAAE,KAAKoC,KAAL,CAAWV,sBAAX,CAAkCe,IAAK,OAAM,KAAKL,KAAL,CAAWT,gBAAX,CAA4Bc,IAAK;AAAzF,SAAlB,EACCN,SAAS,CAACO,MAAV,GAAmB,CAAC;AACnB9C,UAAAA,IAAI,EAAE,MADa;AAEnB6C,UAAAA,IAAI,EAAG,GAAE,KAAKL,KAAL,CAAWV,sBAAX,CAAkCe,IAAK,OAAM,KAAKL,KAAL,CAAWT,gBAAX,CAA4Bc,IAAK,EAFpE;AAGnBnB,UAAAA,IAAI,EAAEgB,CAAC,CAAChB,IAAF,CAAOqB;AAHM,SAAD,CADpB;AAMAR,QAAAA,SAAS,CAACxC,KAAV,CAAgBiD,UAAhB,GAA6B,CAAC,GAAGN,CAAC,CAAChB,IAAF,CAAOuB,IAAX,CAA7B;AACAtB,QAAAA,MAAM,CAACuB,IAAP,CAAY;AACXC,UAAAA,EAAE,EAAE,WADO;AAEXvD,UAAAA,YAAY,EAAE2C,SAFH;AAGXa,UAAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWV,sBAAX,CAAkCuB,KAHvC;AAIXC,UAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWT,gBAAX,CAA4BsB,KAJ3B;AAKXE,UAAAA,IAAI,EAAE,KALK;AAMXC,UAAAA,KAAK,EAAEd,CAAC,CAAChB,IAAF,CAAO8B;AANH,SAAZ;AAQAb,QAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACA,aAAK8B,QAAL,CAAc;AACb9B,UAAAA,MAAM,EAAEA,MADK;AAEbK,UAAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWR,OAAX,GAAqB,CAFjB;AAGbI,UAAAA,QAAQ,EAAE;AAHG,SAAd;AAKA,OAvBD;;AAwBAC,MAAAA,MAAM,CAACqB,WAAP,CAAoB,GAAE,KAAKlB,KAAL,CAAWV,sBAAX,CAAkCuB,KAAM,IAAG,KAAKb,KAAL,CAAWT,gBAAX,CAA4BsB,KAAM,IAAG,KAAKb,KAAL,CAAWf,GAAI,EAArH;AAEA,KA3EgD;;AAAA,sCA6EtC,CAACkC,KAAD,EAAQN,KAAR,KAAkB;AAC5B,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpB,KAAL,CAAWmB,KAAX,EAAkBE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAClD,YAAI,KAAKpB,KAAL,CAAWmB,KAAX,EAAkBC,CAAlB,EAAqBT,EAArB,KAA4BE,KAAhC,EAAuC;AACtC,iBAAO,KAAKb,KAAL,CAAWmB,KAAX,EAAkBC,CAAlB,EAAqBf,IAA5B;AACA;AACD;AACD,KAnFgD;;AAAA,kDAqF1B,CAACH,CAAD,EAAIiB,KAAJ,KAAc;AACpChB,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACoB,MAAF,CAAST,KAArB;AACA,YAAMR,IAAI,GAAG,KAAKkB,QAAL,CAAcJ,KAAd,EAAqBjB,CAAC,CAACoB,MAAF,CAAST,KAA9B,CAAb;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,WAAKY,QAAL,CAAc;AACb,SAAE,WAAUf,CAAC,CAACoB,MAAF,CAASjB,IAAK,EAA1B,GAA8B;AAC7BQ,UAAAA,KAAK,EAAEX,CAAC,CAACoB,MAAF,CAAST,KADa;AAE7BR,UAAAA,IAAI,EAAEA;AAFuB;AADjB,OAAd;AAMA,KA/FgD;;AAAA,uDAiGrB,CAACH,CAAD,EAAIsB,KAAJ,KAAc;AACzC,YAAMrC,MAAM,GAAG,CAAC,GAAG,KAAKa,KAAL,CAAWb,MAAf,CAAf;AACAA,MAAAA,MAAM,CAACqC,KAAD,CAAN,CAActB,CAAC,CAACoB,MAAF,CAASjB,IAAT,CAAcoB,WAAd,EAAd,IAA6CvB,CAAC,CAACoB,MAAF,CAAST,KAAtD;AACA,WAAKI,QAAL,CAAc;AAAE9B,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACA,KArGgD;;AAAA,wCAuGpC,MAAM;AAClB,UAAIK,OAAO,GAAG,IAAIkC,KAAJ,CAAU,KAAK1B,KAAL,CAAWR,OAArB,CAAd;AACA,YAAML,MAAM,GAAG,CAAC,GAAG,KAAKa,KAAL,CAAWb,MAAf,CAAf;AACA,WAAK8B,QAAL,CAAc;AAAE/D,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,WAAK,IAAIkE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpB,KAAL,CAAWR,OAA/B,EAAwC4B,CAAC,EAAzC,EAA6C;AAC5C5B,QAAAA,OAAO,CAAC4B,CAAD,CAAP,GAAa,IAAItB,MAAJ,CAAW,0BAAX,CAAb;;AACAN,QAAAA,OAAO,CAAC4B,CAAD,CAAP,CAAWnB,SAAX,GAAuBC,CAAC,IAAI;AAC3Bf,UAAAA,MAAM,CAACiC,CAAD,CAAN,CAAUhE,YAAV,CAAuBG,KAAvB,CAA6BiD,UAA7B,GAA0C,CAAC,GAAGN,CAAC,CAAChB,IAAF,CAAOuB,IAAX,CAA1C;AACAtB,UAAAA,MAAM,CAACiC,CAAD,CAAN,CAAUhE,YAAV,CAAuBkD,MAAvB,GAAgC,CAAC;AAChC9C,YAAAA,IAAI,EAAE,MAD0B;AAEhC6C,YAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWb,MAAX,CAAkBiC,CAAlB,EAAqBhE,YAArB,CAAkCkD,MAAlC,CAAyC,CAAzC,EAA4CD,IAFlB;AAGhCnB,YAAAA,IAAI,EAAEgB,CAAC,CAAChB,IAAF,CAAOqB;AAHmB,WAAD,CAAhC;AAKA,eAAKU,QAAL,CAAc;AACb9B,YAAAA,MAAM,EAAEA,MADK;AAEbjC,YAAAA,OAAO,EAAE;AAFI,WAAd;AAIA,SAXD;;AAYAsC,QAAAA,OAAO,CAAC4B,CAAD,CAAP,CAAWF,WAAX,CAAwB,GAAE/B,MAAM,CAACiC,CAAD,CAAN,CAAUR,cAAe,IAAGzB,MAAM,CAACiC,CAAD,CAAN,CAAUN,QAAS,IAAG,KAAKd,KAAL,CAAWf,GAAI,EAA3F;AACA;AACD,KA3HgD;;AAAA,2CA6HhCuC,KAAD,IAAW;AAC1B,YAAM3B,MAAM,GAAG,IAAIC,MAAJ,CAAW,0BAAX,CAAf;AACA,YAAMX,MAAM,GAAG,CAAC,GAAG,KAAKa,KAAL,CAAWb,MAAf,CAAf,CAF0B,CAG1B;;AACAU,MAAAA,MAAM,CAACI,SAAP,GAAmBC,CAAC,IAAI;AACvB,cAAMU,cAAc,GAAE,KAAKW,QAAL,CAAc,kBAAd,EAAkCpC,MAAM,CAACqC,KAAD,CAAN,CAAcZ,cAAhD,CAAtB;AACA,cAAME,QAAQ,GAAE,KAAKS,QAAL,CAAc,KAAKvB,KAAL,CAAWZ,gBAAzB,EAA2CD,MAAM,CAACqC,KAAD,CAAN,CAAcV,QAAzD,CAAhB;AACA3B,QAAAA,MAAM,CAACqC,KAAD,CAAN,CAAcpE,YAAd,CAA2BO,KAA3B,GAAmC;AAAEC,UAAAA,IAAI,EAAG,GAAEgD,cAAe,OAAME,QAAS;AAAzC,SAAnC,EACA3B,MAAM,CAACqC,KAAD,CAAN,CAAcpE,YAAd,CAA2BG,KAA3B,CAAiCiD,UAAjC,GAA8C,CAAC,GAAGN,CAAC,CAAChB,IAAF,CAAOuB,IAAX,CAD9C;AAEAtB,QAAAA,MAAM,CAACqC,KAAD,CAAN,CAAcR,KAAd,GAAsBd,CAAC,CAAChB,IAAF,CAAO8B,KAA7B;AACA7B,QAAAA,MAAM,CAACqC,KAAD,CAAN,CAAcpE,YAAd,CAA2BkD,MAA3B,GAAoC,CAAC;AACpC9C,UAAAA,IAAI,EAAE,MAD8B;AAEpC6C,UAAAA,IAAI,EAAG,GAAElB,MAAM,CAACqC,KAAD,CAAN,CAAcZ,cAAe,OAAMzB,MAAM,CAACqC,KAAD,CAAN,CAAcV,QAAS,EAF/B;AAGpC5B,UAAAA,IAAI,EAAEgB,CAAC,CAAChB,IAAF,CAAOqB;AAHuB,SAAD,CAApC;AAKA,aAAKU,QAAL,CAAc;AACb9B,UAAAA,MAAM,EAAEA,MADK,CAEb;;AAFa,SAAd;AAIA,OAfD;;AAgBAU,MAAAA,MAAM,CAACqB,WAAP,CAAoB,GAAE/B,MAAM,CAACqC,KAAD,CAAN,CAAcZ,cAAe,IAAGzB,MAAM,CAACqC,KAAD,CAAN,CAAcV,QAAS,IAAG,KAAKd,KAAL,CAAWf,GAAI,EAA/F;AACA,KAlJgD;;AAAA,yCAoJlCuC,KAAD,IAAW;AACxB,UAAIrC,MAAM,GAAG,CAAC,GAAG,KAAKa,KAAL,CAAWb,MAAf,CAAb;AACAwC,MAAAA,aAAa,CAACxC,MAAM,CAACqC,KAAD,CAAN,CAAc5B,QAAf,CAAb;AACAT,MAAAA,MAAM,GAAGA,MAAM,CAACyC,MAAP,CAAc,CAACC,IAAD,EAAOT,CAAP,KAAaA,CAAC,KAAKI,KAAjC,CAAT;AACA,WAAKP,QAAL,CAAc;AAAE9B,QAAAA;AAAF,OAAd;AACA,KAzJgD;;AAAA,sCA2JrCqC,KAAD,IAAW;AACrBrB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBoB,KAApB;AACA,YAAM3B,MAAM,GAAG,IAAIC,MAAJ,CAAW,0BAAX,CAAf;AACA,YAAMX,MAAM,GAAG,CAAC,GAAG,KAAKa,KAAL,CAAWb,MAAf,CAAf;;AACAU,MAAAA,MAAM,CAACI,SAAP,GAAmBC,CAAC,IAAI;AACvBf,QAAAA,MAAM,CAACqC,KAAD,CAAN,CAAcpE,YAAd,CAA2BG,KAA3B,CAAiCiD,UAAjC,CAA4CE,IAA5C,CAAiDR,CAAC,CAAChB,IAAF,CAAO4C,WAAxD;AACA3C,QAAAA,MAAM,CAACqC,KAAD,CAAN,CAAcpE,YAAd,CAA2BkD,MAA3B,CAAkC,CAAlC,EAAqCpB,IAArC,CAA0CwB,IAA1C,CAA+CR,CAAC,CAAChB,IAAF,CAAO6C,YAAtD;AACA5C,QAAAA,MAAM,CAACqC,KAAD,CAAN,CAAcpE,YAAd,CAA2BkD,MAA3B,GAAoC,CAAC;AACpC9C,UAAAA,IAAI,EAAE,MAD8B;AAEpC6C,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWb,MAAX,CAAkBqC,KAAlB,EAAyBpE,YAAzB,CAAsCkD,MAAtC,CAA6C,CAA7C,EAAgDD,IAFlB;AAGpCnB,UAAAA,IAAI,EAAEC,MAAM,CAACqC,KAAD,CAAN,CAAcpE,YAAd,CAA2BkD,MAA3B,CAAkC,CAAlC,EAAqCpB;AAHP,SAAD,CAApC;AAKA,aAAK+B,QAAL,CAAc;AACb9B,UAAAA,MAAM,EAAEpC,MAAM,CAAC,KAAKiD,KAAL,CAAWb,MAAZ,EAAoB;AAAE,aAACqC,KAAD,GAAS;AAAEQ,cAAAA,IAAI,EAAE7C,MAAM,CAACqC,KAAD;AAAd;AAAX,WAApB;AADD,SAAd;AAGA,OAXD;;AAYA3B,MAAAA,MAAM,CAACqB,WAAP,CAAoB,GAAE/B,MAAM,CAACqC,KAAD,CAAN,CAAcZ,cAAe,IAAGzB,MAAM,CAACqC,KAAD,CAAN,CAAcV,QAAS,IAAG,KAAKd,KAAL,CAAWf,GAAI,EAA/F;AACA,KA5KgD;;AAAA,6CA8K/B,CAACiB,CAAD,EAAIsB,KAAJ,KAAc;AAC/B,YAAMrC,MAAM,GAAG,CAAC,GAAG,KAAKa,KAAL,CAAWb,MAAf,CAAf;;AACA,UAAIe,CAAC,CAACoB,MAAF,CAASW,OAAb,EAAsB;AACrB9C,QAAAA,MAAM,CAACqC,KAAD,CAAN,CAAc5B,QAAd,GAAyBsC,WAAW,CAAC,MAAM,KAAKC,QAAL,CAAcX,KAAd,CAAP,EAA6B,IAA7B,CAApC;AACA,aAAKP,QAAL,CAAc;AAAE9B,UAAAA;AAAF,SAAd;AACA,OAHD,MAIK;AACJwC,QAAAA,aAAa,CAACxC,MAAM,CAACqC,KAAD,CAAN,CAAc5B,QAAf,CAAb;AACA;AACD,KAvLgD;;AAAA,uCAyLrC,MAAO4B,KAAP,IAAiB;AAC5B,YAAMY,OAAO,qBAAQ,KAAKpC,KAAL,CAAWb,MAAX,CAAkBqC,KAAlB,CAAR,CAAb;;AACA,YAAMa,KAAK,GAAG;AACb7B,QAAAA,UAAU,EAAE4B,OAAO,CAAChF,YAAR,CAAqBG,KAArB,CAA2BiD,UAD1B;AAEbF,QAAAA,MAAM,EAAE8B,OAAO,CAAChF,YAAR,CAAqBkD,MAArB,CAA4B,CAA5B,CAFK;AAGbgC,QAAAA,OAAO,EAAEF,OAAO,CAACzB,EAHJ;AAIbC,QAAAA,cAAc,EAAEwB,OAAO,CAACxB,cAJX;AAKbE,QAAAA,QAAQ,EAAEsB,OAAO,CAACtB,QALL;AAMbyB,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AANO,OAAd;AAQArC,MAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAZ;AACA,YAAMpF,MAAM,CAACwF,SAAP,CAAiBJ,KAAjB,EAAwBK,IAAxB,CAA6BC,GAAG,IAAI;AAAExC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAA0B,OAAhE,EAAkEwC,KAAlE,CAAwEC,GAAG,IAAI1C,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsByC,GAAtB,CAA/E,CAAN;AACA,KArMgD;;AAAA,yDAuMnB,MAAM;AACnC,YAAM;AAAEzD,QAAAA,gBAAgB,EAAE0D,OAApB;AAA6BpD,QAAAA;AAA7B,UAA6D,KAAKM,KAAxE;AACA,UAAI+C,QAAQ,GAAGD,OAAf;AACA,UAAIpD,2BAAJ,EAAiCqD,QAAQ,GAAGD,OAAO,CAAClB,MAAR,CAAeoB,CAAC,IAAIA,CAAC,CAAC3C,IAAF,CAAOoB,WAAP,GAAqBwB,UAArB,CAAgCvD,2BAA2B,CAAC+B,WAA5B,EAAhC,CAApB,CAAX;AACjC,aAAO;AAAEsB,QAAAA;AAAF,OAAP;AACA,KA5MgD;;AAAA,mDA8MzB,MAAM;AAC7B,YAAM;AAAE1D,QAAAA,UAAU,EAAEyD,OAAd;AAAuBnD,QAAAA;AAAvB,UAAiD,KAAKK,KAA5D;AACA,UAAI+C,QAAQ,GAAGD,OAAf;AACA,UAAInD,qBAAJ,EAA2BoD,QAAQ,GAAGD,OAAO,CAAClB,MAAR,CAAeoB,CAAC,IAAIA,CAAC,CAAC3C,IAAF,CAAOoB,WAAP,GAAqBwB,UAArB,CAAgCtD,qBAAqB,CAAC8B,WAAtB,EAAhC,CAApB,CAAX;AAC3B,aAAO;AAAEsB,QAAAA;AAAF,OAAP;AACA,KAnNgD;;AAAA,0CAqNjC7C,CAAD,IAAO;AACrB,WAAKe,QAAL,CAAc;AACb,SAACf,CAAC,CAACoB,MAAF,CAASjB,IAAV,GAAiBH,CAAC,CAACoB,MAAF,CAAST;AADb,OAAd;AAGA,KAzNgD;AAAA;;AAmBjD,QAAMqC,iBAAN,GAA0B;AACzB,UAAMlE,IAAI,GAAGhC,IAAI,CAACmG,cAAL,EAAb;AACA,UAAMlE,GAAG,GAAGjC,IAAI,CAACoG,MAAL,EAAZ;AACA,SAAKnC,QAAL,CAAc;AAAEjC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAd;AACA,UAAMhC,MAAM,CAACoG,mBAAP,GAA6BX,IAA7B,CAAkCC,GAAG,IAAI;AAC9CxC,MAAAA,OAAO,CAACC,GAAR,CAAYuC,GAAG,CAACzD,IAAhB;AACA,WAAK+B,QAAL,CAAc;AACb7B,QAAAA,gBAAgB,EAAEuD,GAAG,CAACzD,IAAJ,CAASE,gBADd;AAEbC,QAAAA,UAAU,EAAEsD,GAAG,CAACzD,IAAJ,CAASG,UAFR;AAGbI,QAAAA,MAAM,EAAE;AAHK,OAAd;AAKA,KAPK,CAAN;AAQA;;;;;;;;;;;;AAYA;;AAgLD6D,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEP,MAAAA,QAAQ,EAAE3D;AAAZ,QAAiC,KAAKmE,2BAAL,EAAvC;AACA,UAAM;AAAER,MAAAA,QAAQ,EAAE1D;AAAZ,QAA2B,KAAKmE,qBAAL,EAAjC;AACA,WACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAErG,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAI,MAAA,KAAK,EAAE;AAACsG,QAAAA,UAAU,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAxC,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADD,EAME,KAAKzD,KAAL,CAAWP,MAAX,GACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKiE,YAAlC;AAAgD,MAAA,WAAW,EAAC,0BAA5D;AAAuF,MAAA,KAAK,EAAE,KAAK1D,KAAL,CAAWN,2BAAzG;AAAsI,MAAA,IAAI,EAAC,6BAA3I;AAAyK,MAAA,SAAS,EAAC,mBAAnL;AAAuM,MAAA,KAAK,EAAE;AAACiE,QAAAA,OAAO,EAAE;AAAV,OAA9M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAS;AAAG,MAAA,SAAS,EAAC,eAAb;AAA6B,MAAA,KAAK,EAAE;AAACA,QAAAA,OAAO,EAAE;AAAV,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,CAFD,CADD,EAKC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,IAAI,EAAC,gBAAb;AAA8B,MAAA,QAAQ,EAAGzD,CAAD,IAAO,KAAK0D,oBAAL,CAA0B1D,CAA1B,EAA6B,kBAA7B,CAA/C;AAAiG,MAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWP,MAAvH;AAA+H,MAAA,SAAS,EAAC,cAAzI;AAAwJ,MAAA,KAAK,EAAE;AAACkE,QAAAA,OAAO,EAAE,cAAV;AAA0BE,QAAAA,KAAK,EAAE;AAAjC,OAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwM;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAxM,EAAwPzE,gBAAgB,CAAC0E,GAAjB,CAAqBjC,IAAI,IAAK;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAAClB,EAApB;AAAwB,MAAA,GAAG,EAAEkB,IAAI,CAAClB,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCkB,IAAI,CAACxB,IAA5C,SAAqDwB,IAAI,CAACkC,MAA1D,CAA9B,CAAxP,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAS;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAmC,MAAA,KAAK,EAAE;AAACJ,QAAAA,OAAO,EAAE;AAAV,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,CAFD,CALD,EASC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKD,YAAlC;AAAgD,MAAA,WAAW,EAAC,oBAA5D;AAAiF,MAAA,KAAK,EAAE,KAAK1D,KAAL,CAAWL,qBAAnG;AAA0H,MAAA,IAAI,EAAC,uBAA/H;AAAuJ,MAAA,SAAS,EAAC,mBAAjK;AAAqL,MAAA,KAAK,EAAE;AAACgE,QAAAA,OAAO,EAAE;AAAV,OAA5L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAS;AAAG,MAAA,SAAS,EAAC,eAAb;AAA6B,MAAA,KAAK,EAAE;AAACA,QAAAA,OAAO,EAAE;AAAV,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,CAFD,CATD,EAaC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,QAAQ,EAAGzD,CAAD,IAAO,KAAK0D,oBAAL,CAA0B1D,CAA1B,EAA6B,YAA7B,CAAzC;AAAqF,MAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWP,MAA3G;AAAmH,MAAA,SAAS,EAAC,cAA7H;AAA4I,MAAA,KAAK,EAAE;AAACkE,QAAAA,OAAO,EAAE,cAAV;AAA0BE,QAAAA,KAAK,EAAE;AAAjC,OAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4L;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA5L,EAAsOxE,UAAU,CAACyE,GAAX,CAAejC,IAAI,IAAK;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAAClB,EAApB;AAAwB,MAAA,GAAG,EAAEkB,IAAI,CAAClB,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCkB,IAAI,CAACxB,IAA5C,SAAqDwB,IAAI,CAACkC,MAA1D,CAAxB,CAAtO,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAS;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAmC,MAAA,KAAK,EAAE;AAACJ,QAAAA,OAAO,EAAE;AAAV,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,CAFD,CAbD,EAiBC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAH,CADD,EAEC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKK,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4D;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5D,CAFD,CAjBD,EAqBC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAH,CADD,EAEC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKC,UAAlD;AAA8D,MAAA,QAAQ,EAAE,KAAKjE,KAAL,CAAWb,MAAX,CAAkBkC,MAAlB,KAA6B,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwG;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxG,CAFD,CArBD,CADD,EA2BE,KAAKrB,KAAL,CAAWb,MAAX,CAAkBkC,MAAlB,GAA2B,CAA3B,GACA,KAAKrB,KAAL,CAAWb,MAAX,CAAkB2E,GAAlB,CAAsB,CAACjC,IAAD,EAAOL,KAAP,KACrB;AAAK,MAAA,GAAG,EAAEK,IAAI,CAAClB,EAAf;AAAmB,MAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAK,MAAA,GAAG,EAAEkB,IAAI,CAACb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,IAAI,EAAC,gBAAb;AAA8B,MAAA,QAAQ,EAAGd,CAAD,IAAO,KAAKgE,yBAAL,CAA+BhE,CAA/B,EAAkCsB,KAAlC,CAA/C;AAAyF,MAAA,YAAY,EAAEK,IAAI,CAACjB,cAA5G;AAA4H,MAAA,SAAS,EAAC,cAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsJ,KAAKZ,KAAL,CAAWZ,gBAAX,CAA4B0E,GAA5B,CAAgC1C,CAAC,IAAK;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACT,EAAjB;AAAqB,MAAA,GAAG,EAAES,CAAC,CAACT,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCS,CAAC,CAACf,IAAnC,SAA4Ce,CAAC,CAAC2C,MAA9C,CAAtC,CAAtJ,CADD,EAEC;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,QAAQ,EAAG7D,CAAD,IAAO,KAAKgE,yBAAL,CAA+BhE,CAA/B,EAAkCsB,KAAlC,CAAzC;AAAmF,MAAA,YAAY,EAAEK,IAAI,CAACf,QAAtG;AAAgH,MAAA,SAAS,EAAC,cAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0I,KAAKd,KAAL,CAAWX,UAAX,CAAsByE,GAAtB,CAA0B1C,CAAC,IAAK;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACT,EAAjB;AAAqB,MAAA,GAAG,EAAES,CAAC,CAACT,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCS,CAAC,CAACf,IAAnC,SAA4Ce,CAAC,CAAC2C,MAA9C,CAAhC,CAA1I,CAFD,EAGC;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAG7D,CAAD,IAAO,KAAKiE,eAAL,CAAqBjE,CAArB,EAAwBsB,KAAxB,CAAxC;AAAwE,MAAA,YAAY,EAAEK,IAAI,CAACd,IAA3F;AAAiG,MAAA,SAAS,EAAC,cAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKqD,aAAL,CAAmB5C,KAAnB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8E;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9E,CAJD,EAKC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAK4C,aAAL,CAAmB5C,KAAnB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8E;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9E,CALD,EAMC;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,MAAM,KAAK6C,WAAL,CAAiB7C,KAAjB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2E;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3E,CAND,EAOC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKiB,SAAL,CAAejB,KAAf,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1E,CAPD,CADD,CADD,EAYC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,CAAC,KAAKxB,KAAL,CAAW9C,OAAZ,GAAsB,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAE2E,IAAI,CAAClB,EAA3B;AAA+B,MAAA,UAAU,EAAE9D,UAA3C;AAAuD,MAAA,MAAM,EAAEgF,IAAI,CAACzE,YAApE;AAAkF,MAAA,GAAG,EAAC,OAAtF;AAA8F,MAAA,QAAQ,EAAE,IAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAyI;AAAK,MAAA,GAAG,EAAEF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3I,CAZD,CAHD,CADD,CADA,GAsBI,EAjDN,CADA,GAoDC;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,KAAK,EAAE;AAACoH,QAAAA,UAAU,EAAE;AAAb,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuE;AAAK,MAAA,GAAG,EAAEpH,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvE,CA1DH,CADD;AA8DA;;AA5RgD","sourcesContent":["import React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport ReactHighcharts from 'react-highcharts';\nimport update from \"immutability-helper\";\n\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\n\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\n\n\nconst chartOptions = {\n\tchart: { zoomType: 'x' },\n\txAxis: {\n\t\ttype: 'datetime',\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\n\t\ttitle: { text: 'Date' }\n\t},\n\tyAxis: {\n\t\ttitle: { text: 'Exchange rate' }\n\t},\n\tlegend: { enabled: false },\n\tplotOptions: {\n\t\tarea: {\n\t\t\tfillColor: {\n\t\t\t\tlinearGradient: {\n\t\t\t\t\tx1: 0,\n\t\t\t\t\ty1: 0,\n\t\t\t\t\tx2: 0,\n\t\t\t\t\ty2: 1\n\t\t\t\t},\n\t\t\t\tstops: [\n\t\t\t\t\t[0, \"#7cb5ec\"],\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\n\t\t\t\t]\n\t\t\t},\n\t\t\tmarker: { radius: 2 },\n\t\t\tlineWidth: 1,\n\t\t\tstates: { hover: { lineWidth: 1 } },\n\t\t\tthreshold: null\n\t\t}\n\t}\n}\n\nexport default class CustomData extends Component {\n\tstate = {\n\t\tuser: {},\n\t\tjwt: \"\",\n\t\tdata: [],\n\t\tgraphs: [],\n\t\tcryptocurrencies: [],\n\t\tcurrencies: [],\n\t\tselectedCryptocurrency: {},\n\t\tselectedCurrency: {},\n\t\tworkers: 0,\n\t\tloading: false,\n\t\tloaded: false,\n\t\tsearchQueryCryptocurrencies: \"\",\n\t\tsearchQueryCurrencies: \"\",\n\t\tinterval: [],\n\t\tchartOptions: {}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = auth.getCurrentUser();\n\t\tconst jwt = auth.getJwt();\n\t\tthis.setState({ user, jwt });\n\t\tawait crypto.getCryptocurrencies().then(res => {\n\t\t\tconsole.log(res.data);\n\t\t\tthis.setState({\n\t\t\t\tcryptocurrencies: res.data.cryptocurrencies,\n\t\t\t\tcurrencies: res.data.currencies,\n\t\t\t\tloaded: true\n\t\t\t})\n\t\t});\n\t\t/* await crypto.getCurrencies(\"bitcoin\",\"eur\").then(res => {\n\t\t  const bkOptions = {...this.state.chartOptions};\n\t\t  bkOptions.series = [{\n\t\t\ttype: \"area\",\n\t\t\tname: \"BTC to EUR\",\n\t\t\tdata: res.data\n\t\t  }]\n\t\t  this.setState({\n\t\t\tdata: res.data,\n\t\t\tchartOptions: bkOptions\n\t\t\t})\n\t\t}); */\n\t}\n\n\taddGraph = () => {\n\t\tconst worker = new Worker(\"static/service-worker.js\");\n\t\tconst bkOptions = { ...chartOptions };\n\t\tconst graphs = [...this.state.graphs];\n\t\tworker.onmessage = e => {\n\t\t\tconsole.log(e.data);\n\t\t\tbkOptions.title = { text: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name} exchange rate over time` },\n\t\t\t\tbkOptions.series = [{\n\t\t\t\t\ttype: \"line\",\n\t\t\t\t\tname: `${this.state.selectedCryptocurrency.name} to ${this.state.selectedCurrency.name}`,\n\t\t\t\t\tdata: e.data.prices\n\t\t\t\t}]\n\t\t\tbkOptions.xAxis.categories = [...e.data.time];\n\t\t\tgraphs.push({\n\t\t\t\tid: Date.now(),\n\t\t\t\tchartOptions: bkOptions,\n\t\t\t\tcryptocurrency: this.state.selectedCryptocurrency.value,\n\t\t\t\tcurrency: this.state.selectedCurrency.value,\n\t\t\t\tlive: false,\n\t\t\t\timage: e.data.image\n\t\t\t})\n\t\t\tconsole.log(graphs);\n\t\t\tthis.setState({\n\t\t\t\tgraphs: graphs,\n\t\t\t\tworkers: this.state.workers + 1,\n\t\t\t\tinterval: \"\"\n\t\t\t})\n\t\t}\n\t\tworker.postMessage(`${this.state.selectedCryptocurrency.value},${this.state.selectedCurrency.value},${this.state.jwt}`);\n\n\t}\n\n\tfindName = (array, value) => {\n\t\tfor (let i = 0; i < this.state[array].length; i++) {\n\t\t\tif (this.state[array][i].id === value) {\n\t\t\t\treturn this.state[array][i].name;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangeCryptocurrency = (e, array) => {\n\t\tconsole.log(e.target.value);\n\t\tconst name = this.findName(array, e.target.value);\n\t\tconsole.log(name);\n\t\tthis.setState({\n\t\t\t[`selected${e.target.name}`]: {\n\t\t\t\tvalue: e.target.value,\n\t\t\t\tname: name\n\t\t\t}\n\t\t});\n\t}\n\n\tchangeGraphCryptocurrency = (e, index) => {\n\t\tconst graphs = [...this.state.graphs];\n\t\tgraphs[index][e.target.name.toLowerCase()] = e.target.value;\n\t\tthis.setState({ graphs: graphs })\n\t}\n\n\trefreshAll = () => {\n\t\tlet workers = new Array(this.state.workers);\n\t\tconst graphs = [...this.state.graphs];\n\t\tthis.setState({ loading: true });\n\t\tfor (let i = 0; i < this.state.workers; i++) {\n\t\t\tworkers[i] = new Worker(\"static/service-worker.js\");\n\t\t\tworkers[i].onmessage = e => {\n\t\t\t\tgraphs[i].chartOptions.xAxis.categories = [...e.data.time];\n\t\t\t\tgraphs[i].chartOptions.series = [{\n\t\t\t\t\ttype: \"line\",\n\t\t\t\t\tname: this.state.graphs[i].chartOptions.series[0].name,\n\t\t\t\t\tdata: e.data.prices\n\t\t\t\t}]\n\t\t\t\tthis.setState({\n\t\t\t\t\tgraphs: graphs,\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t}\n\t\t\tworkers[i].postMessage(`${graphs[i].cryptocurrency},${graphs[i].currency},${this.state.jwt}`);\n\t\t}\n\t}\n\n\trefreshSingle = (index) => {\n\t\tconst worker = new Worker(\"static/service-worker.js\");\n\t\tconst graphs = [...this.state.graphs];\n\t\t//this.setState({loading: true});\n\t\tworker.onmessage = e => {\n\t\t\tconst cryptocurrency= this.findName(\"cryptocurrencies\", graphs[index].cryptocurrency);\n\t\t\tconst currency= this.findName(this.state.cryptocurrencies, graphs[index].currency);\n\t\t\tgraphs[index].chartOptions.title = { text: `${cryptocurrency} to ${currency} exchange rate over time` },\n\t\t\tgraphs[index].chartOptions.xAxis.categories = [...e.data.time];\n\t\t\tgraphs[index].image = e.data.image;\n\t\t\tgraphs[index].chartOptions.series = [{\n\t\t\t\ttype: \"line\",\n\t\t\t\tname: `${graphs[index].cryptocurrency} to ${graphs[index].currency}`,\n\t\t\t\tdata: e.data.prices\n\t\t\t}]\n\t\t\tthis.setState({\n\t\t\t\tgraphs: graphs,\n\t\t\t\t//loading: false\n\t\t\t})\n\t\t}\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n\t}\n\n\tremoveGraph = (index) => {\n\t\tlet graphs = [...this.state.graphs];\n\t\tclearInterval(graphs[index].interval);\n\t\tgraphs = graphs.filter((item, i) => i !== index);\n\t\tthis.setState({ graphs });\n\t}\n\n\tliveData = (index) => {\n\t\tconsole.log(\"LIVE\", index);\n\t\tconst worker = new Worker(\"static/service-worker.js\");\n\t\tconst graphs = [...this.state.graphs];\n\t\tworker.onmessage = e => {\n\t\t\tgraphs[index].chartOptions.xAxis.categories.push(e.data.currentTime);\n\t\t\tgraphs[index].chartOptions.series[0].data.push(e.data.currentPrice);\n\t\t\tgraphs[index].chartOptions.series = [{\n\t\t\t\ttype: \"line\",\n\t\t\t\tname: this.state.graphs[index].chartOptions.series[0].name,\n\t\t\t\tdata: graphs[index].chartOptions.series[0].data\n\t\t\t}]\n\t\t\tthis.setState({\n\t\t\t\tgraphs: update(this.state.graphs, { [index]: { $set: graphs[index] } })\n\t\t\t})\n\t\t}\n\t\tworker.postMessage(`${graphs[index].cryptocurrency},${graphs[index].currency},${this.state.jwt}`);\n\t}\n\n\tchangeGraphLive = (e, index) => {\n\t\tconst graphs = [...this.state.graphs];\n\t\tif (e.target.checked) {\n\t\t\tgraphs[index].interval = setInterval(() => this.liveData(index), 4000);\n\t\t\tthis.setState({ graphs });\n\t\t}\n\t\telse {\n\t\t\tclearInterval(graphs[index].interval);\n\t\t}\n\t}\n\n\tsaveGraph = async (index) => {\n\t\tconst bkGraph = { ...this.state.graphs[index] };\n\t\tconst graph = {\n\t\t\tcategories: bkGraph.chartOptions.xAxis.categories,\n\t\t\tseries: bkGraph.chartOptions.series[0],\n\t\t\tgraphId: bkGraph.id,\n\t\t\tcryptocurrency: bkGraph.cryptocurrency,\n\t\t\tcurrency: bkGraph.currency,\n\t\t\tdate: new Date\n\t\t}\n\t\tconsole.log(graph);\n\t\tawait crypto.saveGraph(graph).then(res => { console.log(\"SUCCESS!\"); }).catch(err => console.log(\"ERROR!\", err));\n\t}\n\n\tgetFilteredCryptocurrencies = () => {\n\t\tconst { cryptocurrencies: allData, searchQueryCryptocurrencies } = this.state;\n\t\tlet filtered = allData;\n\t\tif (searchQueryCryptocurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCryptocurrencies.toLowerCase()));\n\t\treturn { filtered };\n\t};\n\n\tgetFilteredCurrencies = () => {\n\t\tconst { currencies: allData, searchQueryCurrencies } = this.state;\n\t\tlet filtered = allData;\n\t\tif (searchQueryCurrencies) filtered = allData.filter(m => m.name.toLowerCase().startsWith(searchQueryCurrencies.toLowerCase()));\n\t\treturn { filtered };\n\t};\n\n\thandleSearch = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { filtered: cryptocurrencies } = this.getFilteredCryptocurrencies();\n\t\tconst { filtered: currencies } = this.getFilteredCurrencies();\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<div className=\"w-50 mx-auto text-center pt-5\">\n\t\t\t\t\t<img src={cryptoImg} />\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Custom Data Graphs</strong></h1>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t</div>\n\t\t\t\t{this.state.loaded ?\n\t\t\t\t\t<div className=\"text-center pt-2\">\n\t\t\t\t\t\t<div className=\"row w-75 mx-auto\">\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Cryptocurrency...\" value={this.state.searchQueryCryptocurrencies} name=\"searchQueryCryptocurrencies\" className=\"form-control w-75\" style={{display: \"inline-block\"}}/>\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeCryptocurrency(e, \"cryptocurrencies\")} disabled={!this.state.loaded} className=\"form-control\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Cryptocurrency</option>{cryptocurrencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\n\t\t\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSearch} placeholder=\"Search Currency...\" value={this.state.searchQueryCurrencies} name=\"searchQueryCurrencies\" className=\"form-control w-75\" style={{display: \"inline-block\"}}/>\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-search\" style={{display: \"inline-block\"}}/></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-2\">\n\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeCryptocurrency(e, \"currencies\")} disabled={!this.state.loaded} className=\"form-control\" style={{display: \"inline-block\", width: \"90%\"}}><option value=\"\">Select Currency</option>{currencies.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\n\t\t\t\t\t\t\t\t<span>   <i className=\"fas fa-hand-pointer\" style={{display: \"inline-block\"}}/></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\n\t\t\t\t\t\t\t\t<p><strong>Add graph for selected values:</strong></p>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.addGraph}><i className=\"fas fa-plus\"/></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-6 mt-3\">\n\t\t\t\t\t\t\t\t<p><strong>Refresh all graphs:</strong></p>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.refreshAll} disabled={this.state.graphs.length === 0}><i className=\"fas fa-sync\"/></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.state.graphs.length > 0 ?\n\t\t\t\t\t\t\tthis.state.graphs.map((item, index) =>\n\t\t\t\t\t\t\t\t<div key={item.id} className=\"pt-3\">\n\t\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t\t\t<img src={item.image} />\n\t\t\t\t\t\t\t\t\t<div className=\"row mt-4\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Cryptocurrency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.cryptocurrency} className=\"form-control\">{this.state.cryptocurrencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\n\t\t\t\t\t\t\t\t\t\t\t\t<select name=\"Currency\" onChange={(e) => this.changeGraphCryptocurrency(e, index)} defaultValue={item.currency} className=\"form-control\">{this.state.currencies.map(i => (<option value={i.id} key={i.id}>{i.name} - {i.symbol}</option>))}</select>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" onChange={(e) => this.changeGraphLive(e, index)} defaultValue={item.live} className=\"form-control\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-search\"/></button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={() => this.refreshSingle(index)}><i className=\"fas fa-redo\"/></button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => this.removeGraph(index)}><i className=\"fas fa-minus\"/></button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => this.saveGraph(index)}><i className=\"fas fa-save\"/></button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-9 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t{!this.state.loading ? <ReactHighcharts key={item.id} highcharts={Highcharts} config={item.chartOptions} ref=\"chart\" oneToOne={true} /> : <img src={loading} />}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}