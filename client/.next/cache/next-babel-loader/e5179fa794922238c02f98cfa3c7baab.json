{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nexport default class CustomData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      data: [],\n      graphs: [],\n      options: {\n        chart: {\n          zoomType: 'x'\n        },\n        title: {\n          text: 'USD to EUR exchange rate over time'\n        },\n        subtitle: {\n          text: 'Click and drag in the plot area to zoom in'\n        },\n        xAxis: {\n          type: 'datetime'\n        },\n        yAxis: {\n          title: {\n            text: 'Exchange rate'\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        plotOptions: {\n          area: {\n            fillColor: {\n              linearGradient: {\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 1\n              }\n            },\n            marker: {\n              radius: 2\n            },\n            lineWidth: 1,\n            states: {\n              hover: {\n                lineWidth: 1\n              }\n            },\n            threshold: null\n          }\n        },\n        series: [{\n          type: 'area',\n          name: 'USD to EUR'\n        }]\n      }\n    });\n\n    _defineProperty(this, \"addGraph\", () => {\n      const graphs = [...this.state.graphs];\n      graphs.push({\n        id: 1,\n        data: {\n          name: \"Bitcoin\"\n        }\n      });\n      this.setState({\n        graphs\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({\n      user\n    });\n    const options = {\n      chart: {\n        zoomType: 'x'\n      },\n      title: {\n        text: 'USD to EUR exchange rate over time'\n      },\n      subtitle: {\n        text: 'Click and drag in the plot area to zoom in'\n      },\n      xAxis: {\n        type: 'datetime'\n      },\n      yAxis: {\n        title: {\n          text: 'Exchange rate'\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      plotOptions: {\n        area: {\n          fillColor: {\n            linearGradient: {\n              x1: 0,\n              y1: 0,\n              x2: 0,\n              y2: 1\n            }\n          },\n          marker: {\n            radius: 2\n          },\n          lineWidth: 1,\n          states: {\n            hover: {\n              lineWidth: 1\n            }\n          },\n          threshold: null\n        }\n      },\n      series: [{\n        type: 'area',\n        name: 'USD to EUR'\n      }]\n    };\n    await crypto.getCurrencies().then(res => this.setState({\n      data: res.data\n    }));\n    options.series[0].data = this.state.data;\n    this.setState({\n      options: options\n    });\n    console.log(this.state.options.series);\n    console.log(this.state.data);\n  }\n\n  render() {\n    //const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Hello \", this.state.user.name), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.addGraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"+\"), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.graphs.length > 0 ? this.state.graphs.map(item => __jsx(HighchartsReact, {\n      key: item.id,\n      highcharts: Highcharts,\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })) : \"\"));\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","CustomData","user","data","graphs","options","chart","zoomType","title","text","subtitle","xAxis","type","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","marker","radius","lineWidth","states","hover","threshold","series","name","state","push","id","setState","componentDidMount","getCurrentUser","getCurrencies","then","res","console","log","render","addGraph","length","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACxC;AACNO,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SADA;AAETC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAFE;AAGTC,QAAAA,QAAQ,EAAE;AAACD,UAAAA,IAAI,EAAE;AAAP,SAHD;AAITE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAJE;AAKTC,QAAAA,KAAK,EAAE;AACHL,UAAAA,KAAK,EAAE;AAACC,YAAAA,IAAI,EAAE;AAAP;AADJ,SALE;AAQTK,QAAAA,MAAM,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SARC;AASTC,QAAAA,WAAW,EAAE;AACTC,UAAAA,IAAI,EAAE;AACFC,YAAAA,SAAS,EAAE;AACPC,cAAAA,cAAc,EAAE;AACZC,gBAAAA,EAAE,EAAE,CADQ;AAEZC,gBAAAA,EAAE,EAAE,CAFQ;AAGZC,gBAAAA,EAAE,EAAE,CAHQ;AAIZC,gBAAAA,EAAE,EAAE;AAJQ;AADT,aADT;AASFC,YAAAA,MAAM,EAAE;AAACC,cAAAA,MAAM,EAAE;AAAT,aATN;AAUFC,YAAAA,SAAS,EAAE,CAVT;AAWFC,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAE;AAACF,gBAAAA,SAAS,EAAE;AAAZ;AADH,aAXN;AAcFG,YAAAA,SAAS,EAAE;AAdT;AADG,SATJ;AA4BTC,QAAAA,MAAM,EAAE,CAAC;AACLlB,UAAAA,IAAI,EAAE,MADD;AAELmB,UAAAA,IAAI,EAAE;AAFD,SAAD;AA5BC;AAJH,KADwC;;AAAA,sCAkFrC,MAAM;AACb,YAAM3B,MAAM,GAAG,CAAC,GAAG,KAAK4B,KAAL,CAAW5B,MAAf,CAAf;AACAA,MAAAA,MAAM,CAAC6B,IAAP,CAAY;AACRC,QAAAA,EAAE,EAAE,CADI;AAER/B,QAAAA,IAAI,EAAE;AACF4B,UAAAA,IAAI,EAAE;AADJ;AAFE,OAAZ;AAMA,WAAKI,QAAL,CAAc;AAAC/B,QAAAA;AAAD,OAAd;AACH,KA3F+C;AAAA;;AAwChD,QAAMgC,iBAAN,GAA0B;AAC3B,UAAMlC,IAAI,GAAGH,IAAI,CAACsC,cAAL,EAAb;AACG,SAAKF,QAAL,CAAc;AAACjC,MAAAA;AAAD,KAAd;AACA,UAAMG,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OADO;AAEhBC,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAFS;AAGhBC,MAAAA,QAAQ,EAAE;AAACD,QAAAA,IAAI,EAAE;AAAP,OAHM;AAIhBE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAJS;AAKhBC,MAAAA,KAAK,EAAE;AACHL,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP;AADJ,OALS;AAQhBK,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OARQ;AAShBC,MAAAA,WAAW,EAAE;AACTC,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE;AACPC,YAAAA,cAAc,EAAE;AACZC,cAAAA,EAAE,EAAE,CADQ;AAEZC,cAAAA,EAAE,EAAE,CAFQ;AAGZC,cAAAA,EAAE,EAAE,CAHQ;AAIZC,cAAAA,EAAE,EAAE;AAJQ;AADT,WADT;AASFC,UAAAA,MAAM,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WATN;AAUFC,UAAAA,SAAS,EAAE,CAVT;AAWFC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE;AAACF,cAAAA,SAAS,EAAE;AAAZ;AADH,WAXN;AAcFG,UAAAA,SAAS,EAAE;AAdT;AADG,OATG;AA4BhBC,MAAAA,MAAM,EAAE,CAAC;AACLlB,QAAAA,IAAI,EAAE,MADD;AAELmB,QAAAA,IAAI,EAAE;AAFD,OAAD;AA5BQ,KAAhB;AAiCA,UAAM/B,MAAM,CAACsC,aAAP,GAAuBC,IAAvB,CAA4BC,GAAG,IAAI,KAAKL,QAAL,CAAc;AAAChC,MAAAA,IAAI,EAAEqC,GAAG,CAACrC;AAAX,KAAd,CAAnC,CAAN;AACAE,IAAAA,OAAO,CAACyB,MAAR,CAAe,CAAf,EAAkB3B,IAAlB,GAAyB,KAAK6B,KAAL,CAAW7B,IAApC;AACA,SAAKgC,QAAL,CAAc;AAAC9B,MAAAA,OAAO,EAAEA;AAAV,KAAd;AACAoC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAW3B,OAAX,CAAmByB,MAA/B;AAA2CW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAW7B,IAAvB;AAC5C;;AAaDwC,EAAAA,MAAM,GAAG;AACP;AAEA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKX,KAAL,CAAW9B,IAAX,CAAgB6B,IAA1B,CADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKa,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAW5B,MAAX,CAAkByC,MAAlB,GAA2B,CAA3B,GACC,KAAKb,KAAL,CAAW5B,MAAX,CAAkB0C,GAAlB,CAAsBC,IAAI,IAAI,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAEA,IAAI,CAACb,EAA3B;AAA+B,MAAA,UAAU,EAAErC,UAA3C;AAAuD,MAAA,OAAO,EAAE,KAAKmC,KAAL,CAAW3B,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,CADD,GACuH,EAF1H,CAHJ,CADF;AAkBD;;AAlH+C","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: [],\r\n    graphs: [],\r\n    options: {\r\n      chart: {zoomType: 'x' },\r\n    title: {text: 'USD to EUR exchange rate over time'},\r\n    subtitle: {text: 'Click and drag in the plot area to zoom in'},\r\n    xAxis: { type: 'datetime'},\r\n    yAxis: {\r\n        title: {text: 'Exchange rate'}\r\n    },\r\n    legend: {enabled: false},\r\n    plotOptions: {\r\n        area: {\r\n            fillColor: {\r\n                linearGradient: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 0,\r\n                    y2: 1\r\n                },\r\n            },\r\n            marker: {radius: 2},\r\n            lineWidth: 1,\r\n            states: {\r\n                hover: {lineWidth: 1}\r\n            },\r\n            threshold: null\r\n        }\r\n    },\r\n\r\n    series: [{\r\n        type: 'area',\r\n        name: 'USD to EUR'\r\n    }]\r\n  }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\tconst user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    const options = {\r\n      chart: {zoomType: 'x' },\r\n    title: {text: 'USD to EUR exchange rate over time'},\r\n    subtitle: {text: 'Click and drag in the plot area to zoom in'},\r\n    xAxis: { type: 'datetime'},\r\n    yAxis: {\r\n        title: {text: 'Exchange rate'}\r\n    },\r\n    legend: {enabled: false},\r\n    plotOptions: {\r\n        area: {\r\n            fillColor: {\r\n                linearGradient: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 0,\r\n                    y2: 1\r\n                },\r\n            },\r\n            marker: {radius: 2},\r\n            lineWidth: 1,\r\n            states: {\r\n                hover: {lineWidth: 1}\r\n            },\r\n            threshold: null\r\n        }\r\n    },\r\n\r\n    series: [{\r\n        type: 'area',\r\n        name: 'USD to EUR'\r\n    }]\r\n  }\r\n    await crypto.getCurrencies().then(res => this.setState({data: res.data}));\r\n    options.series[0].data = this.state.data;\r\n    this.setState({options: options});\r\n    console.log(this.state.options.series);    console.log(this.state.data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    //const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n              this.state.graphs.map(item => <HighchartsReact key={item.id} highcharts={Highcharts} options={this.state.options}/>): \"\"}\r\n            {/* {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options}/>\r\n                    </div> \r\n            ): \"\"} */}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}