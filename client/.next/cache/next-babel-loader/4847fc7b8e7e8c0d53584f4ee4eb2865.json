{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\customdata.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nexport default class CustomData extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: {},\n      data: {\n        data: [],\n        timestamp: \"\"\n      },\n      graphs: [],\n      options: {\n        type: 'columnrange',\n        title: {\n          text: 'My chart'\n        },\n        series: [{\n          data: [1, 2, 3]\n        }],\n        chart: {\n          backgroundColor: \"#eeeeee\"\n        }\n      }\n    });\n\n    _defineProperty(this, \"addGraph\", () => {\n      const graphs = [...this.state.graphs];\n      graphs.push({\n        id: 1,\n        data: {\n          name: \"Bitcoin\"\n        }\n      });\n      this.setState({\n        graphs\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({\n      user\n    });\n    await crypto.getCurrencies().then(res => this.setState({\n      data: res.data\n    }));\n    console.log(this.state.data);\n  }\n\n  render() {\n    const select = __jsx(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.data.data.map(item => __jsx(\"option\", {\n      value: item.id,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, item.name, \" - \", item.symbol)));\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Hello \", this.state.user.name), __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.addGraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"+\"), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.graphs.length > 0 ? this.state.graphs.map(item => __jsx(\"div\", {\n      className: \"col-md-6\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, select, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, item.data.name), __jsx(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))) : \"\"));\n  }\n\n}","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/customdata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","CustomData","user","data","timestamp","graphs","options","type","title","text","series","chart","backgroundColor","state","push","id","name","setState","componentDidMount","getCurrentUser","getCurrencies","then","res","console","log","render","select","map","item","symbol","addGraph","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: {\r\n        data: [],\r\n        timestamp: \"\"\r\n    },\r\n    graphs: [],\r\n    options: {\r\n      type: 'columnrange',\r\n      title: {\r\n        text: 'My chart'\r\n      },\r\n      series: [{\r\n        data: [1, 2, 3]\r\n      }],\r\n      chart:{\r\n        backgroundColor: \"#eeeeee\"\r\n      }\r\n    }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\tconst user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    await crypto.getCurrencies().then(res => this.setState({data: res.data}));\r\n    console.log(this.state.data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options}/>\r\n                    </div> \r\n            ): \"\"}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}