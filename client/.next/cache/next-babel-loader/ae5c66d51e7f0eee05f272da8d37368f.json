{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\WEB\\\\crypto\\\\client\\\\pages\\\\saveddata.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Layout from \"../components/layout\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport auth from \"../services/authService\";\nimport crypto from \"../services/cryptoService\";\nimport loading from \"../src/91.gif\";\nimport cryptoImg from \"../src/crypto-text.png\";\nvar chartOptions = {\n  chart: {\n    zoomType: 'x'\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: '%d-%m-%Y - %h:%m'\n    },\n    title: {\n      text: 'Date'\n    }\n  },\n  yAxis: {\n    title: {\n      text: 'Exchange rate'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1\n        },\n        stops: [[0, \"#7cb5ec\"], [0.5, \"#7cb5ec80\"], [0.9, \"#7cb5ff33\"]]\n      },\n      marker: {\n        radius: 2\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1\n        }\n      },\n      threshold: null\n    }\n  }\n};\n\nvar SavedData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SavedData, _Component);\n\n  function SavedData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SavedData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SavedData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      user: {},\n      jwt: \"\",\n      data: {\n        graphs: []\n      },\n      loaded: false,\n      graphs: [],\n      loadArr: [],\n      compare: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshData\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var graphs, loadArr, _ref2, data, i, bkOptions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              graphs = [];\n              loadArr = _toConsumableArray(_this.state.loadArr);\n              if (_this.state.graphs.length === 0) graphs = [];else _this.setState({\n                graphs: []\n              });\n              _context.next = 5;\n              return crypto.getSavedData(_this.state.user._id);\n\n            case 5:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n\n              _this.setState({\n                loaded: false\n              });\n\n              for (i = 0; i < data.graphs.length; i++) {\n                bkOptions = _objectSpread({}, chartOptions);\n                bkOptions.title = {\n                  text: \"\".concat(data.graphs[i].cryptocurrency.name, \" to \").concat(data.graphs[i].currency.name, \" exchange rate over time\")\n                };\n                bkOptions.series = [{\n                  type: \"line\",\n                  name: \"\".concat(data.graphs[i].cryptocurrency.name, \" to \").concat(data.graphs[i].currency.name),\n                  data: data.graphs[i].series.data,\n                  connectNulls: true\n                }];\n                bkOptions.xAxis.categories = data.graphs[i].categories;\n                graphs.push({\n                  chartOptions: bkOptions,\n                  cryptocurrency: {\n                    name: data.graphs[i].cryptocurrency.name,\n                    value: data.graphs[i].cryptocurrency.value\n                  },\n                  currency: {\n                    name: data.graphs[i].currency.name,\n                    value: data.graphs[i].currency.value\n                  },\n                  live: false,\n                  image: data.graphs[i].image,\n                  graphId: data.graphs[i].graphId,\n                  date: data.graphs[i].date\n                });\n                loadArr.push(false);\n              }\n\n              _this.setState({\n                data: data,\n                loaded: true,\n                graphs: graphs,\n                loadArr: loadArr\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshSingle\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(index) {\n        var graphs, loadArr;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                graphs = _toConsumableArray(_this.state.graphs);\n                loadArr = _toConsumableArray(_this.state.loadArr);\n                loadArr[index] = true;\n                _context2.next = 5;\n                return _this.setState({\n                  loadArr: loadArr\n                });\n\n              case 5:\n                graphs[index].chartOptions.title = {\n                  text: \"\".concat(graphs[index].cryptocurrency.name, \" to \").concat(graphs[index].currency.name, \" exchange rate over time\")\n                };\n                graphs[index].chartOptions.series = [{\n                  type: \"line\",\n                  name: \"\".concat(graphs[index].cryptocurrency.name, \" to \").concat(graphs[index].currency.name),\n                  data: graphs[index].chartOptions.series[0].data,\n                  connectNulls: true\n                }];\n                graphs[index].chartOptions.xAxis.categories = graphs[index].chartOptions.xAxis.categories.filter(function (item) {\n                  return item % 2 !== 0;\n                });\n                loadArr[index] = false;\n\n                _this.setState({\n                  graphs: graphs,\n                  loadArr: loadArr,\n                  compare: false\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"compare\", function (e, index) {\n      if (e.target.checked) {\n        var worker = new Worker(\"static/service-worker.js\");\n\n        var graphs = _toConsumableArray(_this.state.graphs);\n\n        var loadArr = _toConsumableArray(_this.state.loadArr);\n\n        loadArr[index] = true;\n\n        _this.setState({\n          loadArr: loadArr\n        });\n\n        worker.onmessage = function (e) {\n          graphs[index].chartOptions.series.push({\n            type: \"line\",\n            name: \"NEW:\" + _this.state.graphs[index].chartOptions.series[0].name,\n            data: e.data.prices,\n            _colorIndex: 1,\n            connectNulls: true,\n            pointStart: 1,\n            pointInterval: 2\n          });\n          var dates = [];\n\n          for (var i = 0; i < e.data.time.length; i++) {\n            dates.push(graphs[index].chartOptions.xAxis.categories[i]);\n            dates.push(e.data.time[i]);\n          }\n\n          graphs[index].chartOptions.xAxis.categories = dates;\n          graphs[index].chartOptions.series[0].pointInterval = 2;\n          loadArr[index] = false;\n\n          _this.setState({\n            graphs: graphs,\n            loadArr: loadArr,\n            compare: true\n          });\n        };\n\n        worker.postMessage(\"\".concat(graphs[index].cryptocurrency.value, \",\").concat(graphs[index].currency.value, \",\").concat(_this.state.jwt));\n      } else _this.refreshSingle(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editGraph\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(index, action) {\n        var graphs, bkGraphs, graph;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                graphs = _toConsumableArray(_this.state.graphs);\n                if (action === \"remove\") graphs = graphs.filter(function (item, i) {\n                  return i !== index;\n                });\n                bkGraphs = [];\n                graphs.forEach(function (element, i) {\n                  bkGraphs.push({\n                    categories: element.chartOptions.xAxis.categories.length > 9 ? graphs[index].chartOptions.xAxis.categories.filter(function (item) {\n                      return item % 2 === 0;\n                    }) : element.chartOptions.xAxis.categories,\n                    series: action === \"save\" ? i === index ? element.chartOptions.series[1] : element.chartOptions.series[0] : element.chartOptions.series[0],\n                    graphId: element.graphId,\n                    cryptocurrency: {\n                      value: element.cryptocurrency.value,\n                      name: element.cryptocurrency.name\n                    },\n                    currency: {\n                      value: element.currency.value,\n                      name: element.currency.name\n                    },\n                    date: new Date(),\n                    image: element.image\n                  });\n                });\n                graph = {\n                  userId: _this.state.user._id,\n                  graphs: bkGraphs\n                };\n                console.log(bkGraphs);\n                _context3.next = 8;\n                return crypto.replaceGraphs(graph);\n\n              case 8:\n                _this.setState({\n                  graphs: graphs\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(SavedData, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var user, jwt;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return auth.getCurrentUser();\n\n              case 2:\n                user = _context4.sent;\n                jwt = auth.getJwt();\n                this.setState({\n                  user: user,\n                  jwt: jwt\n                });\n                this.refreshData();\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: cryptoImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        style: {\n          fontFamily: \"Courier New\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Saved Data\")), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), this.state.loaded && __jsx(\"div\", {\n        className: \"col-md-12 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Refresh\")), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.refreshData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"fas fa-sync\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })))), this.state.loaded ? __jsx(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.graphs.length > 0 ? this.state.graphs.map(function (item, index) {\n        return __jsx(\"div\", {\n          key: item.graphId,\n          className: \"pt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          src: item.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-9 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, !_this2.state.loading && !_this2.state.loadArr[index] ? __jsx(HighchartsReact, {\n          key: item.id,\n          highcharts: Highcharts,\n          options: item.chartOptions,\n          allowChartUpdate: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }) : __jsx(\"div\", {\n          className: \"mx-auto text-center\",\n          style: {\n            paddingTop: \"20%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"Cryptocurrency\"))), __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"text\",\n          value: item.cryptocurrency.name,\n          className: \"form-control text-center shadow\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"To currency\"))), __jsx(\"div\", {\n          className: \"pt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"text\",\n          value: item.currency.name,\n          className: \"form-control text-center shadow\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-md-12 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"Compare with current data\")), __jsx(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this2.compare(e, index);\n          },\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"Delete\")), __jsx(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this2.editGraph(index, \"remove\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-minus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-md-6 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, \"Save\")), __jsx(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return _this2.editGraph(index, \"save\");\n          },\n          disabled: !_this2.state.compare,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }))))))));\n      }) : \"\") : __jsx(\"div\", {\n        className: \"w-50 mx-auto text-center\",\n        style: {\n          paddingTop: \"30vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SavedData;\n}(Component);\n\nexport { SavedData as default };","map":{"version":3,"sources":["D:/WEB/crypto/client/pages/saveddata.js"],"names":["React","Component","Layout","Highcharts","HighchartsReact","auth","crypto","loading","cryptoImg","chartOptions","chart","zoomType","xAxis","type","dateTimeLabelFormats","day","title","text","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","SavedData","user","jwt","data","graphs","loaded","loadArr","compare","state","length","setState","getSavedData","_id","i","bkOptions","cryptocurrency","name","currency","series","connectNulls","categories","push","value","live","image","graphId","date","index","filter","item","e","target","checked","worker","Worker","onmessage","prices","_colorIndex","pointStart","pointInterval","dates","time","postMessage","refreshSingle","action","bkGraphs","forEach","element","Date","graph","userId","console","log","replaceGraphs","getCurrentUser","getJwt","refreshData","fontFamily","map","id","paddingTop","editGraph"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GADa;AAEpBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE,UADA;AAENC,IAAAA,oBAAoB,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFhB;AAGAC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAHP,GAFa;AAOpBC,EAAAA,KAAK,EAAE;AACNF,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AADD,GAPa;AAUpBE,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAVY;AAWpBC,EAAAA,WAAW,EAAE;AACZC,IAAAA,IAAI,EAAE;AACLC,MAAAA,SAAS,EAAE;AACVC,QAAAA,cAAc,EAAE;AACfC,UAAAA,EAAE,EAAE,CADW;AAEfC,UAAAA,EAAE,EAAE,CAFW;AAGfC,UAAAA,EAAE,EAAE,CAHW;AAIfC,UAAAA,EAAE,EAAE;AAJW,SADN;AAOVC,QAAAA,KAAK,EAAE,CACN,CAAC,CAAD,EAAI,SAAJ,CADM,EAEN,CAAC,GAAD,EAAM,WAAN,CAFM,EAGN,CAAC,GAAD,EAAM,WAAN,CAHM;AAPG,OADN;AAcLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAdH;AAeLC,MAAAA,SAAS,EAAE,CAfN;AAgBLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,SAAS,EAAE;AAAb;AAAT,OAhBH;AAiBLG,MAAAA,SAAS,EAAE;AAjBN;AADM;AAXO,CAArB;;IAkCqBC,S;;;;;;;;;;;;;;;;;;4DACT;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,GAAG,EAAE,EAFD;AAGJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAE;AADN,OAHF;AAMJC,MAAAA,MAAM,EAAE,KANJ;AAOJD,MAAAA,MAAM,EAAE,EAPJ;AAQJE,MAAAA,OAAO,EAAE,EARL;AASJC,MAAAA,OAAO,EAAE;AATL,K;;;;;;6BAmBM;AAAA;;AAAA;AAAA;AAAA;AAAA;AACNH,cAAAA,MADM,GACG,EADH;AAEVE,cAAAA,OAFU,sBAEI,MAAKE,KAAL,CAAWF,OAFf;AAGV,kBAAG,MAAKE,KAAL,CAAWJ,MAAX,CAAkBK,MAAlB,KAA6B,CAAhC,EAAmCL,MAAM,GAAG,EAAT,CAAnC,KACK,MAAKM,QAAL,CAAc;AAACN,gBAAAA,MAAM,EAAC;AAAR,eAAd;AAJK;AAAA,qBAKWlC,MAAM,CAACyC,YAAP,CAAoB,MAAKH,KAAL,CAAWP,IAAX,CAAgBW,GAApC,CALX;;AAAA;AAAA;AAKHT,cAAAA,IALG,SAKHA,IALG;;AAMV,oBAAKO,QAAL,CAAc;AAACL,gBAAAA,MAAM,EAAE;AAAT,eAAd;;AACA,mBAAQQ,CAAR,GAAU,CAAV,EAAaA,CAAC,GAACV,IAAI,CAACC,MAAL,CAAYK,MAA3B,EAAmCI,CAAC,EAApC,EAAuC;AAC/BC,gBAAAA,SAD+B,qBACdzC,YADc;AAEnCyC,gBAAAA,SAAS,CAAClC,KAAV,GAAkB;AAAEC,kBAAAA,IAAI,YAAKsB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BC,IAAnC,iBAA8Cb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBD,IAAtE;AAAN,iBAAlB;AACAF,gBAAAA,SAAS,CAACI,MAAV,GAAmB,CAAC;AAChBzC,kBAAAA,IAAI,EAAE,MADU;AAEhBuC,kBAAAA,IAAI,YAAKb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BC,IAAnC,iBAA8Cb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBD,IAAtE,CAFY;AAGhBb,kBAAAA,IAAI,EAAEA,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeK,MAAf,CAAsBf,IAHZ;AAIhBgB,kBAAAA,YAAY,EAAE;AAJE,iBAAD,CAAnB;AAMTL,gBAAAA,SAAS,CAACtC,KAAV,CAAgB4C,UAAhB,GAA6BjB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeO,UAA5C;AACAhB,gBAAAA,MAAM,CAACiB,IAAP,CAAY;AACXhD,kBAAAA,YAAY,EAAEyC,SADH;AAEXC,kBAAAA,cAAc,EAAE;AACAC,oBAAAA,IAAI,EAAEb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BC,IADpC;AAEAM,oBAAAA,KAAK,EAAEnB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeE,cAAf,CAA8BO;AAFrC,mBAFL;AAMXL,kBAAAA,QAAQ,EAAE;AACMD,oBAAAA,IAAI,EAAEb,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBD,IADpC;AAEMM,oBAAAA,KAAK,EAAEnB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeI,QAAf,CAAwBK;AAFrC,mBANC;AAUXC,kBAAAA,IAAI,EAAE,KAVK;AAWCC,kBAAAA,KAAK,EAAErB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeW,KAXvB;AAYCC,kBAAAA,OAAO,EAAEtB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAeY,OAZzB;AAaCC,kBAAAA,IAAI,EAAEvB,IAAI,CAACC,MAAL,CAAYS,CAAZ,EAAea;AAbtB,iBAAZ;AAeApB,gBAAAA,OAAO,CAACe,IAAR,CAAa,KAAb;AACM;;AACD,oBAAKX,QAAL,CAAc;AAACP,gBAAAA,IAAI,EAAJA,IAAD;AAAOE,gBAAAA,MAAM,EAAE,IAAf;AAAqBD,gBAAAA,MAAM,EAANA,MAArB;AAA6BE,gBAAAA,OAAO,EAAPA;AAA7B,eAAd;;AAlCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;+BAqCE,kBAAOqB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNvB,gBAAAA,MADM,sBACO,MAAKI,KAAL,CAAWJ,MADlB;AAENE,gBAAAA,OAFM,sBAEQ,MAAKE,KAAL,CAAWF,OAFnB;AAGlBA,gBAAAA,OAAO,CAACqB,KAAD,CAAP,GAAiB,IAAjB;AAHkB;AAAA,uBAIZ,MAAKjB,QAAL,CAAc;AAACJ,kBAAAA,OAAO,EAAPA;AAAD,iBAAd,CAJY;;AAAA;AAKZF,gBAAAA,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2BO,KAA3B,GAAmC;AAAEC,kBAAAA,IAAI,YAAKuB,MAAM,CAACuB,KAAD,CAAN,CAAcZ,cAAd,CAA6BC,IAAlC,iBAA6CZ,MAAM,CAACuB,KAAD,CAAN,CAAcV,QAAd,CAAuBD,IAApE;AAAN,iBAAnC;AACAZ,gBAAAA,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2B6C,MAA3B,GAAoC,CAAC;AACjCzC,kBAAAA,IAAI,EAAE,MAD2B;AAEjCuC,kBAAAA,IAAI,YAAKZ,MAAM,CAACuB,KAAD,CAAN,CAAcZ,cAAd,CAA6BC,IAAlC,iBAA6CZ,MAAM,CAACuB,KAAD,CAAN,CAAcV,QAAd,CAAuBD,IAApE,CAF6B;AAGjCb,kBAAAA,IAAI,EAAEC,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2B6C,MAA3B,CAAkC,CAAlC,EAAqCf,IAHV;AAIjCgB,kBAAAA,YAAY,EAAE;AAJmB,iBAAD,CAApC;AAMAf,gBAAAA,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2BG,KAA3B,CAAiC4C,UAAjC,GAA8ChB,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2BG,KAA3B,CAAiC4C,UAAjC,CAA4CQ,MAA5C,CAAmD,UAAAC,IAAI;AAAA,yBAAIA,IAAI,GAAC,CAAL,KAAW,CAAf;AAAA,iBAAvD,CAA9C;AACAvB,gBAAAA,OAAO,CAACqB,KAAD,CAAP,GAAiB,KAAjB;;AACA,sBAAKjB,QAAL,CAAc;AACVN,kBAAAA,MAAM,EAAEA,MADE;AAEVE,kBAAAA,OAAO,EAAPA,OAFU;AAGVC,kBAAAA,OAAO,EAAE;AAHC,iBAAd;;AAdY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;8DAqBN,UAACuB,CAAD,EAAGH,KAAH,EAAa;AACnB,UAAGG,CAAC,CAACC,MAAF,CAASC,OAAZ,EAAoB;AAChB,YAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAW,0BAAX,CAAf;;AACA,YAAM9B,MAAM,sBAAO,MAAKI,KAAL,CAAWJ,MAAlB,CAAZ;;AACA,YAAME,OAAO,sBAAO,MAAKE,KAAL,CAAWF,OAAlB,CAAb;;AACAA,QAAAA,OAAO,CAACqB,KAAD,CAAP,GAAiB,IAAjB;;AACA,cAAKjB,QAAL,CAAc;AAACJ,UAAAA,OAAO,EAAPA;AAAD,SAAd;;AACA2B,QAAAA,MAAM,CAACE,SAAP,GAAmB,UAAAL,CAAC,EAAI;AACpB1B,UAAAA,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2B6C,MAA3B,CAAkCG,IAAlC,CAAuC;AACnC5C,YAAAA,IAAI,EAAE,MAD6B;AAEnCuC,YAAAA,IAAI,EAAE,SAAO,MAAKR,KAAL,CAAWJ,MAAX,CAAkBuB,KAAlB,EAAyBtD,YAAzB,CAAsC6C,MAAtC,CAA6C,CAA7C,EAAgDF,IAF1B;AAGnCb,YAAAA,IAAI,EAAE2B,CAAC,CAAC3B,IAAF,CAAOiC,MAHsB;AAInCC,YAAAA,WAAW,EAAE,CAJsB;AAKnClB,YAAAA,YAAY,EAAE,IALqB;AAMnCmB,YAAAA,UAAU,EAAE,CANuB;AAOnCC,YAAAA,aAAa,EAAE;AAPoB,WAAvC;AAUA,cAAMC,KAAK,GAAG,EAAd;;AACA,eAAI,IAAI3B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACiB,CAAC,CAAC3B,IAAF,CAAOsC,IAAP,CAAYhC,MAA3B,EAAmCI,CAAC,EAApC,EAAuC;AACnC2B,YAAAA,KAAK,CAACnB,IAAN,CAAWjB,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2BG,KAA3B,CAAiC4C,UAAjC,CAA4CP,CAA5C,CAAX;AACA2B,YAAAA,KAAK,CAACnB,IAAN,CAAWS,CAAC,CAAC3B,IAAF,CAAOsC,IAAP,CAAY5B,CAAZ,CAAX;AACH;;AACDT,UAAAA,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2BG,KAA3B,CAAiC4C,UAAjC,GAA8CoB,KAA9C;AACApC,UAAAA,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2B6C,MAA3B,CAAkC,CAAlC,EAAqCqB,aAArC,GAAsD,CAAtD;AACAjC,UAAAA,OAAO,CAACqB,KAAD,CAAP,GAAiB,KAAjB;;AACA,gBAAKjB,QAAL,CAAc;AAACN,YAAAA,MAAM,EAANA,MAAD;AAASE,YAAAA,OAAO,EAAPA,OAAT;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAd;AACH,SApBD;;AAqBA0B,QAAAA,MAAM,CAACS,WAAP,WAAsBtC,MAAM,CAACuB,KAAD,CAAN,CAAcZ,cAAd,CAA6BO,KAAnD,cAA4DlB,MAAM,CAACuB,KAAD,CAAN,CAAcV,QAAd,CAAuBK,KAAnF,cAA4F,MAAKd,KAAL,CAAWN,GAAvG;AACH,OA5BD,MA6BK,MAAKyC,aAAL,CAAmBhB,KAAnB;AACR,K;;;;;;;+BAEW,kBAAOA,KAAP,EAAciB,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACVxC,gBAAAA,MADU,sBACG,MAAKI,KAAL,CAAWJ,MADd;AAER,oBAAGwC,MAAM,KAAK,QAAd,EAAwBxC,MAAM,GAAGA,MAAM,CAACwB,MAAP,CAAc,UAACC,IAAD,EAAOhB,CAAP;AAAA,yBAAaA,CAAC,KAAKc,KAAnB;AAAA,iBAAd,CAAT;AACpBkB,gBAAAA,QAHI,GAGO,EAHP;AAIRzC,gBAAAA,MAAM,CAAC0C,OAAP,CAAe,UAACC,OAAD,EAAUlC,CAAV,EAAgB;AAC3BgC,kBAAAA,QAAQ,CAACxB,IAAT,CAAc;AACVD,oBAAAA,UAAU,EAAE2B,OAAO,CAAC1E,YAAR,CAAqBG,KAArB,CAA2B4C,UAA3B,CAAsCX,MAAtC,GAA+C,CAA/C,GAAmDL,MAAM,CAACuB,KAAD,CAAN,CAActD,YAAd,CAA2BG,KAA3B,CAAiC4C,UAAjC,CAA4CQ,MAA5C,CAAmD,UAAAC,IAAI;AAAA,6BAAIA,IAAI,GAAC,CAAL,KAAW,CAAf;AAAA,qBAAvD,CAAnD,GAA8HkB,OAAO,CAAC1E,YAAR,CAAqBG,KAArB,CAA2B4C,UAD3J;AAEVF,oBAAAA,MAAM,EAAE0B,MAAM,KAAK,MAAX,GAAoB/B,CAAC,KAAKc,KAAN,GAAcoB,OAAO,CAAC1E,YAAR,CAAqB6C,MAArB,CAA4B,CAA5B,CAAd,GAA+C6B,OAAO,CAAC1E,YAAR,CAAqB6C,MAArB,CAA4B,CAA5B,CAAnE,GAAoG6B,OAAO,CAAC1E,YAAR,CAAqB6C,MAArB,CAA4B,CAA5B,CAFlG;AAGVO,oBAAAA,OAAO,EAAEsB,OAAO,CAACtB,OAHP;AAIVV,oBAAAA,cAAc,EAAE;AACZO,sBAAAA,KAAK,EAAEyB,OAAO,CAAChC,cAAR,CAAuBO,KADlB;AAEZN,sBAAAA,IAAI,EAAE+B,OAAO,CAAChC,cAAR,CAAuBC;AAFjB,qBAJN;AAQVC,oBAAAA,QAAQ,EAAE;AACNK,sBAAAA,KAAK,EAAEyB,OAAO,CAAC9B,QAAR,CAAiBK,KADlB;AAENN,sBAAAA,IAAI,EAAE+B,OAAO,CAAC9B,QAAR,CAAiBD;AAFjB,qBARA;AAYVU,oBAAAA,IAAI,EAAE,IAAIsB,IAAJ,EAZI;AAaVxB,oBAAAA,KAAK,EAAEuB,OAAO,CAACvB;AAbL,mBAAd;AAeH,iBAhBD;AAiBMyB,gBAAAA,KArBE,GAqBM;AACVC,kBAAAA,MAAM,EAAE,MAAK1C,KAAL,CAAWP,IAAX,CAAgBW,GADd;AAEVR,kBAAAA,MAAM,EAAEyC;AAFE,iBArBN;AAyBRM,gBAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAzBQ;AAAA,uBA0BF3E,MAAM,CAACmF,aAAP,CAAqBJ,KAArB,CA1BE;;AAAA;AA2BR,sBAAKvC,QAAL,CAAc;AAAEN,kBAAAA,MAAM,EAANA;AAAF,iBAAd;;AA3BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;;;;;;;;;;uBAjGWnC,IAAI,CAACqF,cAAL,E;;;AAAbrD,gBAAAA,I;AACAC,gBAAAA,G,GAAMjC,IAAI,CAACsF,MAAL,E;AACZ,qBAAK7C,QAAL,CAAc;AAAET,kBAAAA,IAAI,EAAJA,IAAF;AAAQC,kBAAAA,GAAG,EAAHA;AAAR,iBAAd;AACA,qBAAKsD,WAAL;;;;;;;;;;;;;;;;;;6BA4HK;AAAA;;AACL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX;AAAK,QAAA,GAAG,EAAEpF,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,EAEX;AAAI,QAAA,KAAK,EAAE;AAACqF,UAAAA,UAAU,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxC,CAFW,EAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHW,EAIK,KAAKjD,KAAL,CAAWH,MAAX,IAAqB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,CADkB,EAElB;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKmD,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+D;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/D,CAFkB,CAJ1B,CADJ,EAUK,KAAKhD,KAAL,CAAWH,MAAX,GACG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,KAAL,CAAWJ,MAAX,CAAkBK,MAAlB,GAA2B,CAA3B,GACG,KAAKD,KAAL,CAAWJ,MAAX,CAAkBsD,GAAlB,CAAsB,UAAC7B,IAAD,EAAOF,KAAP;AAAA,eAClB;AAAK,UAAA,GAAG,EAAEE,IAAI,CAACJ,OAAf;AAAwB,UAAA,SAAS,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,GAAG,EAAEI,IAAI,CAACL,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,CAAC,MAAI,CAAChB,KAAL,CAAWrC,OAAZ,IAAuB,CAAC,MAAI,CAACqC,KAAL,CAAWF,OAAX,CAAmBqB,KAAnB,CAAxB,GAAoD,MAAC,eAAD;AAAiB,UAAA,GAAG,EAAEE,IAAI,CAAC8B,EAA3B;AAA+B,UAAA,UAAU,EAAE5F,UAA3C;AAAuD,UAAA,OAAO,EAAE8D,IAAI,CAACxD,YAArE;AAAmF,UAAA,gBAAgB,EAAI,IAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApD,GAAuK;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAqC,UAAA,KAAK,EAAE;AAACuF,YAAAA,UAAU,EAAE;AAAb,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiE;AAAK,UAAA,GAAG,EAAEzF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjE,CAD5K,CADJ,EAII;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAN,CADJ,CADJ,EAII;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACnC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE0D,IAAI,CAACd,cAAL,CAAoBC,IAA9C;AAAoD,UAAA,SAAS,EAAC,iCAA9D;AAAgG,UAAA,QAAQ,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmC,CAJJ,EAOI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAN,CADJ,CAPJ,EAUhC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACwC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEa,IAAI,CAACZ,QAAL,CAAcD,IAAxC;AAA8C,UAAA,SAAS,EAAC,iCAAxD;AAA0F,UAAA,QAAQ,MAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADxC,CAVgC,EAaI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAH,CADJ,EAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,QAAQ,EAAE,kBAACc,CAAD;AAAA,mBAAO,MAAI,CAACvB,OAAL,CAAauB,CAAb,EAAgBH,KAAhB,CAAP;AAAA,WAAjC;AAAgE,UAAA,SAAS,EAAC,cAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,EAKI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,CADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACkC,SAAL,CAAelC,KAAf,EAAqB,QAArB,CAAN;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkF;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlF,CAFJ,CALJ,EASI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,CADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACkC,SAAL,CAAelC,KAAf,EAAqB,MAArB,CAAN;AAAA,WAA7C;AAAiF,UAAA,QAAQ,EAAE,CAAC,MAAI,CAACnB,KAAL,CAAWD,OAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgH;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhH,CAFJ,CATJ,CAbJ,CADJ,CAJJ,CAHJ,CADkB;AAAA,OAAtB,CADH,GA0CO,EA3CZ,CADH,GA8CX;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,KAAK,EAAE;AAACqD,UAAAA,UAAU,EAAE;AAAb,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuE;AAAK,QAAA,GAAG,EAAEzF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvE,CAxDM,CADJ;AA4DH;;;;EA1MkCN,S;;SAAlBmC,S","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nimport loading from \"../src/91.gif\";\r\nimport cryptoImg from \"../src/crypto-text.png\";\r\n\r\nconst chartOptions = {\r\n\tchart: { zoomType: 'x' },\r\n\txAxis: {\r\n\t\ttype: 'datetime',\r\n\t\tdateTimeLabelFormats: { day: '%d-%m-%Y - %h:%m' },\r\n        title: { text: 'Date' },\r\n\t},\r\n\tyAxis: {\r\n\t\ttitle: { text: 'Exchange rate' }\r\n\t},\r\n\tlegend: { enabled: false },\r\n\tplotOptions: {\r\n\t\tarea: {\r\n\t\t\tfillColor: {\r\n\t\t\t\tlinearGradient: {\r\n\t\t\t\t\tx1: 0,\r\n\t\t\t\t\ty1: 0,\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\ty2: 1\r\n\t\t\t\t},\r\n\t\t\t\tstops: [\r\n\t\t\t\t\t[0, \"#7cb5ec\"],\r\n\t\t\t\t\t[0.5, \"#7cb5ec80\"],\r\n\t\t\t\t\t[0.9, \"#7cb5ff33\"]\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tmarker: { radius: 2 },\r\n\t\t\tlineWidth: 1,\r\n\t\t\tstates: { hover: { lineWidth: 1 } },\r\n\t\t\tthreshold: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class SavedData extends Component {\r\n    state = {\r\n        user: {},\r\n        jwt: \"\",\r\n        data: {\r\n            graphs: []\r\n        },\r\n        loaded: false,\r\n        graphs: [],\r\n        loadArr: [],\r\n        compare: false\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const user = await auth.getCurrentUser();\r\n        const jwt = auth.getJwt();\r\n        this.setState({ user, jwt });\r\n        this.refreshData();\r\n    }\r\n\r\n    refreshData = async () => {\r\n        let graphs = [];\r\n\t\tconst loadArr = [...this.state.loadArr];\r\n        if(this.state.graphs.length === 0) graphs = [];\r\n        else this.setState({graphs:[]});\r\n        const {data} = await crypto.getSavedData(this.state.user._id);\r\n        this.setState({loaded: false});\r\n        for(let i=0; i<data.graphs.length; i++){\r\n            let bkOptions = { ...chartOptions };\r\n            bkOptions.title = { text: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name} exchange rate over time` };\r\n            bkOptions.series = [{\r\n                type: \"line\",\r\n                name: `${data.graphs[i].cryptocurrency.name} to ${data.graphs[i].currency.name}`,\r\n                data: data.graphs[i].series.data,\r\n                connectNulls: true\r\n            }];\r\n\t\t\tbkOptions.xAxis.categories = data.graphs[i].categories;\r\n\t\t\tgraphs.push({\r\n\t\t\t\tchartOptions: bkOptions,\r\n\t\t\t\tcryptocurrency: {\r\n                    name: data.graphs[i].cryptocurrency.name,\r\n                    value: data.graphs[i].cryptocurrency.value\r\n                },\r\n\t\t\t\tcurrency: {\r\n                    name: data.graphs[i].currency.name,\r\n                    value: data.graphs[i].currency.value\r\n                },\r\n\t\t\t\tlive: false,\r\n                image: data.graphs[i].image,\r\n                graphId: data.graphs[i].graphId,\r\n                date: data.graphs[i].date\r\n            });\r\n\t\t\tloadArr.push(false);\r\n        }\r\n        this.setState({data, loaded: true, graphs, loadArr});\r\n    }\r\n\r\n    refreshSingle = async (index) => {\r\n        const graphs = [...this.state.graphs];\r\n        const loadArr = [...this.state.loadArr];\r\n\t\tloadArr[index] = true;\r\n\t\tawait this.setState({loadArr});\r\n        graphs[index].chartOptions.title = { text: `${graphs[index].cryptocurrency.name} to ${graphs[index].currency.name} exchange rate over time` };\r\n        graphs[index].chartOptions.series = [{\r\n            type: \"line\",\r\n            name: `${graphs[index].cryptocurrency.name} to ${graphs[index].currency.name}`,\r\n            data: graphs[index].chartOptions.series[0].data,\r\n            connectNulls: true\r\n        }];\r\n        graphs[index].chartOptions.xAxis.categories = graphs[index].chartOptions.xAxis.categories.filter(item => item%2 !== 0);\r\n        loadArr[index] = false;\r\n        this.setState({\r\n            graphs: graphs,\r\n            loadArr,\r\n            compare: false\r\n        })\r\n    }\r\n\r\n    compare = (e,index) => {\r\n        if(e.target.checked){\r\n            const worker = new Worker(\"static/service-worker.js\");\r\n            const graphs = [...this.state.graphs];\r\n            const loadArr = [...this.state.loadArr];\r\n            loadArr[index] = true;\r\n            this.setState({loadArr});\r\n            worker.onmessage = e => {\r\n                graphs[index].chartOptions.series.push({\r\n                    type: \"line\",\r\n                    name: \"NEW:\"+this.state.graphs[index].chartOptions.series[0].name,\r\n                    data: e.data.prices,\r\n                    _colorIndex: 1,\r\n                    connectNulls: true,\r\n                    pointStart: 1,\r\n                    pointInterval: 2\r\n                });\r\n\r\n                const dates = [];\r\n                for(let i=0; i<e.data.time.length; i++){\r\n                    dates.push(graphs[index].chartOptions.xAxis.categories[i]);\r\n                    dates.push(e.data.time[i]);\r\n                }\r\n                graphs[index].chartOptions.xAxis.categories = dates;\r\n                graphs[index].chartOptions.series[0].pointInterval =  2;\r\n                loadArr[index] = false;\r\n                this.setState({graphs, loadArr, compare: true});\r\n            }\r\n            worker.postMessage(`${graphs[index].cryptocurrency.value},${graphs[index].currency.value},${this.state.jwt}`);\r\n        }\r\n        else this.refreshSingle(index);\r\n    }\r\n\r\n    editGraph = async (index, action) => {\r\n\t\tlet graphs = [...this.state.graphs];\r\n        if(action === \"remove\") graphs = graphs.filter((item, i) => i !== index);\r\n        let bkGraphs = [];\r\n        graphs.forEach((element, i) => {\r\n            bkGraphs.push({\r\n                categories: element.chartOptions.xAxis.categories.length > 9 ? graphs[index].chartOptions.xAxis.categories.filter(item => item%2 === 0) : element.chartOptions.xAxis.categories,\r\n                series: action === \"save\" ? i === index ? element.chartOptions.series[1] : element.chartOptions.series[0] : element.chartOptions.series[0],\r\n                graphId: element.graphId,\r\n                cryptocurrency: {\r\n                    value: element.cryptocurrency.value,\r\n                    name: element.cryptocurrency.name\r\n                },\r\n                currency: {\r\n                    value: element.currency.value,\r\n                    name: element.currency.name\r\n                },\r\n                date: new Date,\r\n                image: element.image\r\n            })\r\n        });\r\n        const graph = {\r\n            userId: this.state.user._id,\r\n            graphs: bkGraphs\r\n        }\r\n        console.log(bkGraphs);\r\n        await crypto.replaceGraphs(graph);\r\n        this.setState({ graphs });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div className=\"w-50 mx-auto text-center pt-5\">\r\n\t\t\t\t\t<img src={cryptoImg} />\r\n\t\t\t\t\t<h1 style={{fontFamily: \"Courier New\"}}><strong>Saved Data</strong></h1>\r\n\t\t\t\t\t<hr/>\r\n                    {this.state.loaded && <div className=\"col-md-12 mt-3\">\r\n                        <p><strong>Refresh</strong></p>\r\n                        <button className=\"btn btn-success\" onClick={this.refreshData}><i className=\"fas fa-sync\"/></button>\r\n                    </div>}\r\n                </div>\r\n                {this.state.loaded ?\r\n                    <div className=\"text-center\">\r\n                        {this.state.graphs.length > 0 ?\r\n                            this.state.graphs.map((item, index) =>\r\n                                <div key={item.graphId} className=\"pt-3\">\r\n                                    <hr/>\r\n                                    <img src={item.image} />\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col-md-9 text-center\">\r\n                                            {!this.state.loading && !this.state.loadArr[index] ? <HighchartsReact key={item.id} highcharts={Highcharts} options={item.chartOptions} allowChartUpdate = {true}  /> : <div className=\"mx-auto text-center\" style={{paddingTop: \"20%\"}}><img src={loading} /></div>}\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"pt-2\">\r\n                                                    <span><strong>Cryptocurrency</strong></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                                <div className=\"pt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={item.cryptocurrency.name} className=\"form-control text-center shadow\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                                <div className=\"pt-2\">\r\n                                                    <span><strong>To currency</strong></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"pt-2\">\r\n                                                    <input type=\"text\" value={item.currency.name} className=\"form-control text-center shadow\" disabled/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12 mt-3\">\r\n                                                        <p><strong>Compare with current data</strong></p>\r\n                                                        <input type=\"checkbox\" onChange={(e) => this.compare(e, index)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 mt-3\">\r\n                                                        <p><strong>Delete</strong></p>\r\n                                                        <button className=\"btn btn-danger\" onClick={() => this.editGraph(index,\"remove\")}><i className=\"fas fa-minus\"/></button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 mt-3\">\r\n                                                        <p><strong>Save</strong></p>\r\n                                                        <button className=\"btn btn-primary\" onClick={() => this.editGraph(index,\"save\")} disabled={!this.state.compare}><i className=\"fas fa-save\"/></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\"}\r\n                    </div>\r\n\t\t\t\t: <div className=\"w-50 mx-auto text-center\" style={{paddingTop: \"30vh\"}}><img src={loading} /></div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}