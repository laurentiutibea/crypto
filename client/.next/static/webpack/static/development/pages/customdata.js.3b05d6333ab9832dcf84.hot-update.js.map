{"version":3,"file":"static/webpack/static\\development\\pages\\customdata.js.3b05d6333ab9832dcf84.hot-update.js","sources":["webpack:///./pages/customdata.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from \"../components/layout\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport auth from \"../services/authService\";\r\nimport crypto from \"../services/cryptoService\";\r\n\r\nexport default class CustomData extends Component {\r\n  state = {\r\n    user: {},\r\n    data: [],\r\n    graphs: [],\r\n    options: {}\r\n  }\r\n  \r\n  async componentDidMount() {\r\n\tconst user = auth.getCurrentUser();\r\n    this.setState({user});\r\n    const options = {\r\n      chart: {zoomType: 'x' },\r\n      title: {text: 'BTC to EUR exchange rate over time'},\r\n      subtitle: {text: 'Click and drag in the plot area to zoom in'},\r\n      xAxis: { type: 'datetime'},\r\n      yAxis: {\r\n          title: {text: 'Exchange rate'}\r\n      },\r\n      legend: {enabled: false},\r\n      plotOptions: {\r\n          area: {\r\n              fillColor: {\r\n                  linearGradient: {\r\n                      x1: 0,\r\n                      y1: 0,\r\n                      x2: 0,\r\n                      y2: 1\r\n                  },\r\n              },\r\n              marker: {radius: 2},\r\n              lineWidth: 1,\r\n              states: {\r\n                  hover: {lineWidth: 1}\r\n              },\r\n              threshold: null\r\n          }\r\n      }\r\n    }\r\n    await crypto.getCurrencies().then(res => {\r\n      options.seri\r\n      this.setState({\r\n        data: res.data,\r\n        options: {\r\n          series: [{\r\n            type: \"area\",\r\n            name: \"BTC to EUR\",\r\n            data: res.data\r\n          }]\r\n        }})\r\n    });\r\n    //options.series[0].data = this.state.data;\r\n    console.log(this.state.options);    console.log(this.state.data);\r\n  }\r\n\r\n  addGraph = () => {\r\n      const graphs = [...this.state.graphs];\r\n      graphs.push({\r\n          id: 1,\r\n          data: {\r\n              name: \"Bitcoin\"\r\n          }\r\n      })\r\n      this.setState({graphs});\r\n  }\r\n\r\n  render() {\r\n    //const select = <select>{this.state.data.data.map(item => (<option value={item.id} key={item.id}>{item.name} - {item.symbol}</option>))}</select>\r\n\r\n    return (\r\n      <Layout>\r\n          <p>Hello {this.state.user.name}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.addGraph}>+</button>\r\n          <div className=\"row\">\r\n            {this.state.graphs.length > 0 ? \r\n              this.state.graphs.map(item => <HighchartsReact key={item.id} highcharts={Highcharts} options={this.state.options}/>): \"\"}\r\n            {/* {this.state.graphs.length > 0 ? \r\n                this.state.graphs.map(item => \r\n                    <div className=\"col-md-6\" key={item.id}>\r\n                        {select}\r\n                        <p>{item.data.name}</p>\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options}/>\r\n                    </div> \r\n            ): \"\"} */}\r\n          </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAqDA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;AAxDA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAdA;AADA;AATA;;AA4BA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAFA;AASA;AACA;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;AAaA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AAvFA;AACA;;;;;A","sourceRoot":""}